// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: xfusionmock.proto

package xfusionmock

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Req struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ping          string                 `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Req) Reset() {
	*x = Req{}
	mi := &file_xfusionmock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{0}
}

func (x *Req) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Res struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pong          string                 `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Res) Reset() {
	*x = Res{}
	mi := &file_xfusionmock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{1}
}

func (x *Res) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ReqPushTest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          string                 `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqPushTest) Reset() {
	*x = ReqPushTest{}
	mi := &file_xfusionmock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqPushTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPushTest) ProtoMessage() {}

func (x *ReqPushTest) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPushTest.ProtoReflect.Descriptor instead.
func (*ReqPushTest) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{2}
}

func (x *ReqPushTest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type ResPushTest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResPushTest) Reset() {
	*x = ResPushTest{}
	mi := &file_xfusionmock_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResPushTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPushTest) ProtoMessage() {}

func (x *ResPushTest) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPushTest.ProtoReflect.Descriptor instead.
func (*ResPushTest) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{3}
}

type ReqPushPoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 是否手动推送 默认 false-自动 true-手动
	PushMode bool `protobuf:"varint,1,opt,name=pushMode,proto3" json:"pushMode,omitempty"`
	// 推送数据
	Data          *TerminalData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqPushPoint) Reset() {
	*x = ReqPushPoint{}
	mi := &file_xfusionmock_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqPushPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPushPoint) ProtoMessage() {}

func (x *ReqPushPoint) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPushPoint.ProtoReflect.Descriptor instead.
func (*ReqPushPoint) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{4}
}

func (x *ReqPushPoint) GetPushMode() bool {
	if x != nil {
		return x.PushMode
	}
	return false
}

func (x *ReqPushPoint) GetData() *TerminalData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResPushPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResPushPoint) Reset() {
	*x = ResPushPoint{}
	mi := &file_xfusionmock_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResPushPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPushPoint) ProtoMessage() {}

func (x *ResPushPoint) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPushPoint.ProtoReflect.Descriptor instead.
func (*ResPushPoint) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{5}
}

type ReqPushAlarm struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 是否手动推送 默认 false-自动 true-手动
	PushMode bool `protobuf:"varint,1,opt,name=pushMode,proto3" json:"pushMode,omitempty"`
	// 推送数据
	Data          *AlarmData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqPushAlarm) Reset() {
	*x = ReqPushAlarm{}
	mi := &file_xfusionmock_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqPushAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPushAlarm) ProtoMessage() {}

func (x *ReqPushAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPushAlarm.ProtoReflect.Descriptor instead.
func (*ReqPushAlarm) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{6}
}

func (x *ReqPushAlarm) GetPushMode() bool {
	if x != nil {
		return x.PushMode
	}
	return false
}

func (x *ReqPushAlarm) GetData() *AlarmData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResPushAlarm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResPushAlarm) Reset() {
	*x = ResPushAlarm{}
	mi := &file_xfusionmock_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResPushAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPushAlarm) ProtoMessage() {}

func (x *ResPushAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPushAlarm.ProtoReflect.Descriptor instead.
func (*ResPushAlarm) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{7}
}

type ReqPushEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 是否手动推送 默认 false-自动 true-手动
	PushMode bool `protobuf:"varint,1,opt,name=pushMode,proto3" json:"pushMode,omitempty"`
	// 推送数据
	Data          *EventData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqPushEvent) Reset() {
	*x = ReqPushEvent{}
	mi := &file_xfusionmock_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqPushEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPushEvent) ProtoMessage() {}

func (x *ReqPushEvent) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPushEvent.ProtoReflect.Descriptor instead.
func (*ReqPushEvent) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{8}
}

func (x *ReqPushEvent) GetPushMode() bool {
	if x != nil {
		return x.PushMode
	}
	return false
}

func (x *ReqPushEvent) GetData() *EventData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResPushEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResPushEvent) Reset() {
	*x = ResPushEvent{}
	mi := &file_xfusionmock_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResPushEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPushEvent) ProtoMessage() {}

func (x *ResPushEvent) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPushEvent.ProtoReflect.Descriptor instead.
func (*ResPushEvent) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{9}
}

type ReqPushTerminalBind struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 是否手动推送 默认 false-自动 true-手动
	PushMode bool `protobuf:"varint,1,opt,name=pushMode,proto3" json:"pushMode,omitempty"`
	// 推送数据
	Data          *TerminalBind `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqPushTerminalBind) Reset() {
	*x = ReqPushTerminalBind{}
	mi := &file_xfusionmock_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqPushTerminalBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPushTerminalBind) ProtoMessage() {}

func (x *ReqPushTerminalBind) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPushTerminalBind.ProtoReflect.Descriptor instead.
func (*ReqPushTerminalBind) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{10}
}

func (x *ReqPushTerminalBind) GetPushMode() bool {
	if x != nil {
		return x.PushMode
	}
	return false
}

func (x *ReqPushTerminalBind) GetData() *TerminalBind {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResPushTerminalBind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResPushTerminalBind) Reset() {
	*x = ResPushTerminalBind{}
	mi := &file_xfusionmock_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResPushTerminalBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResPushTerminalBind) ProtoMessage() {}

func (x *ResPushTerminalBind) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResPushTerminalBind.ProtoReflect.Descriptor instead.
func (*ResPushTerminalBind) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{11}
}

// TerminalBind 结构体
type TerminalBind struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// kafka tag
	DataTagV1 string `protobuf:"bytes,1,opt,name=dataTagV1,proto3" json:"dataTagV1,omitempty"`
	// 绑定动作： BIND ｜ UNBIND
	Action string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	// 终端ID（唯一标识）
	TerminalId int64 `protobuf:"varint,3,opt,name=terminalId,proto3" json:"terminalId,omitempty"`
	// 终端唯一编号（12位字符）
	TerminalNo string `protobuf:"bytes,4,opt,name=terminalNo,proto3" json:"terminalNo,omitempty"`
	// 员工身份证号
	StaffIdCardNo string `protobuf:"bytes,5,opt,name=staffIdCardNo,proto3" json:"staffIdCardNo,omitempty"`
	// 跟踪对象ID（关联业务系统）
	TrackId int64 `protobuf:"varint,6,opt,name=trackId,proto3" json:"trackId,omitempty"`
	// 对象编号（如车牌号"沪A12345"）
	TrackNo string `protobuf:"bytes,7,opt,name=trackNo,proto3" json:"trackNo,omitempty"`
	// 对象类型：CAR-车辆, STAFF-人员
	TrackType string `protobuf:"bytes,8,opt,name=trackType,proto3" json:"trackType,omitempty"`
	// 监控对象显示名称（如车牌号"沪A12345"）
	TrackName string `protobuf:"bytes,9,opt,name=trackName,proto3" json:"trackName,omitempty"`
	// 操作时间，北京时间 eg: 2024-07-01 10:00:00
	ActionTime    string `protobuf:"bytes,10,opt,name=actionTime,proto3" json:"actionTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminalBind) Reset() {
	*x = TerminalBind{}
	mi := &file_xfusionmock_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalBind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalBind) ProtoMessage() {}

func (x *TerminalBind) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalBind.ProtoReflect.Descriptor instead.
func (*TerminalBind) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{12}
}

func (x *TerminalBind) GetDataTagV1() string {
	if x != nil {
		return x.DataTagV1
	}
	return ""
}

func (x *TerminalBind) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *TerminalBind) GetTerminalId() int64 {
	if x != nil {
		return x.TerminalId
	}
	return 0
}

func (x *TerminalBind) GetTerminalNo() string {
	if x != nil {
		return x.TerminalNo
	}
	return ""
}

func (x *TerminalBind) GetStaffIdCardNo() string {
	if x != nil {
		return x.StaffIdCardNo
	}
	return ""
}

func (x *TerminalBind) GetTrackId() int64 {
	if x != nil {
		return x.TrackId
	}
	return 0
}

func (x *TerminalBind) GetTrackNo() string {
	if x != nil {
		return x.TrackNo
	}
	return ""
}

func (x *TerminalBind) GetTrackType() string {
	if x != nil {
		return x.TrackType
	}
	return ""
}

func (x *TerminalBind) GetTrackName() string {
	if x != nil {
		return x.TrackName
	}
	return ""
}

func (x *TerminalBind) GetActionTime() string {
	if x != nil {
		return x.ActionTime
	}
	return ""
}

// EventData 结构体
type EventData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// kafka tag
	DataTagV1 string `protobuf:"bytes,1,opt,name=dataTagV1,proto3" json:"dataTagV1,omitempty"`
	// 事件ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// 事件名称
	EventTitle string `protobuf:"bytes,3,opt,name=eventTitle,proto3" json:"eventTitle,omitempty"`
	// 事件类型
	EventCode string `protobuf:"bytes,4,opt,name=eventCode,proto3" json:"eventCode,omitempty"`
	// 事件时间（服务端）
	ServerTime int64 `protobuf:"varint,5,opt,name=serverTime,proto3" json:"serverTime,omitempty"`
	// 事件时间（终端）
	EpochTime int64 `protobuf:"varint,6,opt,name=epochTime,proto3" json:"epochTime,omitempty"`
	// 终端信息
	TerminalInfo *TerminalInfo `protobuf:"bytes,7,opt,name=terminalInfo,proto3" json:"terminalInfo,omitempty"`
	// 位置
	Position      *Position `protobuf:"bytes,8,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventData) Reset() {
	*x = EventData{}
	mi := &file_xfusionmock_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventData) ProtoMessage() {}

func (x *EventData) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventData.ProtoReflect.Descriptor instead.
func (*EventData) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{13}
}

func (x *EventData) GetDataTagV1() string {
	if x != nil {
		return x.DataTagV1
	}
	return ""
}

func (x *EventData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventData) GetEventTitle() string {
	if x != nil {
		return x.EventTitle
	}
	return ""
}

func (x *EventData) GetEventCode() string {
	if x != nil {
		return x.EventCode
	}
	return ""
}

func (x *EventData) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *EventData) GetEpochTime() int64 {
	if x != nil {
		return x.EpochTime
	}
	return 0
}

func (x *EventData) GetTerminalInfo() *TerminalInfo {
	if x != nil {
		return x.TerminalInfo
	}
	return nil
}

func (x *EventData) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

// TerminalData 结构体
type TerminalData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// kafka tag
	DataTagV1 string `protobuf:"bytes,1,opt,name=dataTagV1,proto3" json:"dataTagV1,omitempty"`
	// 终端信息
	TerminalInfo *TerminalInfo `protobuf:"bytes,2,opt,name=terminalInfo,proto3" json:"terminalInfo,omitempty"`
	// 位置点上报时间（Unix时间戳，毫秒）
	EpochTime int64 `protobuf:"varint,3,opt,name=epochTime,proto3" json:"epochTime,omitempty"`
	// 定位信息
	Location *Location `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	// 建筑信息
	BuildingInfo *BuildingInfo `protobuf:"bytes,5,opt,name=buildingInfo,proto3" json:"buildingInfo,omitempty"`
	// 设备状态
	Status        *Status `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminalData) Reset() {
	*x = TerminalData{}
	mi := &file_xfusionmock_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalData) ProtoMessage() {}

func (x *TerminalData) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalData.ProtoReflect.Descriptor instead.
func (*TerminalData) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{14}
}

func (x *TerminalData) GetDataTagV1() string {
	if x != nil {
		return x.DataTagV1
	}
	return ""
}

func (x *TerminalData) GetTerminalInfo() *TerminalInfo {
	if x != nil {
		return x.TerminalInfo
	}
	return nil
}

func (x *TerminalData) GetEpochTime() int64 {
	if x != nil {
		return x.EpochTime
	}
	return 0
}

func (x *TerminalData) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *TerminalData) GetBuildingInfo() *BuildingInfo {
	if x != nil {
		return x.BuildingInfo
	}
	return nil
}

func (x *TerminalData) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// AlarmData 结构体
type AlarmData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// kafka tag
	DataTagV1 string `protobuf:"bytes,1,opt,name=dataTagV1,proto3" json:"dataTagV1,omitempty"`
	// 报警唯一标识
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// 报警自定义名称（最大长度50字符）
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 报警编号（格式：ALARM-日期-序号）
	AlarmNo string `protobuf:"bytes,4,opt,name=alarmNo,proto3" json:"alarmNo,omitempty"`
	// 报警类型编码（见AlarmType枚举）
	AlarmCode string `protobuf:"bytes,5,opt,name=alarmCode,proto3" json:"alarmCode,omitempty"`
	// 报警等级：1-紧急 2-严重 3-警告
	Level int32 `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`
	// 关联终端编号列表（至少包含一个有效终端号）
	TerminalNoList []string `protobuf:"bytes,7,rep,name=terminalNoList,proto3" json:"terminalNoList,omitempty"`
	// 报警涉及的主体信息列表
	TrackInfoList []*TerminalInfo `protobuf:"bytes,8,rep,name=trackInfoList,proto3" json:"trackInfoList,omitempty"`
	// 监控对象类型：CAR-车辆 STAFF-人员
	TrackType string `protobuf:"bytes,9,opt,name=trackType,proto3" json:"trackType,omitempty"`
	// 报警触发位置（WGS84坐标系）
	Position *LocationPosition `protobuf:"bytes,10,opt,name=position,proto3" json:"position,omitempty"`
	// 报警开始围栏code列表
	StartFences []*FenceInfo `protobuf:"bytes,11,rep,name=startFences,proto3" json:"startFences,omitempty"`
	// 报警结束围栏code列表
	EndFences []*FenceInfo `protobuf:"bytes,12,rep,name=endFences,proto3" json:"endFences,omitempty"`
	// 报警开始时间（Unix时间戳，毫秒级）
	StartTime int64 `protobuf:"varint,13,opt,name=startTime,proto3" json:"startTime,omitempty"`
	// 报警结束时间（Unix时间戳，毫秒级）
	EndTime int64 `protobuf:"varint,14,opt,name=endTime,proto3" json:"endTime,omitempty"`
	// 报警持续时长（单位：秒），由结束时间-开始时间计算得出
	Duration int32 `protobuf:"varint,15,opt,name=duration,proto3" json:"duration,omitempty"`
	// 报警当前状态：ON-进行中 OFF-已结束
	AlarmStatus   string `protobuf:"bytes,16,opt,name=alarmStatus,proto3" json:"alarmStatus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlarmData) Reset() {
	*x = AlarmData{}
	mi := &file_xfusionmock_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlarmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmData) ProtoMessage() {}

func (x *AlarmData) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmData.ProtoReflect.Descriptor instead.
func (*AlarmData) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{15}
}

func (x *AlarmData) GetDataTagV1() string {
	if x != nil {
		return x.DataTagV1
	}
	return ""
}

func (x *AlarmData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AlarmData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlarmData) GetAlarmNo() string {
	if x != nil {
		return x.AlarmNo
	}
	return ""
}

func (x *AlarmData) GetAlarmCode() string {
	if x != nil {
		return x.AlarmCode
	}
	return ""
}

func (x *AlarmData) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AlarmData) GetTerminalNoList() []string {
	if x != nil {
		return x.TerminalNoList
	}
	return nil
}

func (x *AlarmData) GetTrackInfoList() []*TerminalInfo {
	if x != nil {
		return x.TrackInfoList
	}
	return nil
}

func (x *AlarmData) GetTrackType() string {
	if x != nil {
		return x.TrackType
	}
	return ""
}

func (x *AlarmData) GetPosition() *LocationPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *AlarmData) GetStartFences() []*FenceInfo {
	if x != nil {
		return x.StartFences
	}
	return nil
}

func (x *AlarmData) GetEndFences() []*FenceInfo {
	if x != nil {
		return x.EndFences
	}
	return nil
}

func (x *AlarmData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AlarmData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *AlarmData) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AlarmData) GetAlarmStatus() string {
	if x != nil {
		return x.AlarmStatus
	}
	return ""
}

// FenceInfo 围栏信息
type FenceInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 围栏code
	FenceCode     string `protobuf:"bytes,1,opt,name=fenceCode,proto3" json:"fenceCode,omitempty"`
	OrgCode       string `protobuf:"bytes,7,opt,name=orgCode,proto3" json:"orgCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FenceInfo) Reset() {
	*x = FenceInfo{}
	mi := &file_xfusionmock_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FenceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FenceInfo) ProtoMessage() {}

func (x *FenceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FenceInfo.ProtoReflect.Descriptor instead.
func (*FenceInfo) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{16}
}

func (x *FenceInfo) GetFenceCode() string {
	if x != nil {
		return x.FenceCode
	}
	return ""
}

func (x *FenceInfo) GetOrgCode() string {
	if x != nil {
		return x.OrgCode
	}
	return ""
}

// LocationPosition 位置坐标
type LocationPosition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 纬度（-90~90）
	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	// 经度（-180~180）
	Lon float64 `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
	// 海拔高度（米）
	Alt           float64 `protobuf:"fixed64,3,opt,name=alt,proto3" json:"alt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationPosition) Reset() {
	*x = LocationPosition{}
	mi := &file_xfusionmock_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationPosition) ProtoMessage() {}

func (x *LocationPosition) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationPosition.ProtoReflect.Descriptor instead.
func (*LocationPosition) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{17}
}

func (x *LocationPosition) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *LocationPosition) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *LocationPosition) GetAlt() float64 {
	if x != nil {
		return x.Alt
	}
	return 0
}

// TerminalInfo 终端详细信息
type TerminalInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 终端ID（唯一标识）
	TerminalId int64 `protobuf:"varint,1,opt,name=terminalId,proto3" json:"terminalId,omitempty"`
	// 终端唯一编号（12位字符）
	TerminalNo string `protobuf:"bytes,2,opt,name=terminalNo,proto3" json:"terminalNo,omitempty"`
	// 跟踪对象ID（关联业务系统）
	TrackId int64 `protobuf:"varint,3,opt,name=trackId,proto3" json:"trackId,omitempty"`
	// 对象编号（如车牌号"沪A12345"）
	TrackNo string `protobuf:"bytes,4,opt,name=trackNo,proto3" json:"trackNo,omitempty"`
	// 对象类型：CAR-车辆, STAFF-人员
	TrackType string `protobuf:"bytes,5,opt,name=trackType,proto3" json:"trackType,omitempty"`
	// 监控对象显示名称（如车牌号"沪A12345"）
	TrackName     string `protobuf:"bytes,6,opt,name=trackName,proto3" json:"trackName,omitempty"`
	OrgCode       string `protobuf:"bytes,7,opt,name=orgCode,proto3" json:"orgCode,omitempty"`
	OrgName       string `protobuf:"bytes,8,opt,name=orgName,proto3" json:"orgName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminalInfo) Reset() {
	*x = TerminalInfo{}
	mi := &file_xfusionmock_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalInfo) ProtoMessage() {}

func (x *TerminalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalInfo.ProtoReflect.Descriptor instead.
func (*TerminalInfo) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{18}
}

func (x *TerminalInfo) GetTerminalId() int64 {
	if x != nil {
		return x.TerminalId
	}
	return 0
}

func (x *TerminalInfo) GetTerminalNo() string {
	if x != nil {
		return x.TerminalNo
	}
	return ""
}

func (x *TerminalInfo) GetTrackId() int64 {
	if x != nil {
		return x.TrackId
	}
	return 0
}

func (x *TerminalInfo) GetTrackNo() string {
	if x != nil {
		return x.TrackNo
	}
	return ""
}

func (x *TerminalInfo) GetTrackType() string {
	if x != nil {
		return x.TrackType
	}
	return ""
}

func (x *TerminalInfo) GetTrackName() string {
	if x != nil {
		return x.TrackName
	}
	return ""
}

func (x *TerminalInfo) GetOrgCode() string {
	if x != nil {
		return x.OrgCode
	}
	return ""
}

func (x *TerminalInfo) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

// Location 定位数据
type Location struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 经纬度坐标
	Position *Position `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	// 速度（千米/小时，保留4位小数）
	Speed float64 `protobuf:"fixed64,2,opt,name=speed,proto3" json:"speed,omitempty"`
	// 方向角度（0-360度，正北为0）
	Direction float64 `protobuf:"fixed64,3,opt,name=direction,proto3" json:"direction,omitempty"`
	// 定位模式（如GNSS、LBS等）
	LocationMode string `protobuf:"bytes,4,opt,name=locationMode,proto3" json:"locationMode,omitempty"`
	// 卫星数量（GPS定位时有效）
	SatelliteNum int32 `protobuf:"varint,5,opt,name=satelliteNum,proto3" json:"satelliteNum,omitempty"`
	// GGA状态：1-单点定位，4-固定解
	GgaStatus     int32 `protobuf:"varint,6,opt,name=ggaStatus,proto3" json:"ggaStatus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_xfusionmock_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{19}
}

func (x *Location) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Location) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Location) GetDirection() float64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *Location) GetLocationMode() string {
	if x != nil {
		return x.LocationMode
	}
	return ""
}

func (x *Location) GetSatelliteNum() int32 {
	if x != nil {
		return x.SatelliteNum
	}
	return 0
}

func (x *Location) GetGgaStatus() int32 {
	if x != nil {
		return x.GgaStatus
	}
	return 0
}

// Position 经纬度坐标点
type Position struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 纬度（WGS84坐标系）
	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	// 经度（WGS84坐标系）
	Lon float64 `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
	// 海拔高度（米）
	Alt           float64 `protobuf:"fixed64,3,opt,name=alt,proto3" json:"alt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_xfusionmock_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{20}
}

func (x *Position) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Position) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *Position) GetAlt() float64 {
	if x != nil {
		return x.Alt
	}
	return 0
}

// BuildingInfo 建筑信息
type BuildingInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 建筑ID（地理围栏标识）
	BuildingId int64 `protobuf:"varint,1,opt,name=buildingId,proto3" json:"buildingId,omitempty"`
	// 楼层编号（地下层用负数表示）
	FloorNo       int32 `protobuf:"varint,2,opt,name=floorNo,proto3" json:"floorNo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildingInfo) Reset() {
	*x = BuildingInfo{}
	mi := &file_xfusionmock_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingInfo) ProtoMessage() {}

func (x *BuildingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingInfo.ProtoReflect.Descriptor instead.
func (*BuildingInfo) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{21}
}

func (x *BuildingInfo) GetBuildingId() int64 {
	if x != nil {
		return x.BuildingId
	}
	return 0
}

func (x *BuildingInfo) GetFloorNo() int32 {
	if x != nil {
		return x.FloorNo
	}
	return 0
}

// Status 设备实时状态
type Status struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ACC点火状态：true-车辆启动
	Acc bool `protobuf:"varint,1,opt,name=acc,proto3" json:"acc,omitempty"`
	// 紧急报警状态：true-触发报警
	Emergency bool `protobuf:"varint,2,opt,name=emergency,proto3" json:"emergency,omitempty"`
	// 主电源状态：true-电源断开
	MainSourceDown bool `protobuf:"varint,3,opt,name=mainSourceDown,proto3" json:"mainSourceDown,omitempty"`
	// 信号强度（0-31，越大越好）
	Signal int32 `protobuf:"varint,4,opt,name=signal,proto3" json:"signal,omitempty"`
	// 剩余电量百分比（0-100）
	Battery int32 `protobuf:"varint,5,opt,name=battery,proto3" json:"battery,omitempty"`
	// 运动状态：0-静止，1-移动
	MoveState     int32 `protobuf:"varint,6,opt,name=moveState,proto3" json:"moveState,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_xfusionmock_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_xfusionmock_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_xfusionmock_proto_rawDescGZIP(), []int{22}
}

func (x *Status) GetAcc() bool {
	if x != nil {
		return x.Acc
	}
	return false
}

func (x *Status) GetEmergency() bool {
	if x != nil {
		return x.Emergency
	}
	return false
}

func (x *Status) GetMainSourceDown() bool {
	if x != nil {
		return x.MainSourceDown
	}
	return false
}

func (x *Status) GetSignal() int32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *Status) GetBattery() int32 {
	if x != nil {
		return x.Battery
	}
	return 0
}

func (x *Status) GetMoveState() int32 {
	if x != nil {
		return x.MoveState
	}
	return 0
}

var File_xfusionmock_proto protoreflect.FileDescriptor

const file_xfusionmock_proto_rawDesc = "" +
	"\n" +
	"\x11xfusionmock.proto\x12\vxfusionmock\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x17validate/validate.proto\"%\n" +
	"\x03Req\x12\x1e\n" +
	"\x04ping\x18\x01 \x01(\tB\n" +
	"\xe0A\x02\xfaB\x04r\x02\x10\x01R\x04ping\"\x19\n" +
	"\x03Res\x12\x12\n" +
	"\x04pong\x18\x01 \x01(\tR\x04pong\"!\n" +
	"\vReqPushTest\x12\x12\n" +
	"\x04body\x18\x01 \x01(\tR\x04body\"\r\n" +
	"\vResPushTest\"Y\n" +
	"\fReqPushPoint\x12\x1a\n" +
	"\bpushMode\x18\x01 \x01(\bR\bpushMode\x12-\n" +
	"\x04data\x18\x02 \x01(\v2\x19.xfusionmock.TerminalDataR\x04data\"\x0e\n" +
	"\fResPushPoint\"V\n" +
	"\fReqPushAlarm\x12\x1a\n" +
	"\bpushMode\x18\x01 \x01(\bR\bpushMode\x12*\n" +
	"\x04data\x18\x02 \x01(\v2\x16.xfusionmock.AlarmDataR\x04data\"\x0e\n" +
	"\fResPushAlarm\"V\n" +
	"\fReqPushEvent\x12\x1a\n" +
	"\bpushMode\x18\x01 \x01(\bR\bpushMode\x12*\n" +
	"\x04data\x18\x02 \x01(\v2\x16.xfusionmock.EventDataR\x04data\"\x0e\n" +
	"\fResPushEvent\"`\n" +
	"\x13ReqPushTerminalBind\x12\x1a\n" +
	"\bpushMode\x18\x01 \x01(\bR\bpushMode\x12-\n" +
	"\x04data\x18\x02 \x01(\v2\x19.xfusionmock.TerminalBindR\x04data\"\x15\n" +
	"\x13ResPushTerminalBind\"\xba\x02\n" +
	"\fTerminalBind\x12\x1c\n" +
	"\tdataTagV1\x18\x01 \x01(\tR\tdataTagV1\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12\x1e\n" +
	"\n" +
	"terminalId\x18\x03 \x01(\x03R\n" +
	"terminalId\x12\x1e\n" +
	"\n" +
	"terminalNo\x18\x04 \x01(\tR\n" +
	"terminalNo\x12$\n" +
	"\rstaffIdCardNo\x18\x05 \x01(\tR\rstaffIdCardNo\x12\x18\n" +
	"\atrackId\x18\x06 \x01(\x03R\atrackId\x12\x18\n" +
	"\atrackNo\x18\a \x01(\tR\atrackNo\x12\x1c\n" +
	"\ttrackType\x18\b \x01(\tR\ttrackType\x12\x1c\n" +
	"\ttrackName\x18\t \x01(\tR\ttrackName\x12\x1e\n" +
	"\n" +
	"actionTime\x18\n" +
	" \x01(\tR\n" +
	"actionTime\"\xa7\x02\n" +
	"\tEventData\x12\x1c\n" +
	"\tdataTagV1\x18\x01 \x01(\tR\tdataTagV1\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x1e\n" +
	"\n" +
	"eventTitle\x18\x03 \x01(\tR\n" +
	"eventTitle\x12\x1c\n" +
	"\teventCode\x18\x04 \x01(\tR\teventCode\x12\x1e\n" +
	"\n" +
	"serverTime\x18\x05 \x01(\x03R\n" +
	"serverTime\x12\x1c\n" +
	"\tepochTime\x18\x06 \x01(\x03R\tepochTime\x12=\n" +
	"\fterminalInfo\x18\a \x01(\v2\x19.xfusionmock.TerminalInfoR\fterminalInfo\x121\n" +
	"\bposition\x18\b \x01(\v2\x15.xfusionmock.PositionR\bposition\"\xa8\x02\n" +
	"\fTerminalData\x12\x1c\n" +
	"\tdataTagV1\x18\x01 \x01(\tR\tdataTagV1\x12=\n" +
	"\fterminalInfo\x18\x02 \x01(\v2\x19.xfusionmock.TerminalInfoR\fterminalInfo\x12\x1c\n" +
	"\tepochTime\x18\x03 \x01(\x03R\tepochTime\x121\n" +
	"\blocation\x18\x04 \x01(\v2\x15.xfusionmock.LocationR\blocation\x12=\n" +
	"\fbuildingInfo\x18\x05 \x01(\v2\x19.xfusionmock.BuildingInfoR\fbuildingInfo\x12+\n" +
	"\x06status\x18\x06 \x01(\v2\x13.xfusionmock.StatusR\x06status\"\xc3\x04\n" +
	"\tAlarmData\x12\x1c\n" +
	"\tdataTagV1\x18\x01 \x01(\tR\tdataTagV1\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\aalarmNo\x18\x04 \x01(\tR\aalarmNo\x12\x1c\n" +
	"\talarmCode\x18\x05 \x01(\tR\talarmCode\x12\x14\n" +
	"\x05level\x18\x06 \x01(\x05R\x05level\x12&\n" +
	"\x0eterminalNoList\x18\a \x03(\tR\x0eterminalNoList\x12?\n" +
	"\rtrackInfoList\x18\b \x03(\v2\x19.xfusionmock.TerminalInfoR\rtrackInfoList\x12\x1c\n" +
	"\ttrackType\x18\t \x01(\tR\ttrackType\x129\n" +
	"\bposition\x18\n" +
	" \x01(\v2\x1d.xfusionmock.LocationPositionR\bposition\x128\n" +
	"\vstartFences\x18\v \x03(\v2\x16.xfusionmock.FenceInfoR\vstartFences\x124\n" +
	"\tendFences\x18\f \x03(\v2\x16.xfusionmock.FenceInfoR\tendFences\x12\x1c\n" +
	"\tstartTime\x18\r \x01(\x03R\tstartTime\x12\x18\n" +
	"\aendTime\x18\x0e \x01(\x03R\aendTime\x12\x1a\n" +
	"\bduration\x18\x0f \x01(\x05R\bduration\x12 \n" +
	"\valarmStatus\x18\x10 \x01(\tR\valarmStatus\"C\n" +
	"\tFenceInfo\x12\x1c\n" +
	"\tfenceCode\x18\x01 \x01(\tR\tfenceCode\x12\x18\n" +
	"\aorgCode\x18\a \x01(\tR\aorgCode\"H\n" +
	"\x10LocationPosition\x12\x10\n" +
	"\x03lat\x18\x01 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lon\x18\x02 \x01(\x01R\x03lon\x12\x10\n" +
	"\x03alt\x18\x03 \x01(\x01R\x03alt\"\xf2\x01\n" +
	"\fTerminalInfo\x12\x1e\n" +
	"\n" +
	"terminalId\x18\x01 \x01(\x03R\n" +
	"terminalId\x12\x1e\n" +
	"\n" +
	"terminalNo\x18\x02 \x01(\tR\n" +
	"terminalNo\x12\x18\n" +
	"\atrackId\x18\x03 \x01(\x03R\atrackId\x12\x18\n" +
	"\atrackNo\x18\x04 \x01(\tR\atrackNo\x12\x1c\n" +
	"\ttrackType\x18\x05 \x01(\tR\ttrackType\x12\x1c\n" +
	"\ttrackName\x18\x06 \x01(\tR\ttrackName\x12\x18\n" +
	"\aorgCode\x18\a \x01(\tR\aorgCode\x12\x18\n" +
	"\aorgName\x18\b \x01(\tR\aorgName\"\xd7\x01\n" +
	"\bLocation\x121\n" +
	"\bposition\x18\x01 \x01(\v2\x15.xfusionmock.PositionR\bposition\x12\x14\n" +
	"\x05speed\x18\x02 \x01(\x01R\x05speed\x12\x1c\n" +
	"\tdirection\x18\x03 \x01(\x01R\tdirection\x12\"\n" +
	"\flocationMode\x18\x04 \x01(\tR\flocationMode\x12\"\n" +
	"\fsatelliteNum\x18\x05 \x01(\x05R\fsatelliteNum\x12\x1c\n" +
	"\tggaStatus\x18\x06 \x01(\x05R\tggaStatus\"@\n" +
	"\bPosition\x12\x10\n" +
	"\x03lat\x18\x01 \x01(\x01R\x03lat\x12\x10\n" +
	"\x03lon\x18\x02 \x01(\x01R\x03lon\x12\x10\n" +
	"\x03alt\x18\x03 \x01(\x01R\x03alt\"H\n" +
	"\fBuildingInfo\x12\x1e\n" +
	"\n" +
	"buildingId\x18\x01 \x01(\x03R\n" +
	"buildingId\x12\x18\n" +
	"\afloorNo\x18\x02 \x01(\x05R\afloorNo\"\xb0\x01\n" +
	"\x06Status\x12\x10\n" +
	"\x03acc\x18\x01 \x01(\bR\x03acc\x12\x1c\n" +
	"\temergency\x18\x02 \x01(\bR\temergency\x12&\n" +
	"\x0emainSourceDown\x18\x03 \x01(\bR\x0emainSourceDown\x12\x16\n" +
	"\x06signal\x18\x04 \x01(\x05R\x06signal\x12\x18\n" +
	"\abattery\x18\x05 \x01(\x05R\abattery\x12\x1c\n" +
	"\tmoveState\x18\x06 \x01(\x05R\tmoveState2\xbe\x03\n" +
	"\x0eXFusionMockRpc\x12K\n" +
	"\x04Ping\x12\x10.xfusionmock.Req\x1a\x10.xfusionmock.Res\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/api/v1/xfusion/ping\x12>\n" +
	"\bPushTest\x12\x18.xfusionmock.ReqPushTest\x1a\x18.xfusionmock.ResPushTest\x12A\n" +
	"\tPushPoint\x12\x19.xfusionmock.ReqPushPoint\x1a\x19.xfusionmock.ResPushPoint\x12A\n" +
	"\tPushAlarm\x12\x19.xfusionmock.ReqPushAlarm\x1a\x19.xfusionmock.ResPushAlarm\x12A\n" +
	"\tPushEvent\x12\x19.xfusionmock.ReqPushEvent\x1a\x19.xfusionmock.ResPushEvent\x12V\n" +
	"\x10PushTerminalBind\x12 .xfusionmock.ReqPushTerminalBind\x1a .xfusionmock.ResPushTerminalBindB\x0fZ\r./xfusionmockb\x06proto3"

var (
	file_xfusionmock_proto_rawDescOnce sync.Once
	file_xfusionmock_proto_rawDescData []byte
)

func file_xfusionmock_proto_rawDescGZIP() []byte {
	file_xfusionmock_proto_rawDescOnce.Do(func() {
		file_xfusionmock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_xfusionmock_proto_rawDesc), len(file_xfusionmock_proto_rawDesc)))
	})
	return file_xfusionmock_proto_rawDescData
}

var file_xfusionmock_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_xfusionmock_proto_goTypes = []any{
	(*Req)(nil),                 // 0: xfusionmock.Req
	(*Res)(nil),                 // 1: xfusionmock.Res
	(*ReqPushTest)(nil),         // 2: xfusionmock.ReqPushTest
	(*ResPushTest)(nil),         // 3: xfusionmock.ResPushTest
	(*ReqPushPoint)(nil),        // 4: xfusionmock.ReqPushPoint
	(*ResPushPoint)(nil),        // 5: xfusionmock.ResPushPoint
	(*ReqPushAlarm)(nil),        // 6: xfusionmock.ReqPushAlarm
	(*ResPushAlarm)(nil),        // 7: xfusionmock.ResPushAlarm
	(*ReqPushEvent)(nil),        // 8: xfusionmock.ReqPushEvent
	(*ResPushEvent)(nil),        // 9: xfusionmock.ResPushEvent
	(*ReqPushTerminalBind)(nil), // 10: xfusionmock.ReqPushTerminalBind
	(*ResPushTerminalBind)(nil), // 11: xfusionmock.ResPushTerminalBind
	(*TerminalBind)(nil),        // 12: xfusionmock.TerminalBind
	(*EventData)(nil),           // 13: xfusionmock.EventData
	(*TerminalData)(nil),        // 14: xfusionmock.TerminalData
	(*AlarmData)(nil),           // 15: xfusionmock.AlarmData
	(*FenceInfo)(nil),           // 16: xfusionmock.FenceInfo
	(*LocationPosition)(nil),    // 17: xfusionmock.LocationPosition
	(*TerminalInfo)(nil),        // 18: xfusionmock.TerminalInfo
	(*Location)(nil),            // 19: xfusionmock.Location
	(*Position)(nil),            // 20: xfusionmock.Position
	(*BuildingInfo)(nil),        // 21: xfusionmock.BuildingInfo
	(*Status)(nil),              // 22: xfusionmock.Status
}
var file_xfusionmock_proto_depIdxs = []int32{
	14, // 0: xfusionmock.ReqPushPoint.data:type_name -> xfusionmock.TerminalData
	15, // 1: xfusionmock.ReqPushAlarm.data:type_name -> xfusionmock.AlarmData
	13, // 2: xfusionmock.ReqPushEvent.data:type_name -> xfusionmock.EventData
	12, // 3: xfusionmock.ReqPushTerminalBind.data:type_name -> xfusionmock.TerminalBind
	18, // 4: xfusionmock.EventData.terminalInfo:type_name -> xfusionmock.TerminalInfo
	20, // 5: xfusionmock.EventData.position:type_name -> xfusionmock.Position
	18, // 6: xfusionmock.TerminalData.terminalInfo:type_name -> xfusionmock.TerminalInfo
	19, // 7: xfusionmock.TerminalData.location:type_name -> xfusionmock.Location
	21, // 8: xfusionmock.TerminalData.buildingInfo:type_name -> xfusionmock.BuildingInfo
	22, // 9: xfusionmock.TerminalData.status:type_name -> xfusionmock.Status
	18, // 10: xfusionmock.AlarmData.trackInfoList:type_name -> xfusionmock.TerminalInfo
	17, // 11: xfusionmock.AlarmData.position:type_name -> xfusionmock.LocationPosition
	16, // 12: xfusionmock.AlarmData.startFences:type_name -> xfusionmock.FenceInfo
	16, // 13: xfusionmock.AlarmData.endFences:type_name -> xfusionmock.FenceInfo
	20, // 14: xfusionmock.Location.position:type_name -> xfusionmock.Position
	0,  // 15: xfusionmock.XFusionMockRpc.Ping:input_type -> xfusionmock.Req
	2,  // 16: xfusionmock.XFusionMockRpc.PushTest:input_type -> xfusionmock.ReqPushTest
	4,  // 17: xfusionmock.XFusionMockRpc.PushPoint:input_type -> xfusionmock.ReqPushPoint
	6,  // 18: xfusionmock.XFusionMockRpc.PushAlarm:input_type -> xfusionmock.ReqPushAlarm
	8,  // 19: xfusionmock.XFusionMockRpc.PushEvent:input_type -> xfusionmock.ReqPushEvent
	10, // 20: xfusionmock.XFusionMockRpc.PushTerminalBind:input_type -> xfusionmock.ReqPushTerminalBind
	1,  // 21: xfusionmock.XFusionMockRpc.Ping:output_type -> xfusionmock.Res
	3,  // 22: xfusionmock.XFusionMockRpc.PushTest:output_type -> xfusionmock.ResPushTest
	5,  // 23: xfusionmock.XFusionMockRpc.PushPoint:output_type -> xfusionmock.ResPushPoint
	7,  // 24: xfusionmock.XFusionMockRpc.PushAlarm:output_type -> xfusionmock.ResPushAlarm
	9,  // 25: xfusionmock.XFusionMockRpc.PushEvent:output_type -> xfusionmock.ResPushEvent
	11, // 26: xfusionmock.XFusionMockRpc.PushTerminalBind:output_type -> xfusionmock.ResPushTerminalBind
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_xfusionmock_proto_init() }
func file_xfusionmock_proto_init() {
	if File_xfusionmock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_xfusionmock_proto_rawDesc), len(file_xfusionmock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xfusionmock_proto_goTypes,
		DependencyIndexes: file_xfusionmock_proto_depIdxs,
		MessageInfos:      file_xfusionmock_proto_msgTypes,
	}.Build()
	File_xfusionmock_proto = out.File
	file_xfusionmock_proto_goTypes = nil
	file_xfusionmock_proto_depIdxs = nil
}
