// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: bridgemqtt.proto

package server

import (
	"context"

	"zero-service/app/bridgemqtt/bridgemqtt"
	"zero-service/app/bridgemqtt/internal/logic"
	"zero-service/app/bridgemqtt/internal/svc"
)

type BridgeMqttServer struct {
	svcCtx *svc.ServiceContext
	bridgemqtt.UnimplementedBridgeMqttServer
}

func NewBridgeMqttServer(svcCtx *svc.ServiceContext) *BridgeMqttServer {
	return &BridgeMqttServer{
		svcCtx: svcCtx,
	}
}

func (s *BridgeMqttServer) Ping(ctx context.Context, in *bridgemqtt.Req) (*bridgemqtt.Res, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

// 发布消息
func (s *BridgeMqttServer) Publish(ctx context.Context, in *bridgemqtt.PublishReq) (*bridgemqtt.PublishRes, error) {
	l := logic.NewPublishLogic(ctx, s.svcCtx)
	return l.Publish(in)
}

// 带 traceId 的发布消息 内部服务链路追踪
func (s *BridgeMqttServer) PublishWithTrace(ctx context.Context, in *bridgemqtt.PublishWithTraceReq) (*bridgemqtt.PublishWithTraceRes, error) {
	l := logic.NewPublishWithTraceLogic(ctx, s.svcCtx)
	return l.PublishWithTrace(in)
}
