syntax = "proto3";

package ieccaller;
option go_package = "./ieccaller";

message Req {
  string ping = 1;
}

message Res {
  string pong = 1;
}

message SendTestCmdReq {
  string host = 1;
  int32 port = 2;
  int32 coa = 3;
}

message SendTestCmdRes {
}

message SendReadCmdReq {
  string host = 1;
  int32 port = 2;
  int32 coa = 3;
  int32 ioa = 4;
}

message SendReadCmdRes {
}

message SendInterrogationCmdReq {
  string host = 1;
  int32 port = 2;
  int32 coa = 3;
}

message SendInterrogationCmdRes {
}

message SendCounterInterrogationCmdReq {
  string host = 1;
  int32 port = 2;
  int32 coa = 3;
}

message SendCounterInterrogationCmdRes {
}

service IecCaller {
  rpc Ping (Req) returns (Res);
  // 发送带时标的测试命令
  rpc SendTestCmd (SendTestCmdReq) returns (SendTestCmdRes);
  // 发起读命令
  rpc SendReadCmd (SendReadCmdReq) returns (SendReadCmdRes);
  // 发送总召唤
  rpc SendInterrogationCmd (SendInterrogationCmdReq) returns (SendInterrogationCmdRes);
  // 累积量召唤
  rpc SendCounterInterrogationCmd(SendCounterInterrogationCmdReq) returns (SendCounterInterrogationCmdRes);
}