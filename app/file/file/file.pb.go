// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: file.proto

package file

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Req struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ping          string                 `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Req) Reset() {
	*x = Req{}
	mi := &file_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{0}
}

func (x *Req) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Res struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pong          string                 `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Res) Reset() {
	*x = Res{}
	mi := &file_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{1}
}

func (x *Res) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type Oss struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Category      int64                  `protobuf:"varint,3,opt,name=category,proto3" json:"category,omitempty"`    // 所属分类
	OssCode       string                 `protobuf:"bytes,4,opt,name=ossCode,proto3" json:"ossCode,omitempty"`       // 资源编号
	Endpoint      string                 `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`     // 资源地址
	AccessKey     string                 `protobuf:"bytes,6,opt,name=accessKey,proto3" json:"accessKey,omitempty"`   // accessKey
	SecretKey     string                 `protobuf:"bytes,7,opt,name=secretKey,proto3" json:"secretKey,omitempty"`   // secretKey
	BucketName    string                 `protobuf:"bytes,8,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 空间名
	AppId         string                 `protobuf:"bytes,9,opt,name=appId,proto3" json:"appId,omitempty"`           // 应用ID TencentCOS需要
	Region        string                 `protobuf:"bytes,10,opt,name=region,proto3" json:"region,omitempty"`        // 地域简称 TencentCOS需要
	Remark        string                 `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`        // 备注
	Status        int64                  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`       // 状态
	CreateTime    string                 `protobuf:"bytes,13,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    string                 `protobuf:"bytes,15,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Oss) Reset() {
	*x = Oss{}
	mi := &file_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Oss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oss) ProtoMessage() {}

func (x *Oss) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oss.ProtoReflect.Descriptor instead.
func (*Oss) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{2}
}

func (x *Oss) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Oss) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Oss) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *Oss) GetOssCode() string {
	if x != nil {
		return x.OssCode
	}
	return ""
}

func (x *Oss) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Oss) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *Oss) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *Oss) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *Oss) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Oss) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Oss) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Oss) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Oss) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Oss) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Link          string                 `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`                 // 文件地址
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`             // 域名地址
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                 // 文件名
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                // 文件大小
	FormatSize    string                 `protobuf:"bytes,5,opt,name=formatSize,proto3" json:"formatSize,omitempty"`     // 格式化文件大小
	OriginalName  string                 `protobuf:"bytes,6,opt,name=originalName,proto3" json:"originalName,omitempty"` // 初始文件名
	AttachId      string                 `protobuf:"bytes,7,opt,name=attachId,proto3" json:"attachId,omitempty"`         // 附件表ID
	Md5           string                 `protobuf:"bytes,8,opt,name=md5,proto3" json:"md5,omitempty"`                   // 原文件md5
	Meta          *ImageMeta             `protobuf:"bytes,9,opt,name=meta,proto3" json:"meta,omitempty"`                 // 图片信息
	ThumbLink     string                 `protobuf:"bytes,10,opt,name=thumbLink,proto3" json:"thumbLink,omitempty"`      // 缩略图地址
	ThumbName     string                 `protobuf:"bytes,11,opt,name=ThumbName,proto3" json:"ThumbName,omitempty"`      // 缩略图文件名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{3}
}

func (x *File) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *File) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetFormatSize() string {
	if x != nil {
		return x.FormatSize
	}
	return ""
}

func (x *File) GetOriginalName() string {
	if x != nil {
		return x.OriginalName
	}
	return ""
}

func (x *File) GetAttachId() string {
	if x != nil {
		return x.AttachId
	}
	return ""
}

func (x *File) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *File) GetMeta() *ImageMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *File) GetThumbLink() string {
	if x != nil {
		return x.ThumbLink
	}
	return ""
}

func (x *File) GetThumbName() string {
	if x != nil {
		return x.ThumbName
	}
	return ""
}

type ImageMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Longitude     float64                `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"`   // 经度
	Latitude      float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`     // 纬度
	Time          string                 `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`               // 拍摄时间
	ImgHeight     int32                  `protobuf:"varint,4,opt,name=imgHeight,proto3" json:"imgHeight,omitempty"`    // 高
	ImgWidth      int32                  `protobuf:"varint,5,opt,name=imgWidth,proto3" json:"imgWidth,omitempty"`      // 宽
	Altitude      float64                `protobuf:"fixed64,6,opt,name=altitude,proto3" json:"altitude,omitempty"`     // 高度
	CameraModel   string                 `protobuf:"bytes,7,opt,name=cameraModel,proto3" json:"cameraModel,omitempty"` // 相机型号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageMeta) Reset() {
	*x = ImageMeta{}
	mi := &file_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMeta) ProtoMessage() {}

func (x *ImageMeta) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMeta.ProtoReflect.Descriptor instead.
func (*ImageMeta) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{4}
}

func (x *ImageMeta) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *ImageMeta) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ImageMeta) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ImageMeta) GetImgHeight() int32 {
	if x != nil {
		return x.ImgHeight
	}
	return 0
}

func (x *ImageMeta) GetImgWidth() int32 {
	if x != nil {
		return x.ImgWidth
	}
	return 0
}

func (x *ImageMeta) GetAltitude() float64 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *ImageMeta) GetCameraModel() string {
	if x != nil {
		return x.CameraModel
	}
	return ""
}

type OssFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Link          string                 `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`               // 文件地址
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`               // 文件名
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`              // 文件大小
	FormatSize    string                 `protobuf:"bytes,4,opt,name=formatSize,proto3" json:"formatSize,omitempty"`   // 格式化文件大小
	PutTime       string                 `protobuf:"bytes,5,opt,name=putTime,proto3" json:"putTime,omitempty"`         // 文件上传时间
	ContentType   string                 `protobuf:"bytes,6,opt,name=contentType,proto3" json:"contentType,omitempty"` // 文件类型
	SignUrl       string                 `protobuf:"bytes,7,opt,name=signUrl,proto3" json:"signUrl,omitempty"`         // 签名URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OssFile) Reset() {
	*x = OssFile{}
	mi := &file_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OssFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssFile) ProtoMessage() {}

func (x *OssFile) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssFile.ProtoReflect.Descriptor instead.
func (*OssFile) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{5}
}

func (x *OssFile) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *OssFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OssFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *OssFile) GetFormatSize() string {
	if x != nil {
		return x.FormatSize
	}
	return ""
}

func (x *OssFile) GetPutTime() string {
	if x != nil {
		return x.PutTime
	}
	return ""
}

func (x *OssFile) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *OssFile) GetSignUrl() string {
	if x != nil {
		return x.SignUrl
	}
	return ""
}

type OssDetailReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OssDetailReq) Reset() {
	*x = OssDetailReq{}
	mi := &file_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OssDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssDetailReq) ProtoMessage() {}

func (x *OssDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssDetailReq.ProtoReflect.Descriptor instead.
func (*OssDetailReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{6}
}

func (x *OssDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type OssDetailRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Oss           *Oss                   `protobuf:"bytes,1,opt,name=oss,proto3" json:"oss,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OssDetailRes) Reset() {
	*x = OssDetailRes{}
	mi := &file_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OssDetailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssDetailRes) ProtoMessage() {}

func (x *OssDetailRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssDetailRes.ProtoReflect.Descriptor instead.
func (*OssDetailRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{7}
}

func (x *OssDetailRes) GetOss() *Oss {
	if x != nil {
		return x.Oss
	}
	return nil
}

type OssListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`         // 页码
	PageSize      int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // 每页大小
	OrderBy       string                 `protobuf:"bytes,3,opt,name=orderBy,proto3" json:"orderBy,omitempty"`    // 排序
	TenantId      string                 `protobuf:"bytes,4,opt,name=tenantId,proto3" json:"tenantId,omitempty"`  // 租户ID
	Category      int64                  `protobuf:"varint,5,opt,name=category,proto3" json:"category,omitempty"` // 所属分类
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OssListReq) Reset() {
	*x = OssListReq{}
	mi := &file_file_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OssListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssListReq) ProtoMessage() {}

func (x *OssListReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssListReq.ProtoReflect.Descriptor instead.
func (*OssListReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{8}
}

func (x *OssListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *OssListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OssListReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *OssListReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *OssListReq) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

type OssListRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Oss           []*Oss                 `protobuf:"bytes,1,rep,name=oss,proto3" json:"oss,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OssListRes) Reset() {
	*x = OssListRes{}
	mi := &file_file_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OssListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssListRes) ProtoMessage() {}

func (x *OssListRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssListRes.ProtoReflect.Descriptor instead.
func (*OssListRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{9}
}

func (x *OssListRes) GetOss() []*Oss {
	if x != nil {
		return x.Oss
	}
	return nil
}

func (x *OssListRes) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateOssReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Category      int64                  `protobuf:"varint,2,opt,name=category,proto3" json:"category,omitempty"`    // 所属分类
	OssCode       string                 `protobuf:"bytes,3,opt,name=ossCode,proto3" json:"ossCode,omitempty"`       // 资源编号
	Endpoint      string                 `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`     // 资源地址
	AccessKey     string                 `protobuf:"bytes,5,opt,name=accessKey,proto3" json:"accessKey,omitempty"`   // accessKey
	SecretKey     string                 `protobuf:"bytes,6,opt,name=secretKey,proto3" json:"secretKey,omitempty"`   // secretKey
	BucketName    string                 `protobuf:"bytes,7,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 空间名
	AppId         string                 `protobuf:"bytes,8,opt,name=appId,proto3" json:"appId,omitempty"`           // 应用ID TencentCOS需要
	Region        string                 `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`         // 地域简称 TencentCOS需要
	Remark        string                 `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`        // 备注
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOssReq) Reset() {
	*x = CreateOssReq{}
	mi := &file_file_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOssReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOssReq) ProtoMessage() {}

func (x *CreateOssReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOssReq.ProtoReflect.Descriptor instead.
func (*CreateOssReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{10}
}

func (x *CreateOssReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CreateOssReq) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *CreateOssReq) GetOssCode() string {
	if x != nil {
		return x.OssCode
	}
	return ""
}

func (x *CreateOssReq) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CreateOssReq) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *CreateOssReq) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *CreateOssReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *CreateOssReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CreateOssReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateOssReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreateOssRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOssRes) Reset() {
	*x = CreateOssRes{}
	mi := &file_file_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOssRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOssRes) ProtoMessage() {}

func (x *CreateOssRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOssRes.ProtoReflect.Descriptor instead.
func (*CreateOssRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{11}
}

func (x *CreateOssRes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateOssReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Category      int64                  `protobuf:"varint,3,opt,name=category,proto3" json:"category,omitempty"`    // 所属分类
	OssCode       string                 `protobuf:"bytes,4,opt,name=ossCode,proto3" json:"ossCode,omitempty"`       // 资源编号
	Endpoint      string                 `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`     // 资源地址
	AccessKey     string                 `protobuf:"bytes,6,opt,name=accessKey,proto3" json:"accessKey,omitempty"`   // accessKey
	SecretKey     string                 `protobuf:"bytes,7,opt,name=secretKey,proto3" json:"secretKey,omitempty"`   // secretKey
	BucketName    string                 `protobuf:"bytes,8,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 空间名
	AppId         string                 `protobuf:"bytes,9,opt,name=appId,proto3" json:"appId,omitempty"`           // 应用ID TencentCOS需要
	Region        string                 `protobuf:"bytes,10,opt,name=region,proto3" json:"region,omitempty"`        // 地域简称 TencentCOS需要
	Remark        string                 `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`        // 备注
	Status        int64                  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`       // 状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOssReq) Reset() {
	*x = UpdateOssReq{}
	mi := &file_file_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOssReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOssReq) ProtoMessage() {}

func (x *UpdateOssReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOssReq.ProtoReflect.Descriptor instead.
func (*UpdateOssReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateOssReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOssReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UpdateOssReq) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *UpdateOssReq) GetOssCode() string {
	if x != nil {
		return x.OssCode
	}
	return ""
}

func (x *UpdateOssReq) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *UpdateOssReq) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *UpdateOssReq) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *UpdateOssReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *UpdateOssReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpdateOssReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateOssReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateOssReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateOssRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOssRes) Reset() {
	*x = UpdateOssRes{}
	mi := &file_file_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOssRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOssRes) ProtoMessage() {}

func (x *UpdateOssRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOssRes.ProtoReflect.Descriptor instead.
func (*UpdateOssRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{13}
}

type DeleteOssReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOssReq) Reset() {
	*x = DeleteOssReq{}
	mi := &file_file_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOssReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOssReq) ProtoMessage() {}

func (x *DeleteOssReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOssReq.ProtoReflect.Descriptor instead.
func (*DeleteOssReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteOssReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteOssRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOssRes) Reset() {
	*x = DeleteOssRes{}
	mi := &file_file_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOssRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOssRes) ProtoMessage() {}

func (x *DeleteOssRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOssRes.ProtoReflect.Descriptor instead.
func (*DeleteOssRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteOssRes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MakeBucketReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MakeBucketReq) Reset() {
	*x = MakeBucketReq{}
	mi := &file_file_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MakeBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeBucketReq) ProtoMessage() {}

func (x *MakeBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeBucketReq.ProtoReflect.Descriptor instead.
func (*MakeBucketReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{16}
}

func (x *MakeBucketReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *MakeBucketReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MakeBucketReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

type MakeBucketRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MakeBucketRes) Reset() {
	*x = MakeBucketRes{}
	mi := &file_file_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MakeBucketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeBucketRes) ProtoMessage() {}

func (x *MakeBucketRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeBucketRes.ProtoReflect.Descriptor instead.
func (*MakeBucketRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{17}
}

type RemoveBucketReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBucketReq) Reset() {
	*x = RemoveBucketReq{}
	mi := &file_file_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBucketReq) ProtoMessage() {}

func (x *RemoveBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBucketReq.ProtoReflect.Descriptor instead.
func (*RemoveBucketReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveBucketReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *RemoveBucketReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RemoveBucketReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

type RemoveBucketRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBucketRes) Reset() {
	*x = RemoveBucketRes{}
	mi := &file_file_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBucketRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBucketRes) ProtoMessage() {}

func (x *RemoveBucketRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBucketRes.ProtoReflect.Descriptor instead.
func (*RemoveBucketRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{19}
}

type StatFileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`     // 上传文件名
	IsSign        bool                   `protobuf:"varint,5,opt,name=isSign,proto3" json:"isSign,omitempty"`        // 是否生成签名
	Expires       int32                  `protobuf:"varint,6,opt,name=expires,proto3" json:"expires,omitempty"`      // 过期时间 默认一小时 单位分钟
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatFileReq) Reset() {
	*x = StatFileReq{}
	mi := &file_file_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatFileReq) ProtoMessage() {}

func (x *StatFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatFileReq.ProtoReflect.Descriptor instead.
func (*StatFileReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{20}
}

func (x *StatFileReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *StatFileReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StatFileReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *StatFileReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *StatFileReq) GetIsSign() bool {
	if x != nil {
		return x.IsSign
	}
	return false
}

func (x *StatFileReq) GetExpires() int32 {
	if x != nil {
		return x.Expires
	}
	return 0
}

type StatFileRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OssFile       *OssFile               `protobuf:"bytes,1,opt,name=ossFile,proto3" json:"ossFile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatFileRes) Reset() {
	*x = StatFileRes{}
	mi := &file_file_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatFileRes) ProtoMessage() {}

func (x *StatFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatFileRes.ProtoReflect.Descriptor instead.
func (*StatFileRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{21}
}

func (x *StatFileRes) GetOssFile() *OssFile {
	if x != nil {
		return x.OssFile
	}
	return nil
}

type SignUrlReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`     // 上传文件名
	Expires       int32                  `protobuf:"varint,5,opt,name=expires,proto3" json:"expires,omitempty"`      // 过期时间 默认一小时 单位分钟
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignUrlReq) Reset() {
	*x = SignUrlReq{}
	mi := &file_file_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUrlReq) ProtoMessage() {}

func (x *SignUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUrlReq.ProtoReflect.Descriptor instead.
func (*SignUrlReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{22}
}

func (x *SignUrlReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *SignUrlReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SignUrlReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *SignUrlReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SignUrlReq) GetExpires() int32 {
	if x != nil {
		return x.Expires
	}
	return 0
}

type SignUrlRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` // 文件url
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignUrlRes) Reset() {
	*x = SignUrlRes{}
	mi := &file_file_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignUrlRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUrlRes) ProtoMessage() {}

func (x *SignUrlRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUrlRes.ProtoReflect.Descriptor instead.
func (*SignUrlRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{23}
}

func (x *SignUrlRes) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type PutFileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`     // 上传文件名
	ContentType   string                 `protobuf:"bytes,5,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Path          string                 `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`             // 文件路径
	IsThumb       bool                   `protobuf:"varint,7,opt,name=isThumb,proto3" json:"isThumb,omitempty"`      // 是否缩略图
	PathPrefix    string                 `protobuf:"bytes,8,opt,name=pathPrefix,proto3" json:"pathPrefix,omitempty"` // 默认值 default 文件路径前缀, 文件格式 pathPrefix/20060102/uuid.ext
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutFileReq) Reset() {
	*x = PutFileReq{}
	mi := &file_file_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutFileReq) ProtoMessage() {}

func (x *PutFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutFileReq.ProtoReflect.Descriptor instead.
func (*PutFileReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{24}
}

func (x *PutFileReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *PutFileReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutFileReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *PutFileReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PutFileReq) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *PutFileReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PutFileReq) GetIsThumb() bool {
	if x != nil {
		return x.IsThumb
	}
	return false
}

func (x *PutFileReq) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

type PutFileRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutFileRes) Reset() {
	*x = PutFileRes{}
	mi := &file_file_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutFileRes) ProtoMessage() {}

func (x *PutFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutFileRes.ProtoReflect.Descriptor instead.
func (*PutFileRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{25}
}

func (x *PutFileRes) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type PutChunkFileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID 默认值 000000
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`     // 上传文件名
	ContentType   string                 `protobuf:"bytes,5,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Content       []byte                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`       // 文件内容
	Size          int64                  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`            // 文件大小
	IsThumb       bool                   `protobuf:"varint,8,opt,name=isThumb,proto3" json:"isThumb,omitempty"`      // 是否缩略图
	PathPrefix    string                 `protobuf:"bytes,9,opt,name=pathPrefix,proto3" json:"pathPrefix,omitempty"` // 默认值 default 文件路径前缀, 文件格式 pathPrefix/20060102/uuid.ext
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutChunkFileReq) Reset() {
	*x = PutChunkFileReq{}
	mi := &file_file_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutChunkFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChunkFileReq) ProtoMessage() {}

func (x *PutChunkFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChunkFileReq.ProtoReflect.Descriptor instead.
func (*PutChunkFileReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{26}
}

func (x *PutChunkFileReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *PutChunkFileReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutChunkFileReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *PutChunkFileReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PutChunkFileReq) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *PutChunkFileReq) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *PutChunkFileReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PutChunkFileReq) GetIsThumb() bool {
	if x != nil {
		return x.IsThumb
	}
	return false
}

func (x *PutChunkFileReq) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

type PutChunkFileRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	IsEnd         bool                   `protobuf:"varint,2,opt,name=isEnd,proto3" json:"isEnd,omitempty"` // 是否结束
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`   // 文件大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutChunkFileRes) Reset() {
	*x = PutChunkFileRes{}
	mi := &file_file_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutChunkFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChunkFileRes) ProtoMessage() {}

func (x *PutChunkFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChunkFileRes.ProtoReflect.Descriptor instead.
func (*PutChunkFileRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{27}
}

func (x *PutChunkFileRes) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *PutChunkFileRes) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *PutChunkFileRes) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PutStreamFileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID 默认值 000000
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`     // 上传文件名
	ContentType   string                 `protobuf:"bytes,5,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Content       []byte                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`       // 文件内容
	Size          int64                  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`            // 文件大小
	IsThumb       bool                   `protobuf:"varint,8,opt,name=isThumb,proto3" json:"isThumb,omitempty"`      // 是否缩略图
	PathPrefix    string                 `protobuf:"bytes,9,opt,name=pathPrefix,proto3" json:"pathPrefix,omitempty"` // 默认值 upload 文件路径前缀, 文件格式 pathPrefix/20060102/uuid.ext
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutStreamFileReq) Reset() {
	*x = PutStreamFileReq{}
	mi := &file_file_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutStreamFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutStreamFileReq) ProtoMessage() {}

func (x *PutStreamFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutStreamFileReq.ProtoReflect.Descriptor instead.
func (*PutStreamFileReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{28}
}

func (x *PutStreamFileReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *PutStreamFileReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutStreamFileReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *PutStreamFileReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *PutStreamFileReq) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *PutStreamFileReq) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *PutStreamFileReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PutStreamFileReq) GetIsThumb() bool {
	if x != nil {
		return x.IsThumb
	}
	return false
}

func (x *PutStreamFileReq) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

type PutStreamFileRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	IsEnd         bool                   `protobuf:"varint,2,opt,name=isEnd,proto3" json:"isEnd,omitempty"` // 是否结束
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`   // 文件大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutStreamFileRes) Reset() {
	*x = PutStreamFileRes{}
	mi := &file_file_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutStreamFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutStreamFileRes) ProtoMessage() {}

func (x *PutStreamFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutStreamFileRes.ProtoReflect.Descriptor instead.
func (*PutStreamFileRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{29}
}

func (x *PutStreamFileRes) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *PutStreamFileRes) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *PutStreamFileRes) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetFileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`     // 上传文件名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileReq) Reset() {
	*x = GetFileReq{}
	mi := &file_file_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileReq) ProtoMessage() {}

func (x *GetFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileReq.ProtoReflect.Descriptor instead.
func (*GetFileReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{30}
}

func (x *GetFileReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetFileReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetFileReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *GetFileReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type GetFileRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` // 上传文件名
	ContentType   string                 `protobuf:"bytes,2,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"` // 文件路径
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileRes) Reset() {
	*x = GetFileRes{}
	mi := &file_file_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileRes) ProtoMessage() {}

func (x *GetFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileRes.ProtoReflect.Descriptor instead.
func (*GetFileRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{31}
}

func (x *GetFileRes) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GetFileRes) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *GetFileRes) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RemoveFileReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`     // 上传文件名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFileReq) Reset() {
	*x = RemoveFileReq{}
	mi := &file_file_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFileReq) ProtoMessage() {}

func (x *RemoveFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFileReq.ProtoReflect.Descriptor instead.
func (*RemoveFileReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{32}
}

func (x *RemoveFileReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *RemoveFileReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RemoveFileReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *RemoveFileReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type RemoveFileRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFileRes) Reset() {
	*x = RemoveFileRes{}
	mi := &file_file_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFileRes) ProtoMessage() {}

func (x *RemoveFileRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFileRes.ProtoReflect.Descriptor instead.
func (*RemoveFileRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{33}
}

type RemoveFilesReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	Filename      []string               `protobuf:"bytes,4,rep,name=filename,proto3" json:"filename,omitempty"`     // 上传文件名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFilesReq) Reset() {
	*x = RemoveFilesReq{}
	mi := &file_file_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFilesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFilesReq) ProtoMessage() {}

func (x *RemoveFilesReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFilesReq.ProtoReflect.Descriptor instead.
func (*RemoveFilesReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{34}
}

func (x *RemoveFilesReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *RemoveFilesReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RemoveFilesReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *RemoveFilesReq) GetFilename() []string {
	if x != nil {
		return x.Filename
	}
	return nil
}

type CaptureVideoStreamReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenantId,proto3" json:"tenantId,omitempty"`     // 租户ID
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`             // 资源编号
	BucketName    string                 `protobuf:"bytes,3,opt,name=bucketName,proto3" json:"bucketName,omitempty"` // 存储桶名称
	PathPrefix    string                 `protobuf:"bytes,5,opt,name=pathPrefix,proto3" json:"pathPrefix,omitempty"` // 默认值 default 文件路径前缀, 文件格式 pathPrefix/20060102/uuid.ext
	StreamUrl     string                 `protobuf:"bytes,6,opt,name=streamUrl,proto3" json:"streamUrl,omitempty"`   // 视频流
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CaptureVideoStreamReq) Reset() {
	*x = CaptureVideoStreamReq{}
	mi := &file_file_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaptureVideoStreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptureVideoStreamReq) ProtoMessage() {}

func (x *CaptureVideoStreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptureVideoStreamReq.ProtoReflect.Descriptor instead.
func (*CaptureVideoStreamReq) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{35}
}

func (x *CaptureVideoStreamReq) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CaptureVideoStreamReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CaptureVideoStreamReq) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *CaptureVideoStreamReq) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *CaptureVideoStreamReq) GetStreamUrl() string {
	if x != nil {
		return x.StreamUrl
	}
	return ""
}

type CaptureVideoStreamRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CaptureVideoStreamRes) Reset() {
	*x = CaptureVideoStreamRes{}
	mi := &file_file_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaptureVideoStreamRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaptureVideoStreamRes) ProtoMessage() {}

func (x *CaptureVideoStreamRes) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaptureVideoStreamRes.ProtoReflect.Descriptor instead.
func (*CaptureVideoStreamRes) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{36}
}

func (x *CaptureVideoStreamRes) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

var File_file_proto protoreflect.FileDescriptor

const file_file_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"file.proto\x12\x04file\"\x19\n" +
	"\x03Req\x12\x12\n" +
	"\x04ping\x18\x01 \x01(\tR\x04ping\"\x19\n" +
	"\x03Res\x12\x12\n" +
	"\x04pong\x18\x01 \x01(\tR\x04pong\"\xfd\x02\n" +
	"\x03Oss\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1a\n" +
	"\btenantId\x18\x02 \x01(\tR\btenantId\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\x03R\bcategory\x12\x18\n" +
	"\aossCode\x18\x04 \x01(\tR\aossCode\x12\x1a\n" +
	"\bendpoint\x18\x05 \x01(\tR\bendpoint\x12\x1c\n" +
	"\taccessKey\x18\x06 \x01(\tR\taccessKey\x12\x1c\n" +
	"\tsecretKey\x18\a \x01(\tR\tsecretKey\x12\x1e\n" +
	"\n" +
	"bucketName\x18\b \x01(\tR\n" +
	"bucketName\x12\x14\n" +
	"\x05appId\x18\t \x01(\tR\x05appId\x12\x16\n" +
	"\x06region\x18\n" +
	" \x01(\tR\x06region\x12\x16\n" +
	"\x06remark\x18\v \x01(\tR\x06remark\x12\x16\n" +
	"\x06status\x18\f \x01(\x03R\x06status\x12\x1e\n" +
	"\n" +
	"createTime\x18\r \x01(\tR\n" +
	"createTime\x12\x1e\n" +
	"\n" +
	"updateTime\x18\x0f \x01(\tR\n" +
	"updateTime\"\xad\x02\n" +
	"\x04File\x12\x12\n" +
	"\x04link\x18\x01 \x01(\tR\x04link\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x1e\n" +
	"\n" +
	"formatSize\x18\x05 \x01(\tR\n" +
	"formatSize\x12\"\n" +
	"\foriginalName\x18\x06 \x01(\tR\foriginalName\x12\x1a\n" +
	"\battachId\x18\a \x01(\tR\battachId\x12\x10\n" +
	"\x03md5\x18\b \x01(\tR\x03md5\x12#\n" +
	"\x04meta\x18\t \x01(\v2\x0f.file.ImageMetaR\x04meta\x12\x1c\n" +
	"\tthumbLink\x18\n" +
	" \x01(\tR\tthumbLink\x12\x1c\n" +
	"\tThumbName\x18\v \x01(\tR\tThumbName\"\xd1\x01\n" +
	"\tImageMeta\x12\x1c\n" +
	"\tlongitude\x18\x01 \x01(\x01R\tlongitude\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x12\n" +
	"\x04time\x18\x03 \x01(\tR\x04time\x12\x1c\n" +
	"\timgHeight\x18\x04 \x01(\x05R\timgHeight\x12\x1a\n" +
	"\bimgWidth\x18\x05 \x01(\x05R\bimgWidth\x12\x1a\n" +
	"\baltitude\x18\x06 \x01(\x01R\baltitude\x12 \n" +
	"\vcameraModel\x18\a \x01(\tR\vcameraModel\"\xbb\x01\n" +
	"\aOssFile\x12\x12\n" +
	"\x04link\x18\x01 \x01(\tR\x04link\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x1e\n" +
	"\n" +
	"formatSize\x18\x04 \x01(\tR\n" +
	"formatSize\x12\x18\n" +
	"\aputTime\x18\x05 \x01(\tR\aputTime\x12 \n" +
	"\vcontentType\x18\x06 \x01(\tR\vcontentType\x12\x18\n" +
	"\asignUrl\x18\a \x01(\tR\asignUrl\"\x1e\n" +
	"\fOssDetailReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"+\n" +
	"\fOssDetailRes\x12\x1b\n" +
	"\x03oss\x18\x01 \x01(\v2\t.file.OssR\x03oss\"\x8e\x01\n" +
	"\n" +
	"OssListReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x03R\bpageSize\x12\x18\n" +
	"\aorderBy\x18\x03 \x01(\tR\aorderBy\x12\x1a\n" +
	"\btenantId\x18\x04 \x01(\tR\btenantId\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\x03R\bcategory\"?\n" +
	"\n" +
	"OssListRes\x12\x1b\n" +
	"\x03oss\x18\x01 \x03(\v2\t.file.OssR\x03oss\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\"\x9e\x02\n" +
	"\fCreateOssReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\x03R\bcategory\x12\x18\n" +
	"\aossCode\x18\x03 \x01(\tR\aossCode\x12\x1a\n" +
	"\bendpoint\x18\x04 \x01(\tR\bendpoint\x12\x1c\n" +
	"\taccessKey\x18\x05 \x01(\tR\taccessKey\x12\x1c\n" +
	"\tsecretKey\x18\x06 \x01(\tR\tsecretKey\x12\x1e\n" +
	"\n" +
	"bucketName\x18\a \x01(\tR\n" +
	"bucketName\x12\x14\n" +
	"\x05appId\x18\b \x01(\tR\x05appId\x12\x16\n" +
	"\x06region\x18\t \x01(\tR\x06region\x12\x16\n" +
	"\x06remark\x18\n" +
	" \x01(\tR\x06remark\"\x1e\n" +
	"\fCreateOssRes\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xc6\x02\n" +
	"\fUpdateOssReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1a\n" +
	"\btenantId\x18\x02 \x01(\tR\btenantId\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\x03R\bcategory\x12\x18\n" +
	"\aossCode\x18\x04 \x01(\tR\aossCode\x12\x1a\n" +
	"\bendpoint\x18\x05 \x01(\tR\bendpoint\x12\x1c\n" +
	"\taccessKey\x18\x06 \x01(\tR\taccessKey\x12\x1c\n" +
	"\tsecretKey\x18\a \x01(\tR\tsecretKey\x12\x1e\n" +
	"\n" +
	"bucketName\x18\b \x01(\tR\n" +
	"bucketName\x12\x14\n" +
	"\x05appId\x18\t \x01(\tR\x05appId\x12\x16\n" +
	"\x06region\x18\n" +
	" \x01(\tR\x06region\x12\x16\n" +
	"\x06remark\x18\v \x01(\tR\x06remark\x12\x16\n" +
	"\x06status\x18\f \x01(\x03R\x06status\"\x0e\n" +
	"\fUpdateOssRes\"\x1e\n" +
	"\fDeleteOssReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\x1e\n" +
	"\fDeleteOssRes\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"_\n" +
	"\rMakeBucketReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\"\x0f\n" +
	"\rMakeBucketRes\"a\n" +
	"\x0fRemoveBucketReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\"\x11\n" +
	"\x0fRemoveBucketRes\"\xab\x01\n" +
	"\vStatFileReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12\x16\n" +
	"\x06isSign\x18\x05 \x01(\bR\x06isSign\x12\x18\n" +
	"\aexpires\x18\x06 \x01(\x05R\aexpires\"6\n" +
	"\vStatFileRes\x12'\n" +
	"\aossFile\x18\x01 \x01(\v2\r.file.OssFileR\aossFile\"\x92\x01\n" +
	"\n" +
	"SignUrlReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12\x18\n" +
	"\aexpires\x18\x05 \x01(\x05R\aexpires\"\x1e\n" +
	"\n" +
	"SignUrlRes\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"\xe8\x01\n" +
	"\n" +
	"PutFileReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12 \n" +
	"\vcontentType\x18\x05 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04path\x18\x06 \x01(\tR\x04path\x12\x18\n" +
	"\aisThumb\x18\a \x01(\bR\aisThumb\x12\x1e\n" +
	"\n" +
	"pathPrefix\x18\b \x01(\tR\n" +
	"pathPrefix\",\n" +
	"\n" +
	"PutFileRes\x12\x1e\n" +
	"\x04file\x18\x01 \x01(\v2\n" +
	".file.FileR\x04file\"\x87\x02\n" +
	"\x0fPutChunkFileReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12 \n" +
	"\vcontentType\x18\x05 \x01(\tR\vcontentType\x12\x18\n" +
	"\acontent\x18\x06 \x01(\fR\acontent\x12\x12\n" +
	"\x04size\x18\a \x01(\x03R\x04size\x12\x18\n" +
	"\aisThumb\x18\b \x01(\bR\aisThumb\x12\x1e\n" +
	"\n" +
	"pathPrefix\x18\t \x01(\tR\n" +
	"pathPrefix\"[\n" +
	"\x0fPutChunkFileRes\x12\x1e\n" +
	"\x04file\x18\x01 \x01(\v2\n" +
	".file.FileR\x04file\x12\x14\n" +
	"\x05isEnd\x18\x02 \x01(\bR\x05isEnd\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"\x88\x02\n" +
	"\x10PutStreamFileReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12 \n" +
	"\vcontentType\x18\x05 \x01(\tR\vcontentType\x12\x18\n" +
	"\acontent\x18\x06 \x01(\fR\acontent\x12\x12\n" +
	"\x04size\x18\a \x01(\x03R\x04size\x12\x18\n" +
	"\aisThumb\x18\b \x01(\bR\aisThumb\x12\x1e\n" +
	"\n" +
	"pathPrefix\x18\t \x01(\tR\n" +
	"pathPrefix\"\\\n" +
	"\x10PutStreamFileRes\x12\x1e\n" +
	"\x04file\x18\x01 \x01(\v2\n" +
	".file.FileR\x04file\x12\x14\n" +
	"\x05isEnd\x18\x02 \x01(\bR\x05isEnd\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"x\n" +
	"\n" +
	"GetFileReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\"^\n" +
	"\n" +
	"GetFileRes\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12 \n" +
	"\vcontentType\x18\x02 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\"{\n" +
	"\rRemoveFileReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\"\x0f\n" +
	"\rRemoveFileRes\"|\n" +
	"\x0eRemoveFilesReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\x12\x1a\n" +
	"\bfilename\x18\x04 \x03(\tR\bfilename\"\xa5\x01\n" +
	"\x15CaptureVideoStreamReq\x12\x1a\n" +
	"\btenantId\x18\x01 \x01(\tR\btenantId\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x03 \x01(\tR\n" +
	"bucketName\x12\x1e\n" +
	"\n" +
	"pathPrefix\x18\x05 \x01(\tR\n" +
	"pathPrefix\x12\x1c\n" +
	"\tstreamUrl\x18\x06 \x01(\tR\tstreamUrl\"7\n" +
	"\x15CaptureVideoStreamRes\x12\x1e\n" +
	"\x04file\x18\x01 \x01(\v2\n" +
	".file.FileR\x04file2\xf7\x06\n" +
	"\aFileRpc\x12\x1c\n" +
	"\x04Ping\x12\t.file.Req\x1a\t.file.Res\x123\n" +
	"\tOssDetail\x12\x12.file.OssDetailReq\x1a\x12.file.OssDetailRes\x12-\n" +
	"\aOssList\x12\x10.file.OssListReq\x1a\x10.file.OssListRes\x123\n" +
	"\tCreateOss\x12\x12.file.CreateOssReq\x1a\x12.file.CreateOssRes\x123\n" +
	"\tUpdateOss\x12\x12.file.UpdateOssReq\x1a\x12.file.UpdateOssRes\x123\n" +
	"\tDeleteOss\x12\x12.file.DeleteOssReq\x1a\x12.file.DeleteOssRes\x126\n" +
	"\n" +
	"MakeBucket\x12\x13.file.MakeBucketReq\x1a\x13.file.MakeBucketRes\x12<\n" +
	"\fRemoveBucket\x12\x15.file.RemoveBucketReq\x1a\x15.file.RemoveBucketRes\x120\n" +
	"\bStatFile\x12\x11.file.StatFileReq\x1a\x11.file.StatFileRes\x12-\n" +
	"\aSignUrl\x12\x10.file.SignUrlReq\x1a\x10.file.SignUrlRes\x12-\n" +
	"\aPutFile\x12\x10.file.PutFileReq\x1a\x10.file.PutFileRes\x12@\n" +
	"\fPutChunkFile\x12\x15.file.PutChunkFileReq\x1a\x15.file.PutChunkFileRes(\x010\x01\x12A\n" +
	"\rPutStreamFile\x12\x16.file.PutStreamFileReq\x1a\x16.file.PutStreamFileRes(\x01\x126\n" +
	"\n" +
	"RemoveFile\x12\x13.file.RemoveFileReq\x1a\x13.file.RemoveFileRes\x128\n" +
	"\vRemoveFiles\x12\x14.file.RemoveFilesReq\x1a\x13.file.RemoveFileRes\x12N\n" +
	"\x12CaptureVideoStream\x12\x1b.file.CaptureVideoStreamReq\x1a\x1b.file.CaptureVideoStreamResB+\n" +
	"\x14com.github.file.grpcB\tFileProtoP\x01Z\x06./fileb\x06proto3"

var (
	file_file_proto_rawDescOnce sync.Once
	file_file_proto_rawDescData []byte
)

func file_file_proto_rawDescGZIP() []byte {
	file_file_proto_rawDescOnce.Do(func() {
		file_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_proto_rawDesc), len(file_file_proto_rawDesc)))
	})
	return file_file_proto_rawDescData
}

var file_file_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_file_proto_goTypes = []any{
	(*Req)(nil),                   // 0: file.Req
	(*Res)(nil),                   // 1: file.Res
	(*Oss)(nil),                   // 2: file.Oss
	(*File)(nil),                  // 3: file.File
	(*ImageMeta)(nil),             // 4: file.ImageMeta
	(*OssFile)(nil),               // 5: file.OssFile
	(*OssDetailReq)(nil),          // 6: file.OssDetailReq
	(*OssDetailRes)(nil),          // 7: file.OssDetailRes
	(*OssListReq)(nil),            // 8: file.OssListReq
	(*OssListRes)(nil),            // 9: file.OssListRes
	(*CreateOssReq)(nil),          // 10: file.CreateOssReq
	(*CreateOssRes)(nil),          // 11: file.CreateOssRes
	(*UpdateOssReq)(nil),          // 12: file.UpdateOssReq
	(*UpdateOssRes)(nil),          // 13: file.UpdateOssRes
	(*DeleteOssReq)(nil),          // 14: file.DeleteOssReq
	(*DeleteOssRes)(nil),          // 15: file.DeleteOssRes
	(*MakeBucketReq)(nil),         // 16: file.MakeBucketReq
	(*MakeBucketRes)(nil),         // 17: file.MakeBucketRes
	(*RemoveBucketReq)(nil),       // 18: file.RemoveBucketReq
	(*RemoveBucketRes)(nil),       // 19: file.RemoveBucketRes
	(*StatFileReq)(nil),           // 20: file.StatFileReq
	(*StatFileRes)(nil),           // 21: file.StatFileRes
	(*SignUrlReq)(nil),            // 22: file.SignUrlReq
	(*SignUrlRes)(nil),            // 23: file.SignUrlRes
	(*PutFileReq)(nil),            // 24: file.PutFileReq
	(*PutFileRes)(nil),            // 25: file.PutFileRes
	(*PutChunkFileReq)(nil),       // 26: file.PutChunkFileReq
	(*PutChunkFileRes)(nil),       // 27: file.PutChunkFileRes
	(*PutStreamFileReq)(nil),      // 28: file.PutStreamFileReq
	(*PutStreamFileRes)(nil),      // 29: file.PutStreamFileRes
	(*GetFileReq)(nil),            // 30: file.GetFileReq
	(*GetFileRes)(nil),            // 31: file.GetFileRes
	(*RemoveFileReq)(nil),         // 32: file.RemoveFileReq
	(*RemoveFileRes)(nil),         // 33: file.RemoveFileRes
	(*RemoveFilesReq)(nil),        // 34: file.RemoveFilesReq
	(*CaptureVideoStreamReq)(nil), // 35: file.CaptureVideoStreamReq
	(*CaptureVideoStreamRes)(nil), // 36: file.CaptureVideoStreamRes
}
var file_file_proto_depIdxs = []int32{
	4,  // 0: file.File.meta:type_name -> file.ImageMeta
	2,  // 1: file.OssDetailRes.oss:type_name -> file.Oss
	2,  // 2: file.OssListRes.oss:type_name -> file.Oss
	5,  // 3: file.StatFileRes.ossFile:type_name -> file.OssFile
	3,  // 4: file.PutFileRes.file:type_name -> file.File
	3,  // 5: file.PutChunkFileRes.file:type_name -> file.File
	3,  // 6: file.PutStreamFileRes.file:type_name -> file.File
	3,  // 7: file.CaptureVideoStreamRes.file:type_name -> file.File
	0,  // 8: file.FileRpc.Ping:input_type -> file.Req
	6,  // 9: file.FileRpc.OssDetail:input_type -> file.OssDetailReq
	8,  // 10: file.FileRpc.OssList:input_type -> file.OssListReq
	10, // 11: file.FileRpc.CreateOss:input_type -> file.CreateOssReq
	12, // 12: file.FileRpc.UpdateOss:input_type -> file.UpdateOssReq
	14, // 13: file.FileRpc.DeleteOss:input_type -> file.DeleteOssReq
	16, // 14: file.FileRpc.MakeBucket:input_type -> file.MakeBucketReq
	18, // 15: file.FileRpc.RemoveBucket:input_type -> file.RemoveBucketReq
	20, // 16: file.FileRpc.StatFile:input_type -> file.StatFileReq
	22, // 17: file.FileRpc.SignUrl:input_type -> file.SignUrlReq
	24, // 18: file.FileRpc.PutFile:input_type -> file.PutFileReq
	26, // 19: file.FileRpc.PutChunkFile:input_type -> file.PutChunkFileReq
	28, // 20: file.FileRpc.PutStreamFile:input_type -> file.PutStreamFileReq
	32, // 21: file.FileRpc.RemoveFile:input_type -> file.RemoveFileReq
	34, // 22: file.FileRpc.RemoveFiles:input_type -> file.RemoveFilesReq
	35, // 23: file.FileRpc.CaptureVideoStream:input_type -> file.CaptureVideoStreamReq
	1,  // 24: file.FileRpc.Ping:output_type -> file.Res
	7,  // 25: file.FileRpc.OssDetail:output_type -> file.OssDetailRes
	9,  // 26: file.FileRpc.OssList:output_type -> file.OssListRes
	11, // 27: file.FileRpc.CreateOss:output_type -> file.CreateOssRes
	13, // 28: file.FileRpc.UpdateOss:output_type -> file.UpdateOssRes
	15, // 29: file.FileRpc.DeleteOss:output_type -> file.DeleteOssRes
	17, // 30: file.FileRpc.MakeBucket:output_type -> file.MakeBucketRes
	19, // 31: file.FileRpc.RemoveBucket:output_type -> file.RemoveBucketRes
	21, // 32: file.FileRpc.StatFile:output_type -> file.StatFileRes
	23, // 33: file.FileRpc.SignUrl:output_type -> file.SignUrlRes
	25, // 34: file.FileRpc.PutFile:output_type -> file.PutFileRes
	27, // 35: file.FileRpc.PutChunkFile:output_type -> file.PutChunkFileRes
	29, // 36: file.FileRpc.PutStreamFile:output_type -> file.PutStreamFileRes
	33, // 37: file.FileRpc.RemoveFile:output_type -> file.RemoveFileRes
	33, // 38: file.FileRpc.RemoveFiles:output_type -> file.RemoveFileRes
	36, // 39: file.FileRpc.CaptureVideoStream:output_type -> file.CaptureVideoStreamRes
	24, // [24:40] is the sub-list for method output_type
	8,  // [8:24] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_file_proto_init() }
func file_file_proto_init() {
	if File_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_proto_rawDesc), len(file_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_proto_goTypes,
		DependencyIndexes: file_file_proto_depIdxs,
		MessageInfos:      file_file_proto_msgTypes,
	}.Build()
	File_file_proto = out.File
	file_file_proto_goTypes = nil
	file_file_proto_depIdxs = nil
}
