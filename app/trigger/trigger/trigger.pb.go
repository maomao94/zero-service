// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: trigger.proto

package trigger

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
	extproto "zero-service/third_party/extproto"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PbTaskInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is the identifier of the task.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue string `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
	// Type is the type name of the task.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Payload is the payload data of the task.
	Payload string `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	// State indicates the task state.
	State int32 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"` // 建议配合 enum TaskState 使用
	// MaxRetry is the maximum number of times the task can be retried.
	MaxRetry int32 `protobuf:"varint,6,opt,name=maxRetry,proto3" json:"maxRetry,omitempty"`
	// Retried is the number of times the task has retried so far.
	Retried int32 `protobuf:"varint,7,opt,name=retried,proto3" json:"retried,omitempty"`
	// LastErr is the error message from the last failure.
	LastErr string `protobuf:"bytes,8,opt,name=lastErr,proto3" json:"lastErr,omitempty"`
	// LastFailedAt is the time of the last failure.
	LastFailedAt string `protobuf:"bytes,9,opt,name=lastFailedAt,proto3" json:"lastFailedAt,omitempty"`
	// Timeout is the duration the task can be processed before being retried.
	Timeout int64 `protobuf:"varint,10,opt,name=timeout,proto3" json:"timeout,omitempty"` // 使用秒为单位的 duration
	// Deadline is the deadline for the task.
	Deadline string `protobuf:"bytes,11,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// Group is the name of the group in which the task belongs.
	Group string `protobuf:"bytes,12,opt,name=group,proto3" json:"group,omitempty"`
	// NextProcessAt is the time the task is scheduled to be processed.
	NextProcessAt string `protobuf:"bytes,13,opt,name=nextProcessAt,proto3" json:"nextProcessAt,omitempty"`
	// IsOrphaned indicates if the task is left in active state with no worker.
	IsOrphaned bool `protobuf:"varint,14,opt,name=isOrphaned,proto3" json:"isOrphaned,omitempty"`
	// Retention is duration of the retention period.
	Retention int64 `protobuf:"varint,15,opt,name=retention,proto3" json:"retention,omitempty"` // 使用秒为单位的 duration
	// CompletedAt is the time when the task is processed successfully.
	CompletedAt string `protobuf:"bytes,16,opt,name=completedAt,proto3" json:"completedAt,omitempty"` // 或 google.protobuf.Timestamp
	// Result holds the result data associated with the task.
	Result        string `protobuf:"bytes,17,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PbTaskInfo) Reset() {
	*x = PbTaskInfo{}
	mi := &file_trigger_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbTaskInfo) ProtoMessage() {}

func (x *PbTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbTaskInfo.ProtoReflect.Descriptor instead.
func (*PbTaskInfo) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{0}
}

func (x *PbTaskInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PbTaskInfo) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *PbTaskInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PbTaskInfo) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *PbTaskInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PbTaskInfo) GetMaxRetry() int32 {
	if x != nil {
		return x.MaxRetry
	}
	return 0
}

func (x *PbTaskInfo) GetRetried() int32 {
	if x != nil {
		return x.Retried
	}
	return 0
}

func (x *PbTaskInfo) GetLastErr() string {
	if x != nil {
		return x.LastErr
	}
	return ""
}

func (x *PbTaskInfo) GetLastFailedAt() string {
	if x != nil {
		return x.LastFailedAt
	}
	return ""
}

func (x *PbTaskInfo) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *PbTaskInfo) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

func (x *PbTaskInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *PbTaskInfo) GetNextProcessAt() string {
	if x != nil {
		return x.NextProcessAt
	}
	return ""
}

func (x *PbTaskInfo) GetIsOrphaned() bool {
	if x != nil {
		return x.IsOrphaned
	}
	return false
}

func (x *PbTaskInfo) GetRetention() int64 {
	if x != nil {
		return x.Retention
	}
	return 0
}

func (x *PbTaskInfo) GetCompletedAt() string {
	if x != nil {
		return x.CompletedAt
	}
	return ""
}

func (x *PbTaskInfo) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type PbDailyStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the queue.
	Queue string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	// Total number of tasks being processed during the given date.
	// The number includes both succeeded and failed tasks.
	Processed int64 `protobuf:"varint,2,opt,name=processed,proto3" json:"processed,omitempty"`
	// Total number of tasks failed to be processed during the given date.
	Failed int64 `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	// Date this stats was taken.
	Date          string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PbDailyStats) Reset() {
	*x = PbDailyStats{}
	mi := &file_trigger_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbDailyStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbDailyStats) ProtoMessage() {}

func (x *PbDailyStats) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbDailyStats.ProtoReflect.Descriptor instead.
func (*PbDailyStats) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{1}
}

func (x *PbDailyStats) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *PbDailyStats) GetProcessed() int64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *PbDailyStats) GetFailed() int64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *PbDailyStats) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type PbQueueInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the queue.
	Queue string `protobuf:"bytes,1,opt,name=Queue,proto3" json:"Queue,omitempty"`
	// Total number of bytes that the queue and its tasks require to be stored in redis.
	// It is an approximate memory usage value in bytes since the value is computed by sampling.
	MemoryUsage int64 `protobuf:"varint,2,opt,name=memoryUsage,proto3" json:"memoryUsage,omitempty"`
	// Latency of the queue, measured by the oldest pending task in the queue.
	Latency string `protobuf:"bytes,3,opt,name=latency,proto3" json:"latency,omitempty"`
	// Size is the total number of tasks in the queue.
	// The value is the sum of Pending, Active, Scheduled, Retry, Aggregating and Archived.
	Size int64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	// Groups is the total number of groups in the queue.
	Groups int64 `protobuf:"varint,5,opt,name=groups,proto3" json:"groups,omitempty"`
	// Number of pending tasks.
	Pending int64 `protobuf:"varint,6,opt,name=pending,proto3" json:"pending,omitempty"`
	// Number of active tasks.
	Active int64 `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	// Number of scheduled tasks.
	Scheduled int64 `protobuf:"varint,8,opt,name=scheduled,proto3" json:"scheduled,omitempty"`
	// Number of retry tasks.
	Retry int64 `protobuf:"varint,9,opt,name=retry,proto3" json:"retry,omitempty"`
	// Number of archived tasks.
	Archived int64 `protobuf:"varint,10,opt,name=archived,proto3" json:"archived,omitempty"`
	// Number of stored completed tasks.
	Completed int64 `protobuf:"varint,11,opt,name=completed,proto3" json:"completed,omitempty"`
	// Number of aggregating tasks.
	Aggregating int64 `protobuf:"varint,12,opt,name=aggregating,proto3" json:"aggregating,omitempty"`
	// Total number of tasks being processed within the given date (counter resets daily).
	// The number includes both succeeded and failed tasks.
	Processed int64 `protobuf:"varint,13,opt,name=processed,proto3" json:"processed,omitempty"`
	// Total number of tasks failed to be processed within the given date (counter resets daily).
	Failed int64 `protobuf:"varint,14,opt,name=failed,proto3" json:"failed,omitempty"`
	// Total number of tasks processed (cumulative).
	ProcessedTotal int64 `protobuf:"varint,15,opt,name=processedTotal,proto3" json:"processedTotal,omitempty"`
	// Total number of tasks failed (cumulative).
	FailedTotal int64 `protobuf:"varint,16,opt,name=failedTotal,proto3" json:"failedTotal,omitempty"`
	// Paused indicates whether the queue is paused.
	// If true, tasks in the queue will not be processed.
	Paused bool `protobuf:"varint,17,opt,name=paused,proto3" json:"paused,omitempty"`
	// Time when this queue info snapshot was taken.
	Timestamp     string `protobuf:"bytes,18,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PbQueueInfo) Reset() {
	*x = PbQueueInfo{}
	mi := &file_trigger_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbQueueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbQueueInfo) ProtoMessage() {}

func (x *PbQueueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbQueueInfo.ProtoReflect.Descriptor instead.
func (*PbQueueInfo) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{2}
}

func (x *PbQueueInfo) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *PbQueueInfo) GetMemoryUsage() int64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *PbQueueInfo) GetLatency() string {
	if x != nil {
		return x.Latency
	}
	return ""
}

func (x *PbQueueInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PbQueueInfo) GetGroups() int64 {
	if x != nil {
		return x.Groups
	}
	return 0
}

func (x *PbQueueInfo) GetPending() int64 {
	if x != nil {
		return x.Pending
	}
	return 0
}

func (x *PbQueueInfo) GetActive() int64 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *PbQueueInfo) GetScheduled() int64 {
	if x != nil {
		return x.Scheduled
	}
	return 0
}

func (x *PbQueueInfo) GetRetry() int64 {
	if x != nil {
		return x.Retry
	}
	return 0
}

func (x *PbQueueInfo) GetArchived() int64 {
	if x != nil {
		return x.Archived
	}
	return 0
}

func (x *PbQueueInfo) GetCompleted() int64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

func (x *PbQueueInfo) GetAggregating() int64 {
	if x != nil {
		return x.Aggregating
	}
	return 0
}

func (x *PbQueueInfo) GetProcessed() int64 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *PbQueueInfo) GetFailed() int64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *PbQueueInfo) GetProcessedTotal() int64 {
	if x != nil {
		return x.ProcessedTotal
	}
	return 0
}

func (x *PbQueueInfo) GetFailedTotal() int64 {
	if x != nil {
		return x.FailedTotal
	}
	return 0
}

func (x *PbQueueInfo) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

func (x *PbQueueInfo) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type Req struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ping          string                 `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Req) Reset() {
	*x = Req{}
	mi := &file_trigger_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{3}
}

func (x *Req) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Res struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pong          string                 `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Res) Reset() {
	*x = Res{}
	mi := &file_trigger_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{4}
}

func (x *Res) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type SendTriggerReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	// 秒
	ProcessIn uint64 `protobuf:"varint,1,opt,name=processIn,proto3" json:"processIn,omitempty"`
	// 触发时间 2019-01-01 00:00:00 二选一 该字段存在时，优先使用
	TriggerTime string `protobuf:"bytes,2,opt,name=triggerTime,proto3" json:"triggerTime,omitempty"`
	// POST json提交 不可为空
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// 重试次数 可为空 默认: 25
	MaxRetry int64 `protobuf:"varint,4,opt,name=maxRetry,proto3" json:"maxRetry,omitempty"`
	// 唯一消息 id 可为空
	MsgId string `protobuf:"bytes,5,opt,name=msgId,proto3" json:"msgId,omitempty"`
	// 触发内容，可为空
	Body          string `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendTriggerReq) Reset() {
	*x = SendTriggerReq{}
	mi := &file_trigger_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTriggerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTriggerReq) ProtoMessage() {}

func (x *SendTriggerReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTriggerReq.ProtoReflect.Descriptor instead.
func (*SendTriggerReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{5}
}

func (x *SendTriggerReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *SendTriggerReq) GetProcessIn() uint64 {
	if x != nil {
		return x.ProcessIn
	}
	return 0
}

func (x *SendTriggerReq) GetTriggerTime() string {
	if x != nil {
		return x.TriggerTime
	}
	return ""
}

func (x *SendTriggerReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SendTriggerReq) GetMaxRetry() int64 {
	if x != nil {
		return x.MaxRetry
	}
	return 0
}

func (x *SendTriggerReq) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *SendTriggerReq) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type SendTriggerRes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 唯一追踪 id
	TraceId string `protobuf:"bytes,1,opt,name=traceId,proto3" json:"traceId,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue string `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
	// ID is the identifier of the task.
	Id            string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendTriggerRes) Reset() {
	*x = SendTriggerRes{}
	mi := &file_trigger_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTriggerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTriggerRes) ProtoMessage() {}

func (x *SendTriggerRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTriggerRes.ProtoReflect.Descriptor instead.
func (*SendTriggerRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{6}
}

func (x *SendTriggerRes) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *SendTriggerRes) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *SendTriggerRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SendProtoTriggerReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	// 秒
	ProcessIn uint64 `protobuf:"varint,1,opt,name=processIn,proto3" json:"processIn,omitempty"`
	// 触发时间 2019-01-01 00:00:00 二选一 该字段存在时，优先使用
	TriggerTime string `protobuf:"bytes,2,opt,name=triggerTime,proto3" json:"triggerTime,omitempty"`
	// 最大重试次数（可为空，默认 25 次）
	//
	// 任务失败后会重试，重试间隔采用指数退避策略，时间间隔随重试次数成倍增长：
	//   - 第 1 次重试间隔约 1 秒，
	//   - 第 2 次重试间隔约 2 秒，
	//   - 第 3 次重试间隔约 4 秒，
	//   - 依此类推，间隔时间不断翻倍，
	//   - 重试间隔最高封顶为 30 分钟（1800 秒）。
	//
	// 具体时间区间示例：
	//
	//	1 次重试：约 1 秒
	//	5 次重试：约 16 秒
	//	7 次重试：约 64 秒（约 1 分钟）
	//	10 次重试：约 8 分钟
	//	12 次及以上重试：间隔固定为 30 分钟
	//
	// 总之，重试间隔从秒级开始，逐步增长到分钟、十几分钟，最终封顶 30 分钟。
	MaxRetry int64 `protobuf:"varint,3,opt,name=maxRetry,proto3" json:"maxRetry,omitempty"`
	// 唯一消息 id 可为空
	MsgId string `protobuf:"bytes,4,opt,name=msgId,proto3" json:"msgId,omitempty"`
	// 服务名称 不可为空 示例 127.0.0.1:8080 direct:///127.0.0.1:8080,127.0.0.2:8080,nacos://nacos:nacos@127.0.0.1:8848/service?namespaceid=public&timeout=5000s
	GrpcServer string `protobuf:"bytes,5,opt,name=grpcServer,proto3" json:"grpcServer,omitempty"`
	// 方法 不可为空
	Method string `protobuf:"bytes,6,opt,name=method,proto3" json:"method,omitempty"`
	// pb 字节数据 不可为空
	Payload []byte `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	// 请求超时时间 单位: 毫秒 可为空
	RequestTimeout int64 `protobuf:"varint,8,opt,name=requestTimeout,proto3" json:"requestTimeout,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendProtoTriggerReq) Reset() {
	*x = SendProtoTriggerReq{}
	mi := &file_trigger_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendProtoTriggerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProtoTriggerReq) ProtoMessage() {}

func (x *SendProtoTriggerReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProtoTriggerReq.ProtoReflect.Descriptor instead.
func (*SendProtoTriggerReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{7}
}

func (x *SendProtoTriggerReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *SendProtoTriggerReq) GetProcessIn() uint64 {
	if x != nil {
		return x.ProcessIn
	}
	return 0
}

func (x *SendProtoTriggerReq) GetTriggerTime() string {
	if x != nil {
		return x.TriggerTime
	}
	return ""
}

func (x *SendProtoTriggerReq) GetMaxRetry() int64 {
	if x != nil {
		return x.MaxRetry
	}
	return 0
}

func (x *SendProtoTriggerReq) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *SendProtoTriggerReq) GetGrpcServer() string {
	if x != nil {
		return x.GrpcServer
	}
	return ""
}

func (x *SendProtoTriggerReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SendProtoTriggerReq) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *SendProtoTriggerReq) GetRequestTimeout() int64 {
	if x != nil {
		return x.RequestTimeout
	}
	return 0
}

type SendProtoTriggerRes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 唯一追踪 id
	TraceId string `protobuf:"bytes,1,opt,name=traceId,proto3" json:"traceId,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue string `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
	// ID is the identifier of the task.
	Id            string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendProtoTriggerRes) Reset() {
	*x = SendProtoTriggerRes{}
	mi := &file_trigger_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendProtoTriggerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProtoTriggerRes) ProtoMessage() {}

func (x *SendProtoTriggerRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProtoTriggerRes.ProtoReflect.Descriptor instead.
func (*SendProtoTriggerRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{8}
}

func (x *SendProtoTriggerRes) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *SendProtoTriggerRes) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *SendProtoTriggerRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type QueuesReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser   *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueuesReq) Reset() {
	*x = QueuesReq{}
	mi := &file_trigger_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueuesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueuesReq) ProtoMessage() {}

func (x *QueuesReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueuesReq.ProtoReflect.Descriptor instead.
func (*QueuesReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{9}
}

func (x *QueuesReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

type QueuesRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queues        []string               `protobuf:"bytes,1,rep,name=queues,proto3" json:"queues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueuesRes) Reset() {
	*x = QueuesRes{}
	mi := &file_trigger_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueuesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueuesRes) ProtoMessage() {}

func (x *QueuesRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueuesRes.ProtoReflect.Descriptor instead.
func (*QueuesRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{10}
}

func (x *QueuesRes) GetQueues() []string {
	if x != nil {
		return x.Queues
	}
	return nil
}

type GetQueueInfoReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue         string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueInfoReq) Reset() {
	*x = GetQueueInfoReq{}
	mi := &file_trigger_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueInfoReq) ProtoMessage() {}

func (x *GetQueueInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueInfoReq.ProtoReflect.Descriptor instead.
func (*GetQueueInfoReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{11}
}

func (x *GetQueueInfoReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *GetQueueInfoReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type GetQueueInfoRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueInfo     *PbQueueInfo           `protobuf:"bytes,1,opt,name=queueInfo,proto3" json:"queueInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueInfoRes) Reset() {
	*x = GetQueueInfoRes{}
	mi := &file_trigger_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueInfoRes) ProtoMessage() {}

func (x *GetQueueInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueInfoRes.ProtoReflect.Descriptor instead.
func (*GetQueueInfoRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{12}
}

func (x *GetQueueInfoRes) GetQueueInfo() *PbQueueInfo {
	if x != nil {
		return x.QueueInfo
	}
	return nil
}

type ArchiveTaskReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	// ID is the identifier of the task.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveTaskReq) Reset() {
	*x = ArchiveTaskReq{}
	mi := &file_trigger_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveTaskReq) ProtoMessage() {}

func (x *ArchiveTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveTaskReq.ProtoReflect.Descriptor instead.
func (*ArchiveTaskReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{13}
}

func (x *ArchiveTaskReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *ArchiveTaskReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *ArchiveTaskReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ArchiveTaskRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveTaskRes) Reset() {
	*x = ArchiveTaskRes{}
	mi := &file_trigger_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveTaskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveTaskRes) ProtoMessage() {}

func (x *ArchiveTaskRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveTaskRes.ProtoReflect.Descriptor instead.
func (*ArchiveTaskRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{14}
}

type DeleteTaskReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	// ID is the identifier of the task.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskReq) Reset() {
	*x = DeleteTaskReq{}
	mi := &file_trigger_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskReq) ProtoMessage() {}

func (x *DeleteTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskReq.ProtoReflect.Descriptor instead.
func (*DeleteTaskReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteTaskReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *DeleteTaskReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *DeleteTaskReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTaskRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskRes) Reset() {
	*x = DeleteTaskRes{}
	mi := &file_trigger_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRes) ProtoMessage() {}

func (x *DeleteTaskRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRes.ProtoReflect.Descriptor instead.
func (*DeleteTaskRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{16}
}

type GetTaskInfoReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	// ID is the identifier of the task.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskInfoReq) Reset() {
	*x = GetTaskInfoReq{}
	mi := &file_trigger_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskInfoReq) ProtoMessage() {}

func (x *GetTaskInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskInfoReq.ProtoReflect.Descriptor instead.
func (*GetTaskInfoReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{17}
}

func (x *GetTaskInfoReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *GetTaskInfoReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *GetTaskInfoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTaskInfoRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskInfo      *PbTaskInfo            `protobuf:"bytes,1,opt,name=taskInfo,proto3" json:"taskInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskInfoRes) Reset() {
	*x = GetTaskInfoRes{}
	mi := &file_trigger_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskInfoRes) ProtoMessage() {}

func (x *GetTaskInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskInfoRes.ProtoReflect.Descriptor instead.
func (*GetTaskInfoRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{18}
}

func (x *GetTaskInfoRes) GetTaskInfo() *PbTaskInfo {
	if x != nil {
		return x.TaskInfo
	}
	return nil
}

type DeleteAllCompletedTasksReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue         string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAllCompletedTasksReq) Reset() {
	*x = DeleteAllCompletedTasksReq{}
	mi := &file_trigger_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAllCompletedTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllCompletedTasksReq) ProtoMessage() {}

func (x *DeleteAllCompletedTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllCompletedTasksReq.ProtoReflect.Descriptor instead.
func (*DeleteAllCompletedTasksReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteAllCompletedTasksReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *DeleteAllCompletedTasksReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type DeleteAllCompletedTasksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAllCompletedTasksRes) Reset() {
	*x = DeleteAllCompletedTasksRes{}
	mi := &file_trigger_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAllCompletedTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllCompletedTasksRes) ProtoMessage() {}

func (x *DeleteAllCompletedTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllCompletedTasksRes.ProtoReflect.Descriptor instead.
func (*DeleteAllCompletedTasksRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteAllCompletedTasksRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DeleteAllArchivedTasksReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue         string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAllArchivedTasksReq) Reset() {
	*x = DeleteAllArchivedTasksReq{}
	mi := &file_trigger_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAllArchivedTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllArchivedTasksReq) ProtoMessage() {}

func (x *DeleteAllArchivedTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllArchivedTasksReq.ProtoReflect.Descriptor instead.
func (*DeleteAllArchivedTasksReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteAllArchivedTasksReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *DeleteAllArchivedTasksReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type DeleteAllArchivedTasksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAllArchivedTasksRes) Reset() {
	*x = DeleteAllArchivedTasksRes{}
	mi := &file_trigger_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAllArchivedTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllArchivedTasksRes) ProtoMessage() {}

func (x *DeleteAllArchivedTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllArchivedTasksRes.ProtoReflect.Descriptor instead.
func (*DeleteAllArchivedTasksRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteAllArchivedTasksRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type HistoricalStatsReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	// 天
	N             uint32 `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoricalStatsReq) Reset() {
	*x = HistoricalStatsReq{}
	mi := &file_trigger_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricalStatsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalStatsReq) ProtoMessage() {}

func (x *HistoricalStatsReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalStatsReq.ProtoReflect.Descriptor instead.
func (*HistoricalStatsReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{23}
}

func (x *HistoricalStatsReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *HistoricalStatsReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *HistoricalStatsReq) GetN() uint32 {
	if x != nil {
		return x.N
	}
	return 0
}

type HistoricalStatsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DailyStat     []*PbDailyStats        `protobuf:"bytes,1,rep,name=dailyStat,proto3" json:"dailyStat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoricalStatsRes) Reset() {
	*x = HistoricalStatsRes{}
	mi := &file_trigger_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricalStatsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalStatsRes) ProtoMessage() {}

func (x *HistoricalStatsRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalStatsRes.ProtoReflect.Descriptor instead.
func (*HistoricalStatsRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{24}
}

func (x *HistoricalStatsRes) GetDailyStat() []*PbDailyStats {
	if x != nil {
		return x.DailyStat
	}
	return nil
}

type ListActiveTasksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser   *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	PageSize      int64                  `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNum       int64                  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	Queue         string                 `protobuf:"bytes,3,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListActiveTasksReq) Reset() {
	*x = ListActiveTasksReq{}
	mi := &file_trigger_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActiveTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveTasksReq) ProtoMessage() {}

func (x *ListActiveTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveTasksReq.ProtoReflect.Descriptor instead.
func (*ListActiveTasksReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{25}
}

func (x *ListActiveTasksReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *ListActiveTasksReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListActiveTasksReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListActiveTasksReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type ListActiveTasksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueInfo     *PbQueueInfo           `protobuf:"bytes,1,opt,name=queueInfo,proto3" json:"queueInfo,omitempty"`
	TasksInfo     []*PbTaskInfo          `protobuf:"bytes,2,rep,name=tasksInfo,proto3" json:"tasksInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListActiveTasksRes) Reset() {
	*x = ListActiveTasksRes{}
	mi := &file_trigger_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListActiveTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListActiveTasksRes) ProtoMessage() {}

func (x *ListActiveTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListActiveTasksRes.ProtoReflect.Descriptor instead.
func (*ListActiveTasksRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{26}
}

func (x *ListActiveTasksRes) GetQueueInfo() *PbQueueInfo {
	if x != nil {
		return x.QueueInfo
	}
	return nil
}

func (x *ListActiveTasksRes) GetTasksInfo() []*PbTaskInfo {
	if x != nil {
		return x.TasksInfo
	}
	return nil
}

type ListPendingTasksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser   *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	PageSize      int64                  `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNum       int64                  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	Queue         string                 `protobuf:"bytes,3,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPendingTasksReq) Reset() {
	*x = ListPendingTasksReq{}
	mi := &file_trigger_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPendingTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPendingTasksReq) ProtoMessage() {}

func (x *ListPendingTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPendingTasksReq.ProtoReflect.Descriptor instead.
func (*ListPendingTasksReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{27}
}

func (x *ListPendingTasksReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *ListPendingTasksReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPendingTasksReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListPendingTasksReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type ListPendingTasksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueInfo     *PbQueueInfo           `protobuf:"bytes,1,opt,name=queueInfo,proto3" json:"queueInfo,omitempty"`
	TasksInfo     []*PbTaskInfo          `protobuf:"bytes,2,rep,name=tasksInfo,proto3" json:"tasksInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPendingTasksRes) Reset() {
	*x = ListPendingTasksRes{}
	mi := &file_trigger_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPendingTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPendingTasksRes) ProtoMessage() {}

func (x *ListPendingTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPendingTasksRes.ProtoReflect.Descriptor instead.
func (*ListPendingTasksRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{28}
}

func (x *ListPendingTasksRes) GetQueueInfo() *PbQueueInfo {
	if x != nil {
		return x.QueueInfo
	}
	return nil
}

func (x *ListPendingTasksRes) GetTasksInfo() []*PbTaskInfo {
	if x != nil {
		return x.TasksInfo
	}
	return nil
}

type ListAggregatingTasksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser   *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	PageSize      int64                  `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNum       int64                  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	Queue         string                 `protobuf:"bytes,3,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	Group         string                 `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAggregatingTasksReq) Reset() {
	*x = ListAggregatingTasksReq{}
	mi := &file_trigger_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAggregatingTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAggregatingTasksReq) ProtoMessage() {}

func (x *ListAggregatingTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAggregatingTasksReq.ProtoReflect.Descriptor instead.
func (*ListAggregatingTasksReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{29}
}

func (x *ListAggregatingTasksReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *ListAggregatingTasksReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAggregatingTasksReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListAggregatingTasksReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *ListAggregatingTasksReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type ListAggregatingTasksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueInfo     *PbQueueInfo           `protobuf:"bytes,1,opt,name=queueInfo,proto3" json:"queueInfo,omitempty"`
	TasksInfo     []*PbTaskInfo          `protobuf:"bytes,2,rep,name=tasksInfo,proto3" json:"tasksInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAggregatingTasksRes) Reset() {
	*x = ListAggregatingTasksRes{}
	mi := &file_trigger_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAggregatingTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAggregatingTasksRes) ProtoMessage() {}

func (x *ListAggregatingTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAggregatingTasksRes.ProtoReflect.Descriptor instead.
func (*ListAggregatingTasksRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{30}
}

func (x *ListAggregatingTasksRes) GetQueueInfo() *PbQueueInfo {
	if x != nil {
		return x.QueueInfo
	}
	return nil
}

func (x *ListAggregatingTasksRes) GetTasksInfo() []*PbTaskInfo {
	if x != nil {
		return x.TasksInfo
	}
	return nil
}

type ListScheduledTasksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser   *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	PageSize      int64                  `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNum       int64                  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	Queue         string                 `protobuf:"bytes,3,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScheduledTasksReq) Reset() {
	*x = ListScheduledTasksReq{}
	mi := &file_trigger_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScheduledTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScheduledTasksReq) ProtoMessage() {}

func (x *ListScheduledTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScheduledTasksReq.ProtoReflect.Descriptor instead.
func (*ListScheduledTasksReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{31}
}

func (x *ListScheduledTasksReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *ListScheduledTasksReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListScheduledTasksReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListScheduledTasksReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type ListScheduledTasksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueInfo     *PbQueueInfo           `protobuf:"bytes,1,opt,name=queueInfo,proto3" json:"queueInfo,omitempty"`
	TasksInfo     []*PbTaskInfo          `protobuf:"bytes,2,rep,name=tasksInfo,proto3" json:"tasksInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListScheduledTasksRes) Reset() {
	*x = ListScheduledTasksRes{}
	mi := &file_trigger_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListScheduledTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListScheduledTasksRes) ProtoMessage() {}

func (x *ListScheduledTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListScheduledTasksRes.ProtoReflect.Descriptor instead.
func (*ListScheduledTasksRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{32}
}

func (x *ListScheduledTasksRes) GetQueueInfo() *PbQueueInfo {
	if x != nil {
		return x.QueueInfo
	}
	return nil
}

func (x *ListScheduledTasksRes) GetTasksInfo() []*PbTaskInfo {
	if x != nil {
		return x.TasksInfo
	}
	return nil
}

type ListRetryTasksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser   *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	PageSize      int64                  `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNum       int64                  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	Queue         string                 `protobuf:"bytes,3,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRetryTasksReq) Reset() {
	*x = ListRetryTasksReq{}
	mi := &file_trigger_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRetryTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRetryTasksReq) ProtoMessage() {}

func (x *ListRetryTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRetryTasksReq.ProtoReflect.Descriptor instead.
func (*ListRetryTasksReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{33}
}

func (x *ListRetryTasksReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *ListRetryTasksReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRetryTasksReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListRetryTasksReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type ListRetryTasksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueInfo     *PbQueueInfo           `protobuf:"bytes,1,opt,name=queueInfo,proto3" json:"queueInfo,omitempty"`
	TasksInfo     []*PbTaskInfo          `protobuf:"bytes,2,rep,name=tasksInfo,proto3" json:"tasksInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRetryTasksRes) Reset() {
	*x = ListRetryTasksRes{}
	mi := &file_trigger_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRetryTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRetryTasksRes) ProtoMessage() {}

func (x *ListRetryTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRetryTasksRes.ProtoReflect.Descriptor instead.
func (*ListRetryTasksRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{34}
}

func (x *ListRetryTasksRes) GetQueueInfo() *PbQueueInfo {
	if x != nil {
		return x.QueueInfo
	}
	return nil
}

func (x *ListRetryTasksRes) GetTasksInfo() []*PbTaskInfo {
	if x != nil {
		return x.TasksInfo
	}
	return nil
}

type ListArchivedTasksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser   *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	PageSize      int64                  `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNum       int64                  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	Queue         string                 `protobuf:"bytes,3,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArchivedTasksReq) Reset() {
	*x = ListArchivedTasksReq{}
	mi := &file_trigger_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArchivedTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArchivedTasksReq) ProtoMessage() {}

func (x *ListArchivedTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArchivedTasksReq.ProtoReflect.Descriptor instead.
func (*ListArchivedTasksReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{35}
}

func (x *ListArchivedTasksReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *ListArchivedTasksReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListArchivedTasksReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListArchivedTasksReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type ListArchivedTasksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueInfo     *PbQueueInfo           `protobuf:"bytes,1,opt,name=queueInfo,proto3" json:"queueInfo,omitempty"`
	TasksInfo     []*PbTaskInfo          `protobuf:"bytes,2,rep,name=tasksInfo,proto3" json:"tasksInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArchivedTasksRes) Reset() {
	*x = ListArchivedTasksRes{}
	mi := &file_trigger_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArchivedTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArchivedTasksRes) ProtoMessage() {}

func (x *ListArchivedTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArchivedTasksRes.ProtoReflect.Descriptor instead.
func (*ListArchivedTasksRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{36}
}

func (x *ListArchivedTasksRes) GetQueueInfo() *PbQueueInfo {
	if x != nil {
		return x.QueueInfo
	}
	return nil
}

func (x *ListArchivedTasksRes) GetTasksInfo() []*PbTaskInfo {
	if x != nil {
		return x.TasksInfo
	}
	return nil
}

type ListCompletedTasksReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser   *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	PageSize      int64                  `protobuf:"varint,1,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageNum       int64                  `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	Queue         string                 `protobuf:"bytes,3,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCompletedTasksReq) Reset() {
	*x = ListCompletedTasksReq{}
	mi := &file_trigger_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCompletedTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompletedTasksReq) ProtoMessage() {}

func (x *ListCompletedTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompletedTasksReq.ProtoReflect.Descriptor instead.
func (*ListCompletedTasksReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{37}
}

func (x *ListCompletedTasksReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *ListCompletedTasksReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListCompletedTasksReq) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListCompletedTasksReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type ListCompletedTasksRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueInfo     *PbQueueInfo           `protobuf:"bytes,1,opt,name=queueInfo,proto3" json:"queueInfo,omitempty"`
	TasksInfo     []*PbTaskInfo          `protobuf:"bytes,2,rep,name=tasksInfo,proto3" json:"tasksInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCompletedTasksRes) Reset() {
	*x = ListCompletedTasksRes{}
	mi := &file_trigger_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCompletedTasksRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCompletedTasksRes) ProtoMessage() {}

func (x *ListCompletedTasksRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCompletedTasksRes.ProtoReflect.Descriptor instead.
func (*ListCompletedTasksRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{38}
}

func (x *ListCompletedTasksRes) GetQueueInfo() *PbQueueInfo {
	if x != nil {
		return x.QueueInfo
	}
	return nil
}

func (x *ListCompletedTasksRes) GetTasksInfo() []*PbTaskInfo {
	if x != nil {
		return x.TasksInfo
	}
	return nil
}

type RunTaskReq struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CurrentUser *extproto.CurrentUser  `protobuf:"bytes,100,opt,name=currentUser,proto3" json:"currentUser,omitempty"`
	// Queue is the name of the queue in which the task belongs.
	Queue string `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"` // 默认 critical
	// ID is the identifier of the task.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunTaskReq) Reset() {
	*x = RunTaskReq{}
	mi := &file_trigger_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTaskReq) ProtoMessage() {}

func (x *RunTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTaskReq.ProtoReflect.Descriptor instead.
func (*RunTaskReq) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{39}
}

func (x *RunTaskReq) GetCurrentUser() *extproto.CurrentUser {
	if x != nil {
		return x.CurrentUser
	}
	return nil
}

func (x *RunTaskReq) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *RunTaskReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RunTaskRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunTaskRes) Reset() {
	*x = RunTaskRes{}
	mi := &file_trigger_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunTaskRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTaskRes) ProtoMessage() {}

func (x *RunTaskRes) ProtoReflect() protoreflect.Message {
	mi := &file_trigger_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTaskRes.ProtoReflect.Descriptor instead.
func (*RunTaskRes) Descriptor() ([]byte, []int) {
	return file_trigger_proto_rawDescGZIP(), []int{40}
}

var File_trigger_proto protoreflect.FileDescriptor

const file_trigger_proto_rawDesc = "" +
	"\n" +
	"\rtrigger.proto\x12\atrigger\x1a\x17validate/validate.proto\x1a\x0eextproto.proto\"\xd4\x03\n" +
	"\n" +
	"PbTaskInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05queue\x18\x02 \x01(\tR\x05queue\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x18\n" +
	"\apayload\x18\x04 \x01(\tR\apayload\x12\x14\n" +
	"\x05state\x18\x05 \x01(\x05R\x05state\x12\x1a\n" +
	"\bmaxRetry\x18\x06 \x01(\x05R\bmaxRetry\x12\x18\n" +
	"\aretried\x18\a \x01(\x05R\aretried\x12\x18\n" +
	"\alastErr\x18\b \x01(\tR\alastErr\x12\"\n" +
	"\flastFailedAt\x18\t \x01(\tR\flastFailedAt\x12\x18\n" +
	"\atimeout\x18\n" +
	" \x01(\x03R\atimeout\x12\x1a\n" +
	"\bdeadline\x18\v \x01(\tR\bdeadline\x12\x14\n" +
	"\x05group\x18\f \x01(\tR\x05group\x12$\n" +
	"\rnextProcessAt\x18\r \x01(\tR\rnextProcessAt\x12\x1e\n" +
	"\n" +
	"isOrphaned\x18\x0e \x01(\bR\n" +
	"isOrphaned\x12\x1c\n" +
	"\tretention\x18\x0f \x01(\x03R\tretention\x12 \n" +
	"\vcompletedAt\x18\x10 \x01(\tR\vcompletedAt\x12\x16\n" +
	"\x06result\x18\x11 \x01(\tR\x06result\"n\n" +
	"\fPbDailyStats\x12\x14\n" +
	"\x05queue\x18\x01 \x01(\tR\x05queue\x12\x1c\n" +
	"\tprocessed\x18\x02 \x01(\x03R\tprocessed\x12\x16\n" +
	"\x06failed\x18\x03 \x01(\x03R\x06failed\x12\x12\n" +
	"\x04date\x18\x04 \x01(\tR\x04date\"\x83\x04\n" +
	"\vPbQueueInfo\x12\x14\n" +
	"\x05Queue\x18\x01 \x01(\tR\x05Queue\x12 \n" +
	"\vmemoryUsage\x18\x02 \x01(\x03R\vmemoryUsage\x12\x18\n" +
	"\alatency\x18\x03 \x01(\tR\alatency\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x16\n" +
	"\x06groups\x18\x05 \x01(\x03R\x06groups\x12\x18\n" +
	"\apending\x18\x06 \x01(\x03R\apending\x12\x16\n" +
	"\x06active\x18\a \x01(\x03R\x06active\x12\x1c\n" +
	"\tscheduled\x18\b \x01(\x03R\tscheduled\x12\x14\n" +
	"\x05retry\x18\t \x01(\x03R\x05retry\x12\x1a\n" +
	"\barchived\x18\n" +
	" \x01(\x03R\barchived\x12\x1c\n" +
	"\tcompleted\x18\v \x01(\x03R\tcompleted\x12 \n" +
	"\vaggregating\x18\f \x01(\x03R\vaggregating\x12\x1c\n" +
	"\tprocessed\x18\r \x01(\x03R\tprocessed\x12\x16\n" +
	"\x06failed\x18\x0e \x01(\x03R\x06failed\x12&\n" +
	"\x0eprocessedTotal\x18\x0f \x01(\x03R\x0eprocessedTotal\x12 \n" +
	"\vfailedTotal\x18\x10 \x01(\x03R\vfailedTotal\x12\x16\n" +
	"\x06paused\x18\x11 \x01(\bR\x06paused\x12\x1c\n" +
	"\ttimestamp\x18\x12 \x01(\tR\ttimestamp\"\x19\n" +
	"\x03Req\x12\x12\n" +
	"\x04ping\x18\x01 \x01(\tR\x04ping\"\x19\n" +
	"\x03Res\x12\x12\n" +
	"\x04pong\x18\x01 \x01(\tR\x04pong\"\xe1\x01\n" +
	"\x0eSendTriggerReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12\x1c\n" +
	"\tprocessIn\x18\x01 \x01(\x04R\tprocessIn\x12 \n" +
	"\vtriggerTime\x18\x02 \x01(\tR\vtriggerTime\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x1a\n" +
	"\bmaxRetry\x18\x04 \x01(\x03R\bmaxRetry\x12\x14\n" +
	"\x05msgId\x18\x05 \x01(\tR\x05msgId\x12\x12\n" +
	"\x04body\x18\x06 \x01(\tR\x04body\"P\n" +
	"\x0eSendTriggerRes\x12\x18\n" +
	"\atraceId\x18\x01 \x01(\tR\atraceId\x12\x14\n" +
	"\x05queue\x18\x02 \x01(\tR\x05queue\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\"\xba\x02\n" +
	"\x13SendProtoTriggerReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12\x1c\n" +
	"\tprocessIn\x18\x01 \x01(\x04R\tprocessIn\x12 \n" +
	"\vtriggerTime\x18\x02 \x01(\tR\vtriggerTime\x12\x1a\n" +
	"\bmaxRetry\x18\x03 \x01(\x03R\bmaxRetry\x12\x14\n" +
	"\x05msgId\x18\x04 \x01(\tR\x05msgId\x12\x1e\n" +
	"\n" +
	"grpcServer\x18\x05 \x01(\tR\n" +
	"grpcServer\x12\x16\n" +
	"\x06method\x18\x06 \x01(\tR\x06method\x12\x18\n" +
	"\apayload\x18\a \x01(\fR\apayload\x12&\n" +
	"\x0erequestTimeout\x18\b \x01(\x03R\x0erequestTimeout\"U\n" +
	"\x13SendProtoTriggerRes\x12\x18\n" +
	"\atraceId\x18\x01 \x01(\tR\atraceId\x12\x14\n" +
	"\x05queue\x18\x02 \x01(\tR\x05queue\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\"D\n" +
	"\tQueuesReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\"#\n" +
	"\tQueuesRes\x12\x16\n" +
	"\x06queues\x18\x01 \x03(\tR\x06queues\"i\n" +
	"\x0fGetQueueInfoReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12\x1d\n" +
	"\x05queue\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\"E\n" +
	"\x0fGetQueueInfoRes\x122\n" +
	"\tqueueInfo\x18\x01 \x01(\v2\x14.trigger.PbQueueInfoR\tqueueInfo\"\x81\x01\n" +
	"\x0eArchiveTaskReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12\x1d\n" +
	"\x05queue\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\x12\x17\n" +
	"\x02id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x02id\"\x10\n" +
	"\x0eArchiveTaskRes\"\x80\x01\n" +
	"\rDeleteTaskReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12\x1d\n" +
	"\x05queue\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\x12\x17\n" +
	"\x02id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x02id\"\x0f\n" +
	"\rDeleteTaskRes\"\x81\x01\n" +
	"\x0eGetTaskInfoReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12\x1d\n" +
	"\x05queue\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\x12\x17\n" +
	"\x02id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x02id\"A\n" +
	"\x0eGetTaskInfoRes\x12/\n" +
	"\btaskInfo\x18\x01 \x01(\v2\x13.trigger.PbTaskInfoR\btaskInfo\"t\n" +
	"\x1aDeleteAllCompletedTasksReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12\x1d\n" +
	"\x05queue\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\"2\n" +
	"\x1aDeleteAllCompletedTasksRes\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\"s\n" +
	"\x19DeleteAllArchivedTasksReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12\x1d\n" +
	"\x05queue\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\"1\n" +
	"\x19DeleteAllArchivedTasksRes\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\"\x85\x01\n" +
	"\x12HistoricalStatsReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12\x1d\n" +
	"\x05queue\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\x12\x17\n" +
	"\x01n\x18\x02 \x01(\rB\t\xfaB\x06*\x04\x18Z(\x01R\x01n\"I\n" +
	"\x12HistoricalStatsRes\x123\n" +
	"\tdailyStat\x18\x01 \x03(\v2\x15.trigger.PbDailyStatsR\tdailyStat\"\xb4\x01\n" +
	"\x12ListActiveTasksReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12#\n" +
	"\bpageSize\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\bpageSize\x12!\n" +
	"\apageNum\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\apageNum\x12\x1d\n" +
	"\x05queue\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\"{\n" +
	"\x12ListActiveTasksRes\x122\n" +
	"\tqueueInfo\x18\x01 \x01(\v2\x14.trigger.PbQueueInfoR\tqueueInfo\x121\n" +
	"\ttasksInfo\x18\x02 \x03(\v2\x13.trigger.PbTaskInfoR\ttasksInfo\"\xb5\x01\n" +
	"\x13ListPendingTasksReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12#\n" +
	"\bpageSize\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\bpageSize\x12!\n" +
	"\apageNum\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\apageNum\x12\x1d\n" +
	"\x05queue\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\"|\n" +
	"\x13ListPendingTasksRes\x122\n" +
	"\tqueueInfo\x18\x01 \x01(\v2\x14.trigger.PbQueueInfoR\tqueueInfo\x121\n" +
	"\ttasksInfo\x18\x02 \x03(\v2\x13.trigger.PbTaskInfoR\ttasksInfo\"\xd8\x01\n" +
	"\x17ListAggregatingTasksReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12#\n" +
	"\bpageSize\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\bpageSize\x12!\n" +
	"\apageNum\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\apageNum\x12\x1d\n" +
	"\x05queue\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\x12\x1d\n" +
	"\x05group\x18\x04 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05group\"\x80\x01\n" +
	"\x17ListAggregatingTasksRes\x122\n" +
	"\tqueueInfo\x18\x01 \x01(\v2\x14.trigger.PbQueueInfoR\tqueueInfo\x121\n" +
	"\ttasksInfo\x18\x02 \x03(\v2\x13.trigger.PbTaskInfoR\ttasksInfo\"\xb7\x01\n" +
	"\x15ListScheduledTasksReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12#\n" +
	"\bpageSize\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\bpageSize\x12!\n" +
	"\apageNum\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\apageNum\x12\x1d\n" +
	"\x05queue\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\"~\n" +
	"\x15ListScheduledTasksRes\x122\n" +
	"\tqueueInfo\x18\x01 \x01(\v2\x14.trigger.PbQueueInfoR\tqueueInfo\x121\n" +
	"\ttasksInfo\x18\x02 \x03(\v2\x13.trigger.PbTaskInfoR\ttasksInfo\"\xb3\x01\n" +
	"\x11ListRetryTasksReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12#\n" +
	"\bpageSize\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\bpageSize\x12!\n" +
	"\apageNum\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\apageNum\x12\x1d\n" +
	"\x05queue\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\"z\n" +
	"\x11ListRetryTasksRes\x122\n" +
	"\tqueueInfo\x18\x01 \x01(\v2\x14.trigger.PbQueueInfoR\tqueueInfo\x121\n" +
	"\ttasksInfo\x18\x02 \x03(\v2\x13.trigger.PbTaskInfoR\ttasksInfo\"\xb6\x01\n" +
	"\x14ListArchivedTasksReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12#\n" +
	"\bpageSize\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\bpageSize\x12!\n" +
	"\apageNum\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\apageNum\x12\x1d\n" +
	"\x05queue\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\"}\n" +
	"\x14ListArchivedTasksRes\x122\n" +
	"\tqueueInfo\x18\x01 \x01(\v2\x14.trigger.PbQueueInfoR\tqueueInfo\x121\n" +
	"\ttasksInfo\x18\x02 \x03(\v2\x13.trigger.PbTaskInfoR\ttasksInfo\"\xb7\x01\n" +
	"\x15ListCompletedTasksReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12#\n" +
	"\bpageSize\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\bpageSize\x12!\n" +
	"\apageNum\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02(\x00R\apageNum\x12\x1d\n" +
	"\x05queue\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\"~\n" +
	"\x15ListCompletedTasksRes\x122\n" +
	"\tqueueInfo\x18\x01 \x01(\v2\x14.trigger.PbQueueInfoR\tqueueInfo\x121\n" +
	"\ttasksInfo\x18\x02 \x03(\v2\x13.trigger.PbTaskInfoR\ttasksInfo\"}\n" +
	"\n" +
	"RunTaskReq\x127\n" +
	"\vcurrentUser\x18d \x01(\v2\x15.extproto.CurrentUserR\vcurrentUser\x12\x1d\n" +
	"\x05queue\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x05queue\x12\x17\n" +
	"\x02id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x02id\"\f\n" +
	"\n" +
	"RunTaskRes2\x82\v\n" +
	"\n" +
	"TriggerRpc\x12\"\n" +
	"\x04Ping\x12\f.trigger.Req\x1a\f.trigger.Res\x12?\n" +
	"\vSendTrigger\x12\x17.trigger.SendTriggerReq\x1a\x17.trigger.SendTriggerRes\x12N\n" +
	"\x10SendProtoTrigger\x12\x1c.trigger.SendProtoTriggerReq\x1a\x1c.trigger.SendProtoTriggerRes\x120\n" +
	"\x06Queues\x12\x12.trigger.QueuesReq\x1a\x12.trigger.QueuesRes\x12B\n" +
	"\fGetQueueInfo\x12\x18.trigger.GetQueueInfoReq\x1a\x18.trigger.GetQueueInfoRes\x12?\n" +
	"\vArchiveTask\x12\x17.trigger.ArchiveTaskReq\x1a\x17.trigger.ArchiveTaskRes\x12<\n" +
	"\n" +
	"DeleteTask\x12\x16.trigger.DeleteTaskReq\x1a\x16.trigger.DeleteTaskRes\x12?\n" +
	"\vGetTaskInfo\x12\x17.trigger.GetTaskInfoReq\x1a\x17.trigger.GetTaskInfoRes\x12c\n" +
	"\x17DeleteAllCompletedTasks\x12#.trigger.DeleteAllCompletedTasksReq\x1a#.trigger.DeleteAllCompletedTasksRes\x12`\n" +
	"\x16DeleteAllArchivedTasks\x12\".trigger.DeleteAllArchivedTasksReq\x1a\".trigger.DeleteAllArchivedTasksRes\x12K\n" +
	"\x0fHistoricalStats\x12\x1b.trigger.HistoricalStatsReq\x1a\x1b.trigger.HistoricalStatsRes\x12K\n" +
	"\x0fListActiveTasks\x12\x1b.trigger.ListActiveTasksReq\x1a\x1b.trigger.ListActiveTasksRes\x12N\n" +
	"\x10ListPendingTasks\x12\x1c.trigger.ListPendingTasksReq\x1a\x1c.trigger.ListPendingTasksRes\x12Z\n" +
	"\x14ListAggregatingTasks\x12 .trigger.ListAggregatingTasksReq\x1a .trigger.ListAggregatingTasksRes\x12T\n" +
	"\x12ListScheduledTasks\x12\x1e.trigger.ListScheduledTasksReq\x1a\x1e.trigger.ListScheduledTasksRes\x12H\n" +
	"\x0eListRetryTasks\x12\x1a.trigger.ListRetryTasksReq\x1a\x1a.trigger.ListRetryTasksRes\x12Q\n" +
	"\x11ListArchivedTasks\x12\x1d.trigger.ListArchivedTasksReq\x1a\x1d.trigger.ListArchivedTasksRes\x12T\n" +
	"\x12ListCompletedTasks\x12\x1e.trigger.ListCompletedTasksReq\x1a\x1e.trigger.ListCompletedTasksRes\x123\n" +
	"\aRunTask\x12\x13.trigger.RunTaskReq\x1a\x13.trigger.RunTaskResB4\n" +
	"\x17com.github.trigger.grpcB\fTriggerProtoP\x01Z\t./triggerb\x06proto3"

var (
	file_trigger_proto_rawDescOnce sync.Once
	file_trigger_proto_rawDescData []byte
)

func file_trigger_proto_rawDescGZIP() []byte {
	file_trigger_proto_rawDescOnce.Do(func() {
		file_trigger_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_trigger_proto_rawDesc), len(file_trigger_proto_rawDesc)))
	})
	return file_trigger_proto_rawDescData
}

var file_trigger_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_trigger_proto_goTypes = []any{
	(*PbTaskInfo)(nil),                 // 0: trigger.PbTaskInfo
	(*PbDailyStats)(nil),               // 1: trigger.PbDailyStats
	(*PbQueueInfo)(nil),                // 2: trigger.PbQueueInfo
	(*Req)(nil),                        // 3: trigger.Req
	(*Res)(nil),                        // 4: trigger.Res
	(*SendTriggerReq)(nil),             // 5: trigger.SendTriggerReq
	(*SendTriggerRes)(nil),             // 6: trigger.SendTriggerRes
	(*SendProtoTriggerReq)(nil),        // 7: trigger.SendProtoTriggerReq
	(*SendProtoTriggerRes)(nil),        // 8: trigger.SendProtoTriggerRes
	(*QueuesReq)(nil),                  // 9: trigger.QueuesReq
	(*QueuesRes)(nil),                  // 10: trigger.QueuesRes
	(*GetQueueInfoReq)(nil),            // 11: trigger.GetQueueInfoReq
	(*GetQueueInfoRes)(nil),            // 12: trigger.GetQueueInfoRes
	(*ArchiveTaskReq)(nil),             // 13: trigger.ArchiveTaskReq
	(*ArchiveTaskRes)(nil),             // 14: trigger.ArchiveTaskRes
	(*DeleteTaskReq)(nil),              // 15: trigger.DeleteTaskReq
	(*DeleteTaskRes)(nil),              // 16: trigger.DeleteTaskRes
	(*GetTaskInfoReq)(nil),             // 17: trigger.GetTaskInfoReq
	(*GetTaskInfoRes)(nil),             // 18: trigger.GetTaskInfoRes
	(*DeleteAllCompletedTasksReq)(nil), // 19: trigger.DeleteAllCompletedTasksReq
	(*DeleteAllCompletedTasksRes)(nil), // 20: trigger.DeleteAllCompletedTasksRes
	(*DeleteAllArchivedTasksReq)(nil),  // 21: trigger.DeleteAllArchivedTasksReq
	(*DeleteAllArchivedTasksRes)(nil),  // 22: trigger.DeleteAllArchivedTasksRes
	(*HistoricalStatsReq)(nil),         // 23: trigger.HistoricalStatsReq
	(*HistoricalStatsRes)(nil),         // 24: trigger.HistoricalStatsRes
	(*ListActiveTasksReq)(nil),         // 25: trigger.ListActiveTasksReq
	(*ListActiveTasksRes)(nil),         // 26: trigger.ListActiveTasksRes
	(*ListPendingTasksReq)(nil),        // 27: trigger.ListPendingTasksReq
	(*ListPendingTasksRes)(nil),        // 28: trigger.ListPendingTasksRes
	(*ListAggregatingTasksReq)(nil),    // 29: trigger.ListAggregatingTasksReq
	(*ListAggregatingTasksRes)(nil),    // 30: trigger.ListAggregatingTasksRes
	(*ListScheduledTasksReq)(nil),      // 31: trigger.ListScheduledTasksReq
	(*ListScheduledTasksRes)(nil),      // 32: trigger.ListScheduledTasksRes
	(*ListRetryTasksReq)(nil),          // 33: trigger.ListRetryTasksReq
	(*ListRetryTasksRes)(nil),          // 34: trigger.ListRetryTasksRes
	(*ListArchivedTasksReq)(nil),       // 35: trigger.ListArchivedTasksReq
	(*ListArchivedTasksRes)(nil),       // 36: trigger.ListArchivedTasksRes
	(*ListCompletedTasksReq)(nil),      // 37: trigger.ListCompletedTasksReq
	(*ListCompletedTasksRes)(nil),      // 38: trigger.ListCompletedTasksRes
	(*RunTaskReq)(nil),                 // 39: trigger.RunTaskReq
	(*RunTaskRes)(nil),                 // 40: trigger.RunTaskRes
	(*extproto.CurrentUser)(nil),       // 41: extproto.CurrentUser
}
var file_trigger_proto_depIdxs = []int32{
	41, // 0: trigger.SendTriggerReq.currentUser:type_name -> extproto.CurrentUser
	41, // 1: trigger.SendProtoTriggerReq.currentUser:type_name -> extproto.CurrentUser
	41, // 2: trigger.QueuesReq.currentUser:type_name -> extproto.CurrentUser
	41, // 3: trigger.GetQueueInfoReq.currentUser:type_name -> extproto.CurrentUser
	2,  // 4: trigger.GetQueueInfoRes.queueInfo:type_name -> trigger.PbQueueInfo
	41, // 5: trigger.ArchiveTaskReq.currentUser:type_name -> extproto.CurrentUser
	41, // 6: trigger.DeleteTaskReq.currentUser:type_name -> extproto.CurrentUser
	41, // 7: trigger.GetTaskInfoReq.currentUser:type_name -> extproto.CurrentUser
	0,  // 8: trigger.GetTaskInfoRes.taskInfo:type_name -> trigger.PbTaskInfo
	41, // 9: trigger.DeleteAllCompletedTasksReq.currentUser:type_name -> extproto.CurrentUser
	41, // 10: trigger.DeleteAllArchivedTasksReq.currentUser:type_name -> extproto.CurrentUser
	41, // 11: trigger.HistoricalStatsReq.currentUser:type_name -> extproto.CurrentUser
	1,  // 12: trigger.HistoricalStatsRes.dailyStat:type_name -> trigger.PbDailyStats
	41, // 13: trigger.ListActiveTasksReq.currentUser:type_name -> extproto.CurrentUser
	2,  // 14: trigger.ListActiveTasksRes.queueInfo:type_name -> trigger.PbQueueInfo
	0,  // 15: trigger.ListActiveTasksRes.tasksInfo:type_name -> trigger.PbTaskInfo
	41, // 16: trigger.ListPendingTasksReq.currentUser:type_name -> extproto.CurrentUser
	2,  // 17: trigger.ListPendingTasksRes.queueInfo:type_name -> trigger.PbQueueInfo
	0,  // 18: trigger.ListPendingTasksRes.tasksInfo:type_name -> trigger.PbTaskInfo
	41, // 19: trigger.ListAggregatingTasksReq.currentUser:type_name -> extproto.CurrentUser
	2,  // 20: trigger.ListAggregatingTasksRes.queueInfo:type_name -> trigger.PbQueueInfo
	0,  // 21: trigger.ListAggregatingTasksRes.tasksInfo:type_name -> trigger.PbTaskInfo
	41, // 22: trigger.ListScheduledTasksReq.currentUser:type_name -> extproto.CurrentUser
	2,  // 23: trigger.ListScheduledTasksRes.queueInfo:type_name -> trigger.PbQueueInfo
	0,  // 24: trigger.ListScheduledTasksRes.tasksInfo:type_name -> trigger.PbTaskInfo
	41, // 25: trigger.ListRetryTasksReq.currentUser:type_name -> extproto.CurrentUser
	2,  // 26: trigger.ListRetryTasksRes.queueInfo:type_name -> trigger.PbQueueInfo
	0,  // 27: trigger.ListRetryTasksRes.tasksInfo:type_name -> trigger.PbTaskInfo
	41, // 28: trigger.ListArchivedTasksReq.currentUser:type_name -> extproto.CurrentUser
	2,  // 29: trigger.ListArchivedTasksRes.queueInfo:type_name -> trigger.PbQueueInfo
	0,  // 30: trigger.ListArchivedTasksRes.tasksInfo:type_name -> trigger.PbTaskInfo
	41, // 31: trigger.ListCompletedTasksReq.currentUser:type_name -> extproto.CurrentUser
	2,  // 32: trigger.ListCompletedTasksRes.queueInfo:type_name -> trigger.PbQueueInfo
	0,  // 33: trigger.ListCompletedTasksRes.tasksInfo:type_name -> trigger.PbTaskInfo
	41, // 34: trigger.RunTaskReq.currentUser:type_name -> extproto.CurrentUser
	3,  // 35: trigger.TriggerRpc.Ping:input_type -> trigger.Req
	5,  // 36: trigger.TriggerRpc.SendTrigger:input_type -> trigger.SendTriggerReq
	7,  // 37: trigger.TriggerRpc.SendProtoTrigger:input_type -> trigger.SendProtoTriggerReq
	9,  // 38: trigger.TriggerRpc.Queues:input_type -> trigger.QueuesReq
	11, // 39: trigger.TriggerRpc.GetQueueInfo:input_type -> trigger.GetQueueInfoReq
	13, // 40: trigger.TriggerRpc.ArchiveTask:input_type -> trigger.ArchiveTaskReq
	15, // 41: trigger.TriggerRpc.DeleteTask:input_type -> trigger.DeleteTaskReq
	17, // 42: trigger.TriggerRpc.GetTaskInfo:input_type -> trigger.GetTaskInfoReq
	19, // 43: trigger.TriggerRpc.DeleteAllCompletedTasks:input_type -> trigger.DeleteAllCompletedTasksReq
	21, // 44: trigger.TriggerRpc.DeleteAllArchivedTasks:input_type -> trigger.DeleteAllArchivedTasksReq
	23, // 45: trigger.TriggerRpc.HistoricalStats:input_type -> trigger.HistoricalStatsReq
	25, // 46: trigger.TriggerRpc.ListActiveTasks:input_type -> trigger.ListActiveTasksReq
	27, // 47: trigger.TriggerRpc.ListPendingTasks:input_type -> trigger.ListPendingTasksReq
	29, // 48: trigger.TriggerRpc.ListAggregatingTasks:input_type -> trigger.ListAggregatingTasksReq
	31, // 49: trigger.TriggerRpc.ListScheduledTasks:input_type -> trigger.ListScheduledTasksReq
	33, // 50: trigger.TriggerRpc.ListRetryTasks:input_type -> trigger.ListRetryTasksReq
	35, // 51: trigger.TriggerRpc.ListArchivedTasks:input_type -> trigger.ListArchivedTasksReq
	37, // 52: trigger.TriggerRpc.ListCompletedTasks:input_type -> trigger.ListCompletedTasksReq
	39, // 53: trigger.TriggerRpc.RunTask:input_type -> trigger.RunTaskReq
	4,  // 54: trigger.TriggerRpc.Ping:output_type -> trigger.Res
	6,  // 55: trigger.TriggerRpc.SendTrigger:output_type -> trigger.SendTriggerRes
	8,  // 56: trigger.TriggerRpc.SendProtoTrigger:output_type -> trigger.SendProtoTriggerRes
	10, // 57: trigger.TriggerRpc.Queues:output_type -> trigger.QueuesRes
	12, // 58: trigger.TriggerRpc.GetQueueInfo:output_type -> trigger.GetQueueInfoRes
	14, // 59: trigger.TriggerRpc.ArchiveTask:output_type -> trigger.ArchiveTaskRes
	16, // 60: trigger.TriggerRpc.DeleteTask:output_type -> trigger.DeleteTaskRes
	18, // 61: trigger.TriggerRpc.GetTaskInfo:output_type -> trigger.GetTaskInfoRes
	20, // 62: trigger.TriggerRpc.DeleteAllCompletedTasks:output_type -> trigger.DeleteAllCompletedTasksRes
	22, // 63: trigger.TriggerRpc.DeleteAllArchivedTasks:output_type -> trigger.DeleteAllArchivedTasksRes
	24, // 64: trigger.TriggerRpc.HistoricalStats:output_type -> trigger.HistoricalStatsRes
	26, // 65: trigger.TriggerRpc.ListActiveTasks:output_type -> trigger.ListActiveTasksRes
	28, // 66: trigger.TriggerRpc.ListPendingTasks:output_type -> trigger.ListPendingTasksRes
	30, // 67: trigger.TriggerRpc.ListAggregatingTasks:output_type -> trigger.ListAggregatingTasksRes
	32, // 68: trigger.TriggerRpc.ListScheduledTasks:output_type -> trigger.ListScheduledTasksRes
	34, // 69: trigger.TriggerRpc.ListRetryTasks:output_type -> trigger.ListRetryTasksRes
	36, // 70: trigger.TriggerRpc.ListArchivedTasks:output_type -> trigger.ListArchivedTasksRes
	38, // 71: trigger.TriggerRpc.ListCompletedTasks:output_type -> trigger.ListCompletedTasksRes
	40, // 72: trigger.TriggerRpc.RunTask:output_type -> trigger.RunTaskRes
	54, // [54:73] is the sub-list for method output_type
	35, // [35:54] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_trigger_proto_init() }
func file_trigger_proto_init() {
	if File_trigger_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_trigger_proto_rawDesc), len(file_trigger_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trigger_proto_goTypes,
		DependencyIndexes: file_trigger_proto_depIdxs,
		MessageInfos:      file_trigger_proto_msgTypes,
	}.Build()
	File_trigger_proto = out.File
	file_trigger_proto_goTypes = nil
	file_trigger_proto_depIdxs = nil
}
