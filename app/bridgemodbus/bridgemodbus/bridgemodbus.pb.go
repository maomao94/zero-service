// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: bridgemodbus.proto

package bridgemodbus

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Req struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ping          string                 `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"` // 健康检查请求内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Req) Reset() {
	*x = Req{}
	mi := &file_bridgemodbus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{0}
}

func (x *Req) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Res struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pong          string                 `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"` // 健康检查返回内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Res) Reset() {
	*x = Res{}
	mi := &file_bridgemodbus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{1}
}

func (x *Res) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ReadCoilsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       uint32                 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`   // 起始线圈地址
	Quantity      uint32                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"` // 读取数量（1–2000）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadCoilsReq) Reset() {
	*x = ReadCoilsReq{}
	mi := &file_bridgemodbus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadCoilsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCoilsReq) ProtoMessage() {}

func (x *ReadCoilsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCoilsReq.ProtoReflect.Descriptor instead.
func (*ReadCoilsReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{2}
}

func (x *ReadCoilsReq) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadCoilsReq) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadCoilsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"`       // 按位表示的线圈状态（bit0 对应起始地址）
	Values        []bool                 `protobuf:"varint,2,rep,packed,name=values,proto3" json:"values,omitempty"` // 每个元素对应一个线圈状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadCoilsRes) Reset() {
	*x = ReadCoilsRes{}
	mi := &file_bridgemodbus_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadCoilsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCoilsRes) ProtoMessage() {}

func (x *ReadCoilsRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCoilsRes.ProtoReflect.Descriptor instead.
func (*ReadCoilsRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{3}
}

func (x *ReadCoilsRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ReadCoilsRes) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

type ReadDiscreteInputsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       uint32                 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`   // 起始离散输入地址
	Quantity      uint32                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"` // 读取数量（1–2000）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadDiscreteInputsReq) Reset() {
	*x = ReadDiscreteInputsReq{}
	mi := &file_bridgemodbus_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadDiscreteInputsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDiscreteInputsReq) ProtoMessage() {}

func (x *ReadDiscreteInputsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDiscreteInputsReq.ProtoReflect.Descriptor instead.
func (*ReadDiscreteInputsReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{4}
}

func (x *ReadDiscreteInputsReq) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadDiscreteInputsReq) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadDiscreteInputsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"`       // 按位表示的离散输入状态
	Values        []bool                 `protobuf:"varint,2,rep,packed,name=values,proto3" json:"values,omitempty"` // 每个元素对应一个离散输入
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadDiscreteInputsRes) Reset() {
	*x = ReadDiscreteInputsRes{}
	mi := &file_bridgemodbus_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadDiscreteInputsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDiscreteInputsRes) ProtoMessage() {}

func (x *ReadDiscreteInputsRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDiscreteInputsRes.ProtoReflect.Descriptor instead.
func (*ReadDiscreteInputsRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{5}
}

func (x *ReadDiscreteInputsRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ReadDiscreteInputsRes) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

type WriteSingleCoilReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       uint32                 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"` // 线圈地址
	Value         uint32                 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`     // 写入值：0x0000=OFF, 0xFF00=ON
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteSingleCoilReq) Reset() {
	*x = WriteSingleCoilReq{}
	mi := &file_bridgemodbus_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteSingleCoilReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSingleCoilReq) ProtoMessage() {}

func (x *WriteSingleCoilReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSingleCoilReq.ProtoReflect.Descriptor instead.
func (*WriteSingleCoilReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{6}
}

func (x *WriteSingleCoilReq) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteSingleCoilReq) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type WriteSingleCoilRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // 回显写入后的线圈值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteSingleCoilRes) Reset() {
	*x = WriteSingleCoilRes{}
	mi := &file_bridgemodbus_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteSingleCoilRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSingleCoilRes) ProtoMessage() {}

func (x *WriteSingleCoilRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSingleCoilRes.ProtoReflect.Descriptor instead.
func (*WriteSingleCoilRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{7}
}

func (x *WriteSingleCoilRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

type WriteMultipleCoilsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       uint32                 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`   // 起始线圈地址
	Quantity      uint32                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"` // 写入数量
	Values        []byte                 `protobuf:"bytes,3,opt,name=values,proto3" json:"values,omitempty"`      // 每 bit 对应一个线圈状态，0=OFF，1=ON
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteMultipleCoilsReq) Reset() {
	*x = WriteMultipleCoilsReq{}
	mi := &file_bridgemodbus_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteMultipleCoilsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMultipleCoilsReq) ProtoMessage() {}

func (x *WriteMultipleCoilsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMultipleCoilsReq.ProtoReflect.Descriptor instead.
func (*WriteMultipleCoilsReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{8}
}

func (x *WriteMultipleCoilsReq) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteMultipleCoilsReq) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *WriteMultipleCoilsReq) GetValues() []byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type WriteMultipleCoilsRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // 回显写入的数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteMultipleCoilsRes) Reset() {
	*x = WriteMultipleCoilsRes{}
	mi := &file_bridgemodbus_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteMultipleCoilsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMultipleCoilsRes) ProtoMessage() {}

func (x *WriteMultipleCoilsRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMultipleCoilsRes.ProtoReflect.Descriptor instead.
func (*WriteMultipleCoilsRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{9}
}

func (x *WriteMultipleCoilsRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReadInputRegistersReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       uint32                 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`   // 起始寄存器地址
	Quantity      uint32                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"` // 读取数量（1–125）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadInputRegistersReq) Reset() {
	*x = ReadInputRegistersReq{}
	mi := &file_bridgemodbus_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadInputRegistersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInputRegistersReq) ProtoMessage() {}

func (x *ReadInputRegistersReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInputRegistersReq.ProtoReflect.Descriptor instead.
func (*ReadInputRegistersReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{10}
}

func (x *ReadInputRegistersReq) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadInputRegistersReq) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadInputRegistersRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // 输入寄存器数据，每寄存器 2 字节，高字节在前
	Values        []string               `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`   // 每个寄存器值按 16 进制字符串返回，例如 "0xFF01"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadInputRegistersRes) Reset() {
	*x = ReadInputRegistersRes{}
	mi := &file_bridgemodbus_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadInputRegistersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInputRegistersRes) ProtoMessage() {}

func (x *ReadInputRegistersRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInputRegistersRes.ProtoReflect.Descriptor instead.
func (*ReadInputRegistersRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{11}
}

func (x *ReadInputRegistersRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ReadInputRegistersRes) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type ReadHoldingRegistersReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       uint32                 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`   // 起始寄存器地址
	Quantity      uint32                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"` // 读取数量（1–125）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadHoldingRegistersReq) Reset() {
	*x = ReadHoldingRegistersReq{}
	mi := &file_bridgemodbus_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadHoldingRegistersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHoldingRegistersReq) ProtoMessage() {}

func (x *ReadHoldingRegistersReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHoldingRegistersReq.ProtoReflect.Descriptor instead.
func (*ReadHoldingRegistersReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{12}
}

func (x *ReadHoldingRegistersReq) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadHoldingRegistersReq) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadHoldingRegistersRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // 保持寄存器数据，每寄存器 2 字节
	Values        []string               `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`   // 每个寄存器值按 16 进制字符串返回，例如 "0xFF01"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadHoldingRegistersRes) Reset() {
	*x = ReadHoldingRegistersRes{}
	mi := &file_bridgemodbus_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadHoldingRegistersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHoldingRegistersRes) ProtoMessage() {}

func (x *ReadHoldingRegistersRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHoldingRegistersRes.ProtoReflect.Descriptor instead.
func (*ReadHoldingRegistersRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{13}
}

func (x *ReadHoldingRegistersRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ReadHoldingRegistersRes) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type WriteSingleRegisterReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       uint32                 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"` // 寄存器地址
	Value         uint32                 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`     // 写入的 16-bit 值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteSingleRegisterReq) Reset() {
	*x = WriteSingleRegisterReq{}
	mi := &file_bridgemodbus_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteSingleRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSingleRegisterReq) ProtoMessage() {}

func (x *WriteSingleRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSingleRegisterReq.ProtoReflect.Descriptor instead.
func (*WriteSingleRegisterReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{14}
}

func (x *WriteSingleRegisterReq) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteSingleRegisterReq) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type WriteSingleRegisterRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // 回显写入后的寄存器值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteSingleRegisterRes) Reset() {
	*x = WriteSingleRegisterRes{}
	mi := &file_bridgemodbus_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteSingleRegisterRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSingleRegisterRes) ProtoMessage() {}

func (x *WriteSingleRegisterRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSingleRegisterRes.ProtoReflect.Descriptor instead.
func (*WriteSingleRegisterRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{15}
}

func (x *WriteSingleRegisterRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

type WriteMultipleRegistersReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       uint32                 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`   // 起始寄存器地址
	Quantity      uint32                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"` // 写入数量
	Values        []byte                 `protobuf:"bytes,3,opt,name=values,proto3" json:"values,omitempty"`      // 按寄存器顺序的字节数组，每寄存器 2 字节
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteMultipleRegistersReq) Reset() {
	*x = WriteMultipleRegistersReq{}
	mi := &file_bridgemodbus_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteMultipleRegistersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMultipleRegistersReq) ProtoMessage() {}

func (x *WriteMultipleRegistersReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMultipleRegistersReq.ProtoReflect.Descriptor instead.
func (*WriteMultipleRegistersReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{16}
}

func (x *WriteMultipleRegistersReq) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteMultipleRegistersReq) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *WriteMultipleRegistersReq) GetValues() []byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type WriteMultipleRegistersRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // 回显写入的数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteMultipleRegistersRes) Reset() {
	*x = WriteMultipleRegistersRes{}
	mi := &file_bridgemodbus_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteMultipleRegistersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMultipleRegistersRes) ProtoMessage() {}

func (x *WriteMultipleRegistersRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMultipleRegistersRes.ProtoReflect.Descriptor instead.
func (*WriteMultipleRegistersRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{17}
}

func (x *WriteMultipleRegistersRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReadWriteMultipleRegistersReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReadAddress   uint32                 `protobuf:"varint,1,opt,name=readAddress,proto3" json:"readAddress,omitempty"`     // 读取起始寄存器地址
	ReadQuantity  uint32                 `protobuf:"varint,2,opt,name=readQuantity,proto3" json:"readQuantity,omitempty"`   // 读取数量
	WriteAddress  uint32                 `protobuf:"varint,3,opt,name=writeAddress,proto3" json:"writeAddress,omitempty"`   // 写入起始寄存器地址
	WriteQuantity uint32                 `protobuf:"varint,4,opt,name=writeQuantity,proto3" json:"writeQuantity,omitempty"` // 写入数量
	Values        []byte                 `protobuf:"bytes,5,opt,name=values,proto3" json:"values,omitempty"`                // 写入数据，每寄存器 2 字节
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadWriteMultipleRegistersReq) Reset() {
	*x = ReadWriteMultipleRegistersReq{}
	mi := &file_bridgemodbus_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadWriteMultipleRegistersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadWriteMultipleRegistersReq) ProtoMessage() {}

func (x *ReadWriteMultipleRegistersReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadWriteMultipleRegistersReq.ProtoReflect.Descriptor instead.
func (*ReadWriteMultipleRegistersReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{18}
}

func (x *ReadWriteMultipleRegistersReq) GetReadAddress() uint32 {
	if x != nil {
		return x.ReadAddress
	}
	return 0
}

func (x *ReadWriteMultipleRegistersReq) GetReadQuantity() uint32 {
	if x != nil {
		return x.ReadQuantity
	}
	return 0
}

func (x *ReadWriteMultipleRegistersReq) GetWriteAddress() uint32 {
	if x != nil {
		return x.WriteAddress
	}
	return 0
}

func (x *ReadWriteMultipleRegistersReq) GetWriteQuantity() uint32 {
	if x != nil {
		return x.WriteQuantity
	}
	return 0
}

func (x *ReadWriteMultipleRegistersReq) GetValues() []byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type ReadWriteMultipleRegistersRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // 读取到的寄存器数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadWriteMultipleRegistersRes) Reset() {
	*x = ReadWriteMultipleRegistersRes{}
	mi := &file_bridgemodbus_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadWriteMultipleRegistersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadWriteMultipleRegistersRes) ProtoMessage() {}

func (x *ReadWriteMultipleRegistersRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadWriteMultipleRegistersRes.ProtoReflect.Descriptor instead.
func (*ReadWriteMultipleRegistersRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{19}
}

func (x *ReadWriteMultipleRegistersRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

type MaskWriteRegisterReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       uint32                 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"` // 寄存器地址
	AndMask       uint32                 `protobuf:"varint,2,opt,name=andMask,proto3" json:"andMask,omitempty"` // AND 掩码
	OrMask        uint32                 `protobuf:"varint,3,opt,name=orMask,proto3" json:"orMask,omitempty"`   // OR 掩码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaskWriteRegisterReq) Reset() {
	*x = MaskWriteRegisterReq{}
	mi := &file_bridgemodbus_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaskWriteRegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskWriteRegisterReq) ProtoMessage() {}

func (x *MaskWriteRegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskWriteRegisterReq.ProtoReflect.Descriptor instead.
func (*MaskWriteRegisterReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{20}
}

func (x *MaskWriteRegisterReq) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *MaskWriteRegisterReq) GetAndMask() uint32 {
	if x != nil {
		return x.AndMask
	}
	return 0
}

func (x *MaskWriteRegisterReq) GetOrMask() uint32 {
	if x != nil {
		return x.OrMask
	}
	return 0
}

type MaskWriteRegisterRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // 回显写入后的寄存器值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaskWriteRegisterRes) Reset() {
	*x = MaskWriteRegisterRes{}
	mi := &file_bridgemodbus_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaskWriteRegisterRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaskWriteRegisterRes) ProtoMessage() {}

func (x *MaskWriteRegisterRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaskWriteRegisterRes.ProtoReflect.Descriptor instead.
func (*MaskWriteRegisterRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{21}
}

func (x *MaskWriteRegisterRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReadFIFOQueueReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       uint32                 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"` // FIFO 队列寄存器地址
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFIFOQueueReq) Reset() {
	*x = ReadFIFOQueueReq{}
	mi := &file_bridgemodbus_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFIFOQueueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFIFOQueueReq) ProtoMessage() {}

func (x *ReadFIFOQueueReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFIFOQueueReq.ProtoReflect.Descriptor instead.
func (*ReadFIFOQueueReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{22}
}

func (x *ReadFIFOQueueReq) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

type ReadFIFOQueueRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []byte                 `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"` // FIFO 队列内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFIFOQueueRes) Reset() {
	*x = ReadFIFOQueueRes{}
	mi := &file_bridgemodbus_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFIFOQueueRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFIFOQueueRes) ProtoMessage() {}

func (x *ReadFIFOQueueRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFIFOQueueRes.ProtoReflect.Descriptor instead.
func (*ReadFIFOQueueRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{23}
}

func (x *ReadFIFOQueueRes) GetResults() []byte {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReadDeviceIdentificationReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ReadDeviceIdCode uint32                 `protobuf:"varint,1,opt,name=read_device_id_code,json=readDeviceIdCode,proto3" json:"read_device_id_code,omitempty"` // 读取类型：0x01=基本, 0x02=常规, 0x03=扩展
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReadDeviceIdentificationReq) Reset() {
	*x = ReadDeviceIdentificationReq{}
	mi := &file_bridgemodbus_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadDeviceIdentificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeviceIdentificationReq) ProtoMessage() {}

func (x *ReadDeviceIdentificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeviceIdentificationReq.ProtoReflect.Descriptor instead.
func (*ReadDeviceIdentificationReq) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{24}
}

func (x *ReadDeviceIdentificationReq) GetReadDeviceIdCode() uint32 {
	if x != nil {
		return x.ReadDeviceIdCode
	}
	return 0
}

type ReadDeviceIdentificationRes struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 原始对象 ID 映射 (十进制)，方便协议调试/直接对应 Modbus 规范
	Results map[uint32]string `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 对象 ID 用十六进制字符串表示，例如 "0x00", "0x01"
	HexResults map[string]string `protobuf:"bytes,2,rep,name=hexResults,proto3" json:"hexResults,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 语义化映射 (如果对象 ID 有标准含义，就用名字；否则 fallback 成 Object_0xXX)
	SemanticResults map[string]string `protobuf:"bytes,3,rep,name=semanticResults,proto3" json:"semanticResults,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReadDeviceIdentificationRes) Reset() {
	*x = ReadDeviceIdentificationRes{}
	mi := &file_bridgemodbus_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadDeviceIdentificationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDeviceIdentificationRes) ProtoMessage() {}

func (x *ReadDeviceIdentificationRes) ProtoReflect() protoreflect.Message {
	mi := &file_bridgemodbus_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDeviceIdentificationRes.ProtoReflect.Descriptor instead.
func (*ReadDeviceIdentificationRes) Descriptor() ([]byte, []int) {
	return file_bridgemodbus_proto_rawDescGZIP(), []int{25}
}

func (x *ReadDeviceIdentificationRes) GetResults() map[uint32]string {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ReadDeviceIdentificationRes) GetHexResults() map[string]string {
	if x != nil {
		return x.HexResults
	}
	return nil
}

func (x *ReadDeviceIdentificationRes) GetSemanticResults() map[string]string {
	if x != nil {
		return x.SemanticResults
	}
	return nil
}

var File_bridgemodbus_proto protoreflect.FileDescriptor

const file_bridgemodbus_proto_rawDesc = "" +
	"\n" +
	"\x12bridgemodbus.proto\x12\fbridgemodbus\"\x19\n" +
	"\x03Req\x12\x12\n" +
	"\x04ping\x18\x01 \x01(\tR\x04ping\"\x19\n" +
	"\x03Res\x12\x12\n" +
	"\x04pong\x18\x01 \x01(\tR\x04pong\"D\n" +
	"\fReadCoilsReq\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\rR\aaddress\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\rR\bquantity\"@\n" +
	"\fReadCoilsRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\x12\x16\n" +
	"\x06values\x18\x02 \x03(\bR\x06values\"M\n" +
	"\x15ReadDiscreteInputsReq\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\rR\aaddress\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\rR\bquantity\"I\n" +
	"\x15ReadDiscreteInputsRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\x12\x16\n" +
	"\x06values\x18\x02 \x03(\bR\x06values\"D\n" +
	"\x12WriteSingleCoilReq\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\rR\aaddress\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value\".\n" +
	"\x12WriteSingleCoilRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\"e\n" +
	"\x15WriteMultipleCoilsReq\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\rR\aaddress\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\rR\bquantity\x12\x16\n" +
	"\x06values\x18\x03 \x01(\fR\x06values\"1\n" +
	"\x15WriteMultipleCoilsRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\"M\n" +
	"\x15ReadInputRegistersReq\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\rR\aaddress\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\rR\bquantity\"I\n" +
	"\x15ReadInputRegistersRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\x12\x16\n" +
	"\x06values\x18\x02 \x03(\tR\x06values\"O\n" +
	"\x17ReadHoldingRegistersReq\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\rR\aaddress\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\rR\bquantity\"K\n" +
	"\x17ReadHoldingRegistersRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\x12\x16\n" +
	"\x06values\x18\x02 \x03(\tR\x06values\"H\n" +
	"\x16WriteSingleRegisterReq\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\rR\aaddress\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value\"2\n" +
	"\x16WriteSingleRegisterRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\"i\n" +
	"\x19WriteMultipleRegistersReq\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\rR\aaddress\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\rR\bquantity\x12\x16\n" +
	"\x06values\x18\x03 \x01(\fR\x06values\"5\n" +
	"\x19WriteMultipleRegistersRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\"\xc7\x01\n" +
	"\x1dReadWriteMultipleRegistersReq\x12 \n" +
	"\vreadAddress\x18\x01 \x01(\rR\vreadAddress\x12\"\n" +
	"\freadQuantity\x18\x02 \x01(\rR\freadQuantity\x12\"\n" +
	"\fwriteAddress\x18\x03 \x01(\rR\fwriteAddress\x12$\n" +
	"\rwriteQuantity\x18\x04 \x01(\rR\rwriteQuantity\x12\x16\n" +
	"\x06values\x18\x05 \x01(\fR\x06values\"9\n" +
	"\x1dReadWriteMultipleRegistersRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\"b\n" +
	"\x14MaskWriteRegisterReq\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\rR\aaddress\x12\x18\n" +
	"\aandMask\x18\x02 \x01(\rR\aandMask\x12\x16\n" +
	"\x06orMask\x18\x03 \x01(\rR\x06orMask\"0\n" +
	"\x14MaskWriteRegisterRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\",\n" +
	"\x10ReadFIFOQueueReq\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\rR\aaddress\",\n" +
	"\x10ReadFIFOQueueRes\x12\x18\n" +
	"\aresults\x18\x01 \x01(\fR\aresults\"L\n" +
	"\x1bReadDeviceIdentificationReq\x12-\n" +
	"\x13read_device_id_code\x18\x01 \x01(\rR\x10readDeviceIdCode\"\xf3\x03\n" +
	"\x1bReadDeviceIdentificationRes\x12P\n" +
	"\aresults\x18\x01 \x03(\v26.bridgemodbus.ReadDeviceIdentificationRes.ResultsEntryR\aresults\x12Y\n" +
	"\n" +
	"hexResults\x18\x02 \x03(\v29.bridgemodbus.ReadDeviceIdentificationRes.HexResultsEntryR\n" +
	"hexResults\x12h\n" +
	"\x0fsemanticResults\x18\x03 \x03(\v2>.bridgemodbus.ReadDeviceIdentificationRes.SemanticResultsEntryR\x0fsemanticResults\x1a:\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a=\n" +
	"\x0fHexResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14SemanticResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xc5\t\n" +
	"\fBridgeModbus\x12,\n" +
	"\x04Ping\x12\x11.bridgemodbus.Req\x1a\x11.bridgemodbus.Res\x12C\n" +
	"\tReadCoils\x12\x1a.bridgemodbus.ReadCoilsReq\x1a\x1a.bridgemodbus.ReadCoilsRes\x12^\n" +
	"\x12ReadDiscreteInputs\x12#.bridgemodbus.ReadDiscreteInputsReq\x1a#.bridgemodbus.ReadDiscreteInputsRes\x12U\n" +
	"\x0fWriteSingleCoil\x12 .bridgemodbus.WriteSingleCoilReq\x1a .bridgemodbus.WriteSingleCoilRes\x12^\n" +
	"\x12WriteMultipleCoils\x12#.bridgemodbus.WriteMultipleCoilsReq\x1a#.bridgemodbus.WriteMultipleCoilsRes\x12^\n" +
	"\x12ReadInputRegisters\x12#.bridgemodbus.ReadInputRegistersReq\x1a#.bridgemodbus.ReadInputRegistersRes\x12d\n" +
	"\x14ReadHoldingRegisters\x12%.bridgemodbus.ReadHoldingRegistersReq\x1a%.bridgemodbus.ReadHoldingRegistersRes\x12a\n" +
	"\x13WriteSingleRegister\x12$.bridgemodbus.WriteSingleRegisterReq\x1a$.bridgemodbus.WriteSingleRegisterRes\x12j\n" +
	"\x16WriteMultipleRegisters\x12'.bridgemodbus.WriteMultipleRegistersReq\x1a'.bridgemodbus.WriteMultipleRegistersRes\x12v\n" +
	"\x1aReadWriteMultipleRegisters\x12+.bridgemodbus.ReadWriteMultipleRegistersReq\x1a+.bridgemodbus.ReadWriteMultipleRegistersRes\x12[\n" +
	"\x11MaskWriteRegister\x12\".bridgemodbus.MaskWriteRegisterReq\x1a\".bridgemodbus.MaskWriteRegisterRes\x12O\n" +
	"\rReadFIFOQueue\x12\x1e.bridgemodbus.ReadFIFOQueueReq\x1a\x1e.bridgemodbus.ReadFIFOQueueRes\x12p\n" +
	"\x18ReadDeviceIdentification\x12).bridgemodbus.ReadDeviceIdentificationReq\x1a).bridgemodbus.ReadDeviceIdentificationResBC\n" +
	"\x1ccom.github.bridgemodbus.grpcB\x11BridgeModbusProtoP\x01Z\x0e./bridgemodbusb\x06proto3"

var (
	file_bridgemodbus_proto_rawDescOnce sync.Once
	file_bridgemodbus_proto_rawDescData []byte
)

func file_bridgemodbus_proto_rawDescGZIP() []byte {
	file_bridgemodbus_proto_rawDescOnce.Do(func() {
		file_bridgemodbus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bridgemodbus_proto_rawDesc), len(file_bridgemodbus_proto_rawDesc)))
	})
	return file_bridgemodbus_proto_rawDescData
}

var file_bridgemodbus_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_bridgemodbus_proto_goTypes = []any{
	(*Req)(nil),                           // 0: bridgemodbus.Req
	(*Res)(nil),                           // 1: bridgemodbus.Res
	(*ReadCoilsReq)(nil),                  // 2: bridgemodbus.ReadCoilsReq
	(*ReadCoilsRes)(nil),                  // 3: bridgemodbus.ReadCoilsRes
	(*ReadDiscreteInputsReq)(nil),         // 4: bridgemodbus.ReadDiscreteInputsReq
	(*ReadDiscreteInputsRes)(nil),         // 5: bridgemodbus.ReadDiscreteInputsRes
	(*WriteSingleCoilReq)(nil),            // 6: bridgemodbus.WriteSingleCoilReq
	(*WriteSingleCoilRes)(nil),            // 7: bridgemodbus.WriteSingleCoilRes
	(*WriteMultipleCoilsReq)(nil),         // 8: bridgemodbus.WriteMultipleCoilsReq
	(*WriteMultipleCoilsRes)(nil),         // 9: bridgemodbus.WriteMultipleCoilsRes
	(*ReadInputRegistersReq)(nil),         // 10: bridgemodbus.ReadInputRegistersReq
	(*ReadInputRegistersRes)(nil),         // 11: bridgemodbus.ReadInputRegistersRes
	(*ReadHoldingRegistersReq)(nil),       // 12: bridgemodbus.ReadHoldingRegistersReq
	(*ReadHoldingRegistersRes)(nil),       // 13: bridgemodbus.ReadHoldingRegistersRes
	(*WriteSingleRegisterReq)(nil),        // 14: bridgemodbus.WriteSingleRegisterReq
	(*WriteSingleRegisterRes)(nil),        // 15: bridgemodbus.WriteSingleRegisterRes
	(*WriteMultipleRegistersReq)(nil),     // 16: bridgemodbus.WriteMultipleRegistersReq
	(*WriteMultipleRegistersRes)(nil),     // 17: bridgemodbus.WriteMultipleRegistersRes
	(*ReadWriteMultipleRegistersReq)(nil), // 18: bridgemodbus.ReadWriteMultipleRegistersReq
	(*ReadWriteMultipleRegistersRes)(nil), // 19: bridgemodbus.ReadWriteMultipleRegistersRes
	(*MaskWriteRegisterReq)(nil),          // 20: bridgemodbus.MaskWriteRegisterReq
	(*MaskWriteRegisterRes)(nil),          // 21: bridgemodbus.MaskWriteRegisterRes
	(*ReadFIFOQueueReq)(nil),              // 22: bridgemodbus.ReadFIFOQueueReq
	(*ReadFIFOQueueRes)(nil),              // 23: bridgemodbus.ReadFIFOQueueRes
	(*ReadDeviceIdentificationReq)(nil),   // 24: bridgemodbus.ReadDeviceIdentificationReq
	(*ReadDeviceIdentificationRes)(nil),   // 25: bridgemodbus.ReadDeviceIdentificationRes
	nil,                                   // 26: bridgemodbus.ReadDeviceIdentificationRes.ResultsEntry
	nil,                                   // 27: bridgemodbus.ReadDeviceIdentificationRes.HexResultsEntry
	nil,                                   // 28: bridgemodbus.ReadDeviceIdentificationRes.SemanticResultsEntry
}
var file_bridgemodbus_proto_depIdxs = []int32{
	26, // 0: bridgemodbus.ReadDeviceIdentificationRes.results:type_name -> bridgemodbus.ReadDeviceIdentificationRes.ResultsEntry
	27, // 1: bridgemodbus.ReadDeviceIdentificationRes.hexResults:type_name -> bridgemodbus.ReadDeviceIdentificationRes.HexResultsEntry
	28, // 2: bridgemodbus.ReadDeviceIdentificationRes.semanticResults:type_name -> bridgemodbus.ReadDeviceIdentificationRes.SemanticResultsEntry
	0,  // 3: bridgemodbus.BridgeModbus.Ping:input_type -> bridgemodbus.Req
	2,  // 4: bridgemodbus.BridgeModbus.ReadCoils:input_type -> bridgemodbus.ReadCoilsReq
	4,  // 5: bridgemodbus.BridgeModbus.ReadDiscreteInputs:input_type -> bridgemodbus.ReadDiscreteInputsReq
	6,  // 6: bridgemodbus.BridgeModbus.WriteSingleCoil:input_type -> bridgemodbus.WriteSingleCoilReq
	8,  // 7: bridgemodbus.BridgeModbus.WriteMultipleCoils:input_type -> bridgemodbus.WriteMultipleCoilsReq
	10, // 8: bridgemodbus.BridgeModbus.ReadInputRegisters:input_type -> bridgemodbus.ReadInputRegistersReq
	12, // 9: bridgemodbus.BridgeModbus.ReadHoldingRegisters:input_type -> bridgemodbus.ReadHoldingRegistersReq
	14, // 10: bridgemodbus.BridgeModbus.WriteSingleRegister:input_type -> bridgemodbus.WriteSingleRegisterReq
	16, // 11: bridgemodbus.BridgeModbus.WriteMultipleRegisters:input_type -> bridgemodbus.WriteMultipleRegistersReq
	18, // 12: bridgemodbus.BridgeModbus.ReadWriteMultipleRegisters:input_type -> bridgemodbus.ReadWriteMultipleRegistersReq
	20, // 13: bridgemodbus.BridgeModbus.MaskWriteRegister:input_type -> bridgemodbus.MaskWriteRegisterReq
	22, // 14: bridgemodbus.BridgeModbus.ReadFIFOQueue:input_type -> bridgemodbus.ReadFIFOQueueReq
	24, // 15: bridgemodbus.BridgeModbus.ReadDeviceIdentification:input_type -> bridgemodbus.ReadDeviceIdentificationReq
	1,  // 16: bridgemodbus.BridgeModbus.Ping:output_type -> bridgemodbus.Res
	3,  // 17: bridgemodbus.BridgeModbus.ReadCoils:output_type -> bridgemodbus.ReadCoilsRes
	5,  // 18: bridgemodbus.BridgeModbus.ReadDiscreteInputs:output_type -> bridgemodbus.ReadDiscreteInputsRes
	7,  // 19: bridgemodbus.BridgeModbus.WriteSingleCoil:output_type -> bridgemodbus.WriteSingleCoilRes
	9,  // 20: bridgemodbus.BridgeModbus.WriteMultipleCoils:output_type -> bridgemodbus.WriteMultipleCoilsRes
	11, // 21: bridgemodbus.BridgeModbus.ReadInputRegisters:output_type -> bridgemodbus.ReadInputRegistersRes
	13, // 22: bridgemodbus.BridgeModbus.ReadHoldingRegisters:output_type -> bridgemodbus.ReadHoldingRegistersRes
	15, // 23: bridgemodbus.BridgeModbus.WriteSingleRegister:output_type -> bridgemodbus.WriteSingleRegisterRes
	17, // 24: bridgemodbus.BridgeModbus.WriteMultipleRegisters:output_type -> bridgemodbus.WriteMultipleRegistersRes
	19, // 25: bridgemodbus.BridgeModbus.ReadWriteMultipleRegisters:output_type -> bridgemodbus.ReadWriteMultipleRegistersRes
	21, // 26: bridgemodbus.BridgeModbus.MaskWriteRegister:output_type -> bridgemodbus.MaskWriteRegisterRes
	23, // 27: bridgemodbus.BridgeModbus.ReadFIFOQueue:output_type -> bridgemodbus.ReadFIFOQueueRes
	25, // 28: bridgemodbus.BridgeModbus.ReadDeviceIdentification:output_type -> bridgemodbus.ReadDeviceIdentificationRes
	16, // [16:29] is the sub-list for method output_type
	3,  // [3:16] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_bridgemodbus_proto_init() }
func file_bridgemodbus_proto_init() {
	if File_bridgemodbus_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bridgemodbus_proto_rawDesc), len(file_bridgemodbus_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bridgemodbus_proto_goTypes,
		DependencyIndexes: file_bridgemodbus_proto_depIdxs,
		MessageInfos:      file_bridgemodbus_proto_msgTypes,
	}.Build()
	File_bridgemodbus_proto = out.File
	file_bridgemodbus_proto_goTypes = nil
	file_bridgemodbus_proto_depIdxs = nil
}
