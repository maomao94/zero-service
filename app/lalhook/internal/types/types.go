// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package types

type ApiListTsReply struct {
	StreamName string      `json:"streamName"`
	ServerID   string      `json:"serverId"` // lalserver节点id
	Files      []ApiTsFile `json:"files"`    // TS 文件数组
}

type ApiListTsRequest struct {
	StreamName string `json:"streamName,optional"` // 流名称
	StartTime  int64  `json:"startTime,optional"`  // 开始时间戳（毫秒）
	EndTime    int64  `json:"endTime,optional"`    // 结束时间戳（毫秒）
	Event      string `json:"event,optional"`      // "open" 表示 ts 分片文件被创建，"close" 表示 ts 分片文件写入完毕
}

type ApiTsFile struct {
	Event       string  `json:"event"`       // "open" 表示 ts 分片文件被创建，"close" 表示 ts 分片文件写入完毕
	TsFile      string  `json:"tsFile"`      // ts文件磁盘地址
	TsId        int64   `json:"tsId"`        // TS 文件编号
	Duration    float64 `json:"duration"`    // ts 文件的时长，单位秒。只有 event 为 "close" 时有效
	TsTimestamp int64   `json:"tsTimestamp"` // TS 文件时间戳，方便区间查询
}

type EmptyReply struct {
}

type FpsInfo struct {
	UnixSec int64 `json:"unix_sec"` // 时间戳（秒）
	V       int64 `json:"v"`        // 帧数
}

type GroupInfo struct {
	StreamName    string        `json:"stream_name"`      // 流名称
	AppName       string        `json:"app_name"`         // appName
	AudioCodec    string        `json:"audio_codec"`      // 音频编码格式 "AAC"
	VideoCodec    string        `json:"video_codec"`      // 视频编码格式 "H264" | "H265"
	VideoWidth    int64         `json:"video_width"`      // 视频宽
	VideoHeight   int64         `json:"video_height"`     // 视频高
	Pub           PubInfo       `json:"pub,optional"`     // 接收推流的信息
	Subs          []SubInfo     `json:"subs,optional"`    // 拉流信息
	Pull          PullInfo      `json:"pull,optional"`    // 回源拉流信息
	Pushs         []interface{} `json:"pushs,optional"`   // 主动外连转推信息
	InFramePerSec []FpsInfo     `json:"in_frame_per_sec"` // 最近32秒内fps
}

type OnHlsMakeTsRequest struct {
	Event          string  `json:"event"`            // "open" 表示 ts 分片文件被创建，"close" 表示 ts 分片文件写入完毕
	StreamName     string  `json:"stream_name"`      // 流名称
	Cwd            string  `json:"cwd"`              // 当前工作路径。当配置文件中的 hls 目录设置为相对路径时，相对的是该字段的值
	TsFile         string  `json:"ts_file"`          // ts文件磁盘地址
	LiveM3u8File   string  `json:"live_m3u8_file"`   // 直播 m3u8 文件磁盘地址
	RecordM3u8File string  `json:"record_m3u8_file"` // 录制 m3u8 文件磁盘地址。只有开启录制时有效
	ID             int64   `json:"id"`               // ts 文件的 ID 编号，线性递增
	Duration       float64 `json:"duration"`         // ts 文件的时长，单位秒。只有 event 为 "close" 时有效
	ServerID       string  `json:"server_id"`        // lalserver节点id
}

type OnPubStartRequest struct {
	ServerID      string `json:"server_id"`       // 该lalserver节点的id，与配置文件中的server_id字段相同
	SessionID     string `json:"session_id"`      // 会话ID，会话全局唯一标识
	Protocol      string `json:"protocol"`        // 推流协议，取值范围： "RTMP" | "RTSP"
	BaseType      string `json:"base_type"`       // 基础类型，该处固定为"PUB"
	RemoteAddr    string `json:"remote_addr"`     // 连接对端地址
	URL           string `json:"url"`             // 完整url
	AppName       string `json:"app_name"`        // RTMP URL中的app name
	StreamName    string `json:"stream_name"`     // 流名称
	URLParam      string `json:"url_param"`       // URL参数
	HasInSession  bool   `json:"has_in_session"`  // 对应的group中，是否存在输入音视频数据的流
	HasOutSession bool   `json:"has_out_session"` // 对应的group中，是否存在输出音视频数据的流
	ReadBytesSum  int64  `json:"read_bytes_sum"`  // 会话建立至当前时间点，总共读取的数据，单位字节
	WroteBytesSum int64  `json:"wrote_bytes_sum"` // 会话建立至当前时间点，总共发送的数据，单位字节
}

type OnPubStopRequest struct {
	ServerID      string `json:"server_id"`       // 该lalserver节点的id
	SessionID     string `json:"session_id"`      // 会话ID
	Protocol      string `json:"protocol"`        // 推流协议
	BaseType      string `json:"base_type"`       // 固定 "PUB"
	RemoteAddr    string `json:"remote_addr"`     // 连接对端地址
	URL           string `json:"url"`             // 完整url
	AppName       string `json:"app_name"`        // RTMP URL中的app name
	StreamName    string `json:"stream_name"`     // 流名称
	URLParam      string `json:"url_param"`       // URL参数
	HasInSession  bool   `json:"has_in_session"`  // 对应的group中是否存在输入流
	HasOutSession bool   `json:"has_out_session"` // 对应的group中是否存在输出流
	ReadBytesSum  int64  `json:"read_bytes_sum"`  // 累计读取字节
	WroteBytesSum int64  `json:"wrote_bytes_sum"` // 累计发送字节
}

type OnRelayPullStartRequest struct {
	ServerID      string `json:"server_id"`       // 该lalserver节点的id
	SessionID     string `json:"session_id"`      // 会话ID
	Protocol      string `json:"protocol"`        // 协议，取值范围： "RTMP" | "RTSP"
	BaseType      string `json:"base_type"`       // 基础类型，该处固定为"PULL"
	RemoteAddr    string `json:"remote_addr"`     // 连接对端地址
	URL           string `json:"url"`             // 完整url
	AppName       string `json:"app_name"`        // RTMP URL中的app name
	StreamName    string `json:"stream_name"`     // 流名称
	URLParam      string `json:"url_param"`       // URL参数
	HasInSession  bool   `json:"has_in_session"`  // 对应的group中，是否存在输入音视频数据的流
	HasOutSession bool   `json:"has_out_session"` // 对应的group中，是否存在输出音视频数据的流
	ReadBytesSum  int64  `json:"read_bytes_sum"`  // 会话建立至当前时间点，总共读取的数据，单位字节
	WroteBytesSum int64  `json:"wrote_bytes_sum"` // 会话建立至当前时间点，总共发送的数据，单位字节
}

type OnRelayPullStopRequest struct {
	ServerID      string `json:"server_id"`       // 该lalserver节点的id
	SessionID     string `json:"session_id"`      // 会话ID
	Protocol      string `json:"protocol"`        // 协议，取值范围： "RTMP" | "RTSP"
	BaseType      string `json:"base_type"`       // 基础类型，该处固定为"PULL"
	RemoteAddr    string `json:"remote_addr"`     // 连接对端地址
	URL           string `json:"url"`             // 完整url
	AppName       string `json:"app_name"`        // RTMP URL中的app name
	StreamName    string `json:"stream_name"`     // 流名称
	URLParam      string `json:"url_param"`       // URL参数
	HasInSession  bool   `json:"has_in_session"`  // 对应的group中，是否存在输入音视频数据的流
	HasOutSession bool   `json:"has_out_session"` // 对应的group中，是否存在输出音视频数据的流
	ReadBytesSum  int64  `json:"read_bytes_sum"`  // 会话建立至当前时间点，总共读取的数据，单位字节
	WroteBytesSum int64  `json:"wrote_bytes_sum"` // 会话建立至当前时间点，总共发送的数据，单位字节
}

type OnRtmpConnectRequest struct {
	ServerID   string `json:"server_id"`   // 该lalserver节点的id
	SessionID  string `json:"session_id"`  // 会话ID
	RemoteAddr string `json:"remote_addr"` // 连接对端地址
	App        string `json:"app"`         // RTMP URL中的 app
	FlashVer   string `json:"flashVer"`    // Flash版本
	TcUrl      string `json:"tcUrl"`       // RTMP tcUrl
}

type OnServerStartRequest struct {
	ServerID      string `json:"server_id"`      // lalserver节点id
	BinInfo       string `json:"bin_info"`       // 编译信息，包括 GitTag、GitCommitLog、BuildTime、GoVersion、runtime 等
	LalVersion    string `json:"lal_version"`    // lal可执行文件版本信息
	APIversion    string `json:"api_version"`    // HTTP API接口版本信息
	NotifyVersion string `json:"notify_version"` // HTTP Notify版本信息
	StartTime     string `json:"start_time"`     // lal进程启动时间
}

type OnSubStartRequest struct {
	ServerID      string `json:"server_id"`       // 该lalserver节点的id
	SessionID     string `json:"session_id"`      // 会话ID
	Protocol      string `json:"protocol"`        // 拉流协议
	BaseType      string `json:"base_type"`       // 固定 "SUB"
	RemoteAddr    string `json:"remote_addr"`     // 连接对端地址
	URL           string `json:"url"`             // 完整url
	AppName       string `json:"app_name"`        // RTMP URL中的app name
	StreamName    string `json:"stream_name"`     // 流名称
	URLParam      string `json:"url_param"`       // URL参数
	HasInSession  bool   `json:"has_in_session"`  // 是否存在输入流
	HasOutSession bool   `json:"has_out_session"` // 是否存在输出流
	ReadBytesSum  int64  `json:"read_bytes_sum"`  // 累计读取字节
	WroteBytesSum int64  `json:"wrote_bytes_sum"` // 累计发送字节
}

type OnSubStopRequest struct {
	ServerID      string `json:"server_id"`       // 该lalserver节点的id
	SessionID     string `json:"session_id"`      // 会话ID
	Protocol      string `json:"protocol"`        // 拉流协议
	BaseType      string `json:"base_type"`       // 固定 "SUB"
	RemoteAddr    string `json:"remote_addr"`     // 连接对端地址
	URL           string `json:"url"`             // 完整url
	AppName       string `json:"app_name"`        // RTMP URL中的app name
	StreamName    string `json:"stream_name"`     // 流名称
	URLParam      string `json:"url_param"`       // URL参数
	HasInSession  bool   `json:"has_in_session"`  // 是否存在输入流
	HasOutSession bool   `json:"has_out_session"` // 是否存在输出流
	ReadBytesSum  int64  `json:"read_bytes_sum"`  // 累计读取字节
	WroteBytesSum int64  `json:"wrote_bytes_sum"` // 累计发送字节
}

type OnUpdateRequest struct {
	ServerID string      `json:"server_id"`       // lalserver节点id
	Groups   []GroupInfo `json:"groups,optional"` // group信息列表
}

type PubInfo struct {
	SessionID         string `json:"session_id"`          // 会话ID，会话全局唯一标识
	Protocol          string `json:"protocol"`            // 推流协议，取值范围： "RTMP" | "RTSP"
	BaseType          string `json:"base_type"`           // 基础类型，该处固定为"PUB"
	StartTime         string `json:"start_time"`          // 推流开始时间
	RemoteAddr        string `json:"remote_addr"`         // 对端地址
	ReadBytesSum      int64  `json:"read_bytes_sum"`      // 累计读取数据大小（从推流开始时计算）
	WroteBytesSum     int64  `json:"wrote_bytes_sum"`     // 累计发送数据大小
	BitrateKbits      int64  `json:"bitrate_kbits"`       // 最近5秒码率，单位kbit/s
	ReadBitrateKbits  int64  `json:"read_bitrate_kbits"`  // 最近5秒读取数据码率
	WriteBitrateKbits int64  `json:"write_bitrate_kbits"` // 最近5秒发送数据码率
}

type PullInfo struct {
	BaseType          string `json:"base_type"`           // 固定 "PULL"
	SessionID         string `json:"session_id"`          // 会话ID
	Protocol          string `json:"protocol"`            // 协议 "RTMP" | "RTSP"
	StartTime         string `json:"start_time"`          // 开始时间
	RemoteAddr        string `json:"remote_addr"`         // 对端地址
	ReadBytesSum      int64  `json:"read_bytes_sum"`      // 累计读取数据
	WroteBytesSum     int64  `json:"wrote_bytes_sum"`     // 累计发送数据
	BitrateKbits      int64  `json:"bitrate_kbits"`       // 最近5秒码率
	ReadBitrateKbits  int64  `json:"read_bitrate_kbits"`  // 最近5秒读取数据码率
	WriteBitrateKbits int64  `json:"write_bitrate_kbits"` // 最近5秒发送数据码率
}

type SubInfo struct {
	SessionID         string `json:"session_id"`          // 会话ID
	Protocol          string `json:"protocol"`            // 拉流协议，取值范围： "RTMP" | "FLV" | "TS"
	BaseType          string `json:"base_type"`           // 基础类型，该处固定为"SUB"
	StartTime         string `json:"start_time"`          // 拉流开始时间
	RemoteAddr        string `json:"remote_addr"`         // 对端地址
	ReadBytesSum      int64  `json:"read_bytes_sum"`      // 累计读取数据
	WroteBytesSum     int64  `json:"wrote_bytes_sum"`     // 累计发送数据
	BitrateKbits      int64  `json:"bitrate_kbits"`       // 最近5秒码率
	ReadBitrateKbits  int64  `json:"read_bitrate_kbits"`  // 最近5秒读取数据码率
	WriteBitrateKbits int64  `json:"write_bitrate_kbits"` // 最近5秒发送数据码率
}
