// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: iecstream.proto

package iecstream

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Req struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ping          string                 `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Req) Reset() {
	*x = Req{}
	mi := &file_iecstream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{0}
}

func (x *Req) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Res struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pong          string                 `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Res) Reset() {
	*x = Res{}
	mi := &file_iecstream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{1}
}

func (x *Res) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type PushChunkAsduReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Info          *MsgBody               `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushChunkAsduReq) Reset() {
	*x = PushChunkAsduReq{}
	mi := &file_iecstream_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushChunkAsduReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushChunkAsduReq) ProtoMessage() {}

func (x *PushChunkAsduReq) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushChunkAsduReq.ProtoReflect.Descriptor instead.
func (*PushChunkAsduReq) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{2}
}

func (x *PushChunkAsduReq) GetInfo() *MsgBody {
	if x != nil {
		return x.Info
	}
	return nil
}

type PushChunkAsduRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushChunkAsduRes) Reset() {
	*x = PushChunkAsduRes{}
	mi := &file_iecstream_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushChunkAsduRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushChunkAsduRes) ProtoMessage() {}

func (x *PushChunkAsduRes) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushChunkAsduRes.ProtoReflect.Descriptor instead.
func (*PushChunkAsduRes) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{3}
}

// 消息体结构
type MsgBody struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Host   string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port   int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Asdu   string                 `protobuf:"bytes,3,opt,name=asdu,proto3" json:"asdu,omitempty"`
	TypeId int32                  `protobuf:"varint,4,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Coa    uint32                 `protobuf:"varint,5,opt,name=coa,proto3" json:"coa,omitempty"`
	// Types that are valid to be assigned to Body:
	//
	//	*MsgBody_SinglePointInfo
	//	*MsgBody_DoublePointInfo
	//	*MsgBody_MeasuredValueScaledInfo
	//	*MsgBody_MeasuredValueNormalInfo
	//	*MsgBody_StepPositionInfo
	//	*MsgBody_BitString32Info
	//	*MsgBody_MeasuredValueFloatInfo
	//	*MsgBody_BinaryCounterReadingInfo
	//	*MsgBody_EventOfProtectionEquipmentInfo
	//	*MsgBody_PackedStartEventsInfo
	//	*MsgBody_PackedOutputCircuitInfo
	//	*MsgBody_PackedSinglePointWithScdInfo
	Body          isMsgBody_Body `protobuf_oneof:"body"`
	Time          string         `protobuf:"bytes,18,opt,name=time,proto3" json:"time,omitempty"`
	MetaData      string         `protobuf:"bytes,19,opt,name=metaData,proto3" json:"metaData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgBody) Reset() {
	*x = MsgBody{}
	mi := &file_iecstream_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBody) ProtoMessage() {}

func (x *MsgBody) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBody.ProtoReflect.Descriptor instead.
func (*MsgBody) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{4}
}

func (x *MsgBody) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *MsgBody) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *MsgBody) GetAsdu() string {
	if x != nil {
		return x.Asdu
	}
	return ""
}

func (x *MsgBody) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *MsgBody) GetCoa() uint32 {
	if x != nil {
		return x.Coa
	}
	return 0
}

func (x *MsgBody) GetBody() isMsgBody_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *MsgBody) GetSinglePointInfo() *SinglePointInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_SinglePointInfo); ok {
			return x.SinglePointInfo
		}
	}
	return nil
}

func (x *MsgBody) GetDoublePointInfo() *DoublePointInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_DoublePointInfo); ok {
			return x.DoublePointInfo
		}
	}
	return nil
}

func (x *MsgBody) GetMeasuredValueScaledInfo() *MeasuredValueScaledInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_MeasuredValueScaledInfo); ok {
			return x.MeasuredValueScaledInfo
		}
	}
	return nil
}

func (x *MsgBody) GetMeasuredValueNormalInfo() *MeasuredValueNormalInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_MeasuredValueNormalInfo); ok {
			return x.MeasuredValueNormalInfo
		}
	}
	return nil
}

func (x *MsgBody) GetStepPositionInfo() *StepPositionInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_StepPositionInfo); ok {
			return x.StepPositionInfo
		}
	}
	return nil
}

func (x *MsgBody) GetBitString32Info() *BitString32Info {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_BitString32Info); ok {
			return x.BitString32Info
		}
	}
	return nil
}

func (x *MsgBody) GetMeasuredValueFloatInfo() *MeasuredValueFloatInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_MeasuredValueFloatInfo); ok {
			return x.MeasuredValueFloatInfo
		}
	}
	return nil
}

func (x *MsgBody) GetBinaryCounterReadingInfo() *BinaryCounterReadingInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_BinaryCounterReadingInfo); ok {
			return x.BinaryCounterReadingInfo
		}
	}
	return nil
}

func (x *MsgBody) GetEventOfProtectionEquipmentInfo() *EventOfProtectionEquipmentInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_EventOfProtectionEquipmentInfo); ok {
			return x.EventOfProtectionEquipmentInfo
		}
	}
	return nil
}

func (x *MsgBody) GetPackedStartEventsInfo() *PackedStartEventsOfProtectionEquipmentInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_PackedStartEventsInfo); ok {
			return x.PackedStartEventsInfo
		}
	}
	return nil
}

func (x *MsgBody) GetPackedOutputCircuitInfo() *PackedOutputCircuitInfoInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_PackedOutputCircuitInfo); ok {
			return x.PackedOutputCircuitInfo
		}
	}
	return nil
}

func (x *MsgBody) GetPackedSinglePointWithScdInfo() *PackedSinglePointWithSCDInfo {
	if x != nil {
		if x, ok := x.Body.(*MsgBody_PackedSinglePointWithScdInfo); ok {
			return x.PackedSinglePointWithScdInfo
		}
	}
	return nil
}

func (x *MsgBody) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *MsgBody) GetMetaData() string {
	if x != nil {
		return x.MetaData
	}
	return ""
}

type isMsgBody_Body interface {
	isMsgBody_Body()
}

type MsgBody_SinglePointInfo struct {
	SinglePointInfo *SinglePointInfo `protobuf:"bytes,100,opt,name=single_point_info,json=singlePointInfo,proto3,oneof"`
}

type MsgBody_DoublePointInfo struct {
	DoublePointInfo *DoublePointInfo `protobuf:"bytes,101,opt,name=double_point_info,json=doublePointInfo,proto3,oneof"`
}

type MsgBody_MeasuredValueScaledInfo struct {
	MeasuredValueScaledInfo *MeasuredValueScaledInfo `protobuf:"bytes,102,opt,name=measured_value_scaled_info,json=measuredValueScaledInfo,proto3,oneof"`
}

type MsgBody_MeasuredValueNormalInfo struct {
	MeasuredValueNormalInfo *MeasuredValueNormalInfo `protobuf:"bytes,103,opt,name=measured_value_normal_info,json=measuredValueNormalInfo,proto3,oneof"`
}

type MsgBody_StepPositionInfo struct {
	StepPositionInfo *StepPositionInfo `protobuf:"bytes,104,opt,name=step_position_info,json=stepPositionInfo,proto3,oneof"`
}

type MsgBody_BitString32Info struct {
	BitString32Info *BitString32Info `protobuf:"bytes,105,opt,name=bit_string32_info,json=bitString32Info,proto3,oneof"`
}

type MsgBody_MeasuredValueFloatInfo struct {
	MeasuredValueFloatInfo *MeasuredValueFloatInfo `protobuf:"bytes,106,opt,name=measured_value_float_info,json=measuredValueFloatInfo,proto3,oneof"`
}

type MsgBody_BinaryCounterReadingInfo struct {
	BinaryCounterReadingInfo *BinaryCounterReadingInfo `protobuf:"bytes,107,opt,name=binary_counter_reading_info,json=binaryCounterReadingInfo,proto3,oneof"`
}

type MsgBody_EventOfProtectionEquipmentInfo struct {
	EventOfProtectionEquipmentInfo *EventOfProtectionEquipmentInfo `protobuf:"bytes,108,opt,name=event_of_protection_equipment_info,json=eventOfProtectionEquipmentInfo,proto3,oneof"`
}

type MsgBody_PackedStartEventsInfo struct {
	PackedStartEventsInfo *PackedStartEventsOfProtectionEquipmentInfo `protobuf:"bytes,109,opt,name=packed_start_events_info,json=packedStartEventsInfo,proto3,oneof"`
}

type MsgBody_PackedOutputCircuitInfo struct {
	PackedOutputCircuitInfo *PackedOutputCircuitInfoInfo `protobuf:"bytes,110,opt,name=packed_output_circuit_info,json=packedOutputCircuitInfo,proto3,oneof"`
}

type MsgBody_PackedSinglePointWithScdInfo struct {
	PackedSinglePointWithScdInfo *PackedSinglePointWithSCDInfo `protobuf:"bytes,111,opt,name=packed_single_point_with_scd_info,json=packedSinglePointWithScdInfo,proto3,oneof"`
}

func (*MsgBody_SinglePointInfo) isMsgBody_Body() {}

func (*MsgBody_DoublePointInfo) isMsgBody_Body() {}

func (*MsgBody_MeasuredValueScaledInfo) isMsgBody_Body() {}

func (*MsgBody_MeasuredValueNormalInfo) isMsgBody_Body() {}

func (*MsgBody_StepPositionInfo) isMsgBody_Body() {}

func (*MsgBody_BitString32Info) isMsgBody_Body() {}

func (*MsgBody_MeasuredValueFloatInfo) isMsgBody_Body() {}

func (*MsgBody_BinaryCounterReadingInfo) isMsgBody_Body() {}

func (*MsgBody_EventOfProtectionEquipmentInfo) isMsgBody_Body() {}

func (*MsgBody_PackedStartEventsInfo) isMsgBody_Body() {}

func (*MsgBody_PackedOutputCircuitInfo) isMsgBody_Body() {}

func (*MsgBody_PackedSinglePointWithScdInfo) isMsgBody_Body() {}

type SinglePointInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Value         bool                   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Qds           uint32                 `protobuf:"varint,3,opt,name=qds,proto3" json:"qds,omitempty"`
	QdsDesc       string                 `protobuf:"bytes,4,opt,name=qds_desc,json=qdsDesc,proto3" json:"qds_desc,omitempty"`
	Ov            bool                   `protobuf:"varint,5,opt,name=ov,proto3" json:"ov,omitempty"`
	Bl            bool                   `protobuf:"varint,6,opt,name=bl,proto3" json:"bl,omitempty"`
	Sb            bool                   `protobuf:"varint,7,opt,name=sb,proto3" json:"sb,omitempty"`
	Nt            bool                   `protobuf:"varint,8,opt,name=nt,proto3" json:"nt,omitempty"`
	Iv            bool                   `protobuf:"varint,9,opt,name=iv,proto3" json:"iv,omitempty"`
	Time          string                 `protobuf:"bytes,10,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SinglePointInfo) Reset() {
	*x = SinglePointInfo{}
	mi := &file_iecstream_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SinglePointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinglePointInfo) ProtoMessage() {}

func (x *SinglePointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinglePointInfo.ProtoReflect.Descriptor instead.
func (*SinglePointInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{5}
}

func (x *SinglePointInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *SinglePointInfo) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *SinglePointInfo) GetQds() uint32 {
	if x != nil {
		return x.Qds
	}
	return 0
}

func (x *SinglePointInfo) GetQdsDesc() string {
	if x != nil {
		return x.QdsDesc
	}
	return ""
}

func (x *SinglePointInfo) GetOv() bool {
	if x != nil {
		return x.Ov
	}
	return false
}

func (x *SinglePointInfo) GetBl() bool {
	if x != nil {
		return x.Bl
	}
	return false
}

func (x *SinglePointInfo) GetSb() bool {
	if x != nil {
		return x.Sb
	}
	return false
}

func (x *SinglePointInfo) GetNt() bool {
	if x != nil {
		return x.Nt
	}
	return false
}

func (x *SinglePointInfo) GetIv() bool {
	if x != nil {
		return x.Iv
	}
	return false
}

func (x *SinglePointInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type DoublePointInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Value         uint32                 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Qds           uint32                 `protobuf:"varint,3,opt,name=qds,proto3" json:"qds,omitempty"`
	QdsDesc       string                 `protobuf:"bytes,4,opt,name=qds_desc,json=qdsDesc,proto3" json:"qds_desc,omitempty"`
	Ov            bool                   `protobuf:"varint,5,opt,name=ov,proto3" json:"ov,omitempty"`
	Bl            bool                   `protobuf:"varint,6,opt,name=bl,proto3" json:"bl,omitempty"`
	Sb            bool                   `protobuf:"varint,7,opt,name=sb,proto3" json:"sb,omitempty"`
	Nt            bool                   `protobuf:"varint,8,opt,name=nt,proto3" json:"nt,omitempty"`
	Iv            bool                   `protobuf:"varint,9,opt,name=iv,proto3" json:"iv,omitempty"`
	Time          string                 `protobuf:"bytes,10,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoublePointInfo) Reset() {
	*x = DoublePointInfo{}
	mi := &file_iecstream_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoublePointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoublePointInfo) ProtoMessage() {}

func (x *DoublePointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoublePointInfo.ProtoReflect.Descriptor instead.
func (*DoublePointInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{6}
}

func (x *DoublePointInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *DoublePointInfo) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DoublePointInfo) GetQds() uint32 {
	if x != nil {
		return x.Qds
	}
	return 0
}

func (x *DoublePointInfo) GetQdsDesc() string {
	if x != nil {
		return x.QdsDesc
	}
	return ""
}

func (x *DoublePointInfo) GetOv() bool {
	if x != nil {
		return x.Ov
	}
	return false
}

func (x *DoublePointInfo) GetBl() bool {
	if x != nil {
		return x.Bl
	}
	return false
}

func (x *DoublePointInfo) GetSb() bool {
	if x != nil {
		return x.Sb
	}
	return false
}

func (x *DoublePointInfo) GetNt() bool {
	if x != nil {
		return x.Nt
	}
	return false
}

func (x *DoublePointInfo) GetIv() bool {
	if x != nil {
		return x.Iv
	}
	return false
}

func (x *DoublePointInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type MeasuredValueScaledInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Value         int32                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Qds           uint32                 `protobuf:"varint,3,opt,name=qds,proto3" json:"qds,omitempty"`
	QdsDesc       string                 `protobuf:"bytes,4,opt,name=qds_desc,json=qdsDesc,proto3" json:"qds_desc,omitempty"`
	Ov            bool                   `protobuf:"varint,5,opt,name=ov,proto3" json:"ov,omitempty"`
	Bl            bool                   `protobuf:"varint,6,opt,name=bl,proto3" json:"bl,omitempty"`
	Sb            bool                   `protobuf:"varint,7,opt,name=sb,proto3" json:"sb,omitempty"`
	Nt            bool                   `protobuf:"varint,8,opt,name=nt,proto3" json:"nt,omitempty"`
	Iv            bool                   `protobuf:"varint,9,opt,name=iv,proto3" json:"iv,omitempty"`
	Time          string                 `protobuf:"bytes,10,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeasuredValueScaledInfo) Reset() {
	*x = MeasuredValueScaledInfo{}
	mi := &file_iecstream_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeasuredValueScaledInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasuredValueScaledInfo) ProtoMessage() {}

func (x *MeasuredValueScaledInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasuredValueScaledInfo.ProtoReflect.Descriptor instead.
func (*MeasuredValueScaledInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{7}
}

func (x *MeasuredValueScaledInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *MeasuredValueScaledInfo) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MeasuredValueScaledInfo) GetQds() uint32 {
	if x != nil {
		return x.Qds
	}
	return 0
}

func (x *MeasuredValueScaledInfo) GetQdsDesc() string {
	if x != nil {
		return x.QdsDesc
	}
	return ""
}

func (x *MeasuredValueScaledInfo) GetOv() bool {
	if x != nil {
		return x.Ov
	}
	return false
}

func (x *MeasuredValueScaledInfo) GetBl() bool {
	if x != nil {
		return x.Bl
	}
	return false
}

func (x *MeasuredValueScaledInfo) GetSb() bool {
	if x != nil {
		return x.Sb
	}
	return false
}

func (x *MeasuredValueScaledInfo) GetNt() bool {
	if x != nil {
		return x.Nt
	}
	return false
}

func (x *MeasuredValueScaledInfo) GetIv() bool {
	if x != nil {
		return x.Iv
	}
	return false
}

func (x *MeasuredValueScaledInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type MeasuredValueNormalInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Value         int32                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Qds           uint32                 `protobuf:"varint,3,opt,name=qds,proto3" json:"qds,omitempty"`
	QdsDesc       string                 `protobuf:"bytes,4,opt,name=qds_desc,json=qdsDesc,proto3" json:"qds_desc,omitempty"`
	Ov            bool                   `protobuf:"varint,5,opt,name=ov,proto3" json:"ov,omitempty"`
	Bl            bool                   `protobuf:"varint,6,opt,name=bl,proto3" json:"bl,omitempty"`
	Sb            bool                   `protobuf:"varint,7,opt,name=sb,proto3" json:"sb,omitempty"`
	Nt            bool                   `protobuf:"varint,8,opt,name=nt,proto3" json:"nt,omitempty"`
	Iv            bool                   `protobuf:"varint,9,opt,name=iv,proto3" json:"iv,omitempty"`
	Time          string                 `protobuf:"bytes,10,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeasuredValueNormalInfo) Reset() {
	*x = MeasuredValueNormalInfo{}
	mi := &file_iecstream_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeasuredValueNormalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasuredValueNormalInfo) ProtoMessage() {}

func (x *MeasuredValueNormalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasuredValueNormalInfo.ProtoReflect.Descriptor instead.
func (*MeasuredValueNormalInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{8}
}

func (x *MeasuredValueNormalInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *MeasuredValueNormalInfo) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MeasuredValueNormalInfo) GetQds() uint32 {
	if x != nil {
		return x.Qds
	}
	return 0
}

func (x *MeasuredValueNormalInfo) GetQdsDesc() string {
	if x != nil {
		return x.QdsDesc
	}
	return ""
}

func (x *MeasuredValueNormalInfo) GetOv() bool {
	if x != nil {
		return x.Ov
	}
	return false
}

func (x *MeasuredValueNormalInfo) GetBl() bool {
	if x != nil {
		return x.Bl
	}
	return false
}

func (x *MeasuredValueNormalInfo) GetSb() bool {
	if x != nil {
		return x.Sb
	}
	return false
}

func (x *MeasuredValueNormalInfo) GetNt() bool {
	if x != nil {
		return x.Nt
	}
	return false
}

func (x *MeasuredValueNormalInfo) GetIv() bool {
	if x != nil {
		return x.Iv
	}
	return false
}

func (x *MeasuredValueNormalInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type StepPositionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Value         *StepPosition          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Qds           uint32                 `protobuf:"varint,3,opt,name=qds,proto3" json:"qds,omitempty"`
	QdsDesc       string                 `protobuf:"bytes,4,opt,name=qds_desc,json=qdsDesc,proto3" json:"qds_desc,omitempty"`
	Ov            bool                   `protobuf:"varint,5,opt,name=ov,proto3" json:"ov,omitempty"`
	Bl            bool                   `protobuf:"varint,6,opt,name=bl,proto3" json:"bl,omitempty"`
	Sb            bool                   `protobuf:"varint,7,opt,name=sb,proto3" json:"sb,omitempty"`
	Nt            bool                   `protobuf:"varint,8,opt,name=nt,proto3" json:"nt,omitempty"`
	Iv            bool                   `protobuf:"varint,9,opt,name=iv,proto3" json:"iv,omitempty"`
	Time          string                 `protobuf:"bytes,10,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepPositionInfo) Reset() {
	*x = StepPositionInfo{}
	mi := &file_iecstream_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepPositionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepPositionInfo) ProtoMessage() {}

func (x *StepPositionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepPositionInfo.ProtoReflect.Descriptor instead.
func (*StepPositionInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{9}
}

func (x *StepPositionInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *StepPositionInfo) GetValue() *StepPosition {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *StepPositionInfo) GetQds() uint32 {
	if x != nil {
		return x.Qds
	}
	return 0
}

func (x *StepPositionInfo) GetQdsDesc() string {
	if x != nil {
		return x.QdsDesc
	}
	return ""
}

func (x *StepPositionInfo) GetOv() bool {
	if x != nil {
		return x.Ov
	}
	return false
}

func (x *StepPositionInfo) GetBl() bool {
	if x != nil {
		return x.Bl
	}
	return false
}

func (x *StepPositionInfo) GetSb() bool {
	if x != nil {
		return x.Sb
	}
	return false
}

func (x *StepPositionInfo) GetNt() bool {
	if x != nil {
		return x.Nt
	}
	return false
}

func (x *StepPositionInfo) GetIv() bool {
	if x != nil {
		return x.Iv
	}
	return false
}

func (x *StepPositionInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type StepPosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Val           int32                  `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	HasTransient  bool                   `protobuf:"varint,2,opt,name=has_transient,json=hasTransient,proto3" json:"has_transient,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StepPosition) Reset() {
	*x = StepPosition{}
	mi := &file_iecstream_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StepPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepPosition) ProtoMessage() {}

func (x *StepPosition) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepPosition.ProtoReflect.Descriptor instead.
func (*StepPosition) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{10}
}

func (x *StepPosition) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *StepPosition) GetHasTransient() bool {
	if x != nil {
		return x.HasTransient
	}
	return false
}

type BitString32Info struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Value         uint32                 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Qds           uint32                 `protobuf:"varint,3,opt,name=qds,proto3" json:"qds,omitempty"`
	QdsDesc       string                 `protobuf:"bytes,4,opt,name=qds_desc,json=qdsDesc,proto3" json:"qds_desc,omitempty"`
	Ov            bool                   `protobuf:"varint,5,opt,name=ov,proto3" json:"ov,omitempty"`
	Bl            bool                   `protobuf:"varint,6,opt,name=bl,proto3" json:"bl,omitempty"`
	Sb            bool                   `protobuf:"varint,7,opt,name=sb,proto3" json:"sb,omitempty"`
	Nt            bool                   `protobuf:"varint,8,opt,name=nt,proto3" json:"nt,omitempty"`
	Iv            bool                   `protobuf:"varint,9,opt,name=iv,proto3" json:"iv,omitempty"`
	Time          string                 `protobuf:"bytes,10,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BitString32Info) Reset() {
	*x = BitString32Info{}
	mi := &file_iecstream_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BitString32Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BitString32Info) ProtoMessage() {}

func (x *BitString32Info) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BitString32Info.ProtoReflect.Descriptor instead.
func (*BitString32Info) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{11}
}

func (x *BitString32Info) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *BitString32Info) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *BitString32Info) GetQds() uint32 {
	if x != nil {
		return x.Qds
	}
	return 0
}

func (x *BitString32Info) GetQdsDesc() string {
	if x != nil {
		return x.QdsDesc
	}
	return ""
}

func (x *BitString32Info) GetOv() bool {
	if x != nil {
		return x.Ov
	}
	return false
}

func (x *BitString32Info) GetBl() bool {
	if x != nil {
		return x.Bl
	}
	return false
}

func (x *BitString32Info) GetSb() bool {
	if x != nil {
		return x.Sb
	}
	return false
}

func (x *BitString32Info) GetNt() bool {
	if x != nil {
		return x.Nt
	}
	return false
}

func (x *BitString32Info) GetIv() bool {
	if x != nil {
		return x.Iv
	}
	return false
}

func (x *BitString32Info) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type MeasuredValueFloatInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Value         float32                `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	Qds           uint32                 `protobuf:"varint,3,opt,name=qds,proto3" json:"qds,omitempty"`
	QdsDesc       string                 `protobuf:"bytes,4,opt,name=qds_desc,json=qdsDesc,proto3" json:"qds_desc,omitempty"`
	Ov            bool                   `protobuf:"varint,5,opt,name=ov,proto3" json:"ov,omitempty"`
	Bl            bool                   `protobuf:"varint,6,opt,name=bl,proto3" json:"bl,omitempty"`
	Sb            bool                   `protobuf:"varint,7,opt,name=sb,proto3" json:"sb,omitempty"`
	Nt            bool                   `protobuf:"varint,8,opt,name=nt,proto3" json:"nt,omitempty"`
	Iv            bool                   `protobuf:"varint,9,opt,name=iv,proto3" json:"iv,omitempty"`
	Time          string                 `protobuf:"bytes,10,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeasuredValueFloatInfo) Reset() {
	*x = MeasuredValueFloatInfo{}
	mi := &file_iecstream_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeasuredValueFloatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasuredValueFloatInfo) ProtoMessage() {}

func (x *MeasuredValueFloatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasuredValueFloatInfo.ProtoReflect.Descriptor instead.
func (*MeasuredValueFloatInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{12}
}

func (x *MeasuredValueFloatInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *MeasuredValueFloatInfo) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MeasuredValueFloatInfo) GetQds() uint32 {
	if x != nil {
		return x.Qds
	}
	return 0
}

func (x *MeasuredValueFloatInfo) GetQdsDesc() string {
	if x != nil {
		return x.QdsDesc
	}
	return ""
}

func (x *MeasuredValueFloatInfo) GetOv() bool {
	if x != nil {
		return x.Ov
	}
	return false
}

func (x *MeasuredValueFloatInfo) GetBl() bool {
	if x != nil {
		return x.Bl
	}
	return false
}

func (x *MeasuredValueFloatInfo) GetSb() bool {
	if x != nil {
		return x.Sb
	}
	return false
}

func (x *MeasuredValueFloatInfo) GetNt() bool {
	if x != nil {
		return x.Nt
	}
	return false
}

func (x *MeasuredValueFloatInfo) GetIv() bool {
	if x != nil {
		return x.Iv
	}
	return false
}

func (x *MeasuredValueFloatInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type BinaryCounterReadingInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Value         *BinaryCounterReading  `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Time          string                 `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BinaryCounterReadingInfo) Reset() {
	*x = BinaryCounterReadingInfo{}
	mi := &file_iecstream_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BinaryCounterReadingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryCounterReadingInfo) ProtoMessage() {}

func (x *BinaryCounterReadingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryCounterReadingInfo.ProtoReflect.Descriptor instead.
func (*BinaryCounterReadingInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{13}
}

func (x *BinaryCounterReadingInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *BinaryCounterReadingInfo) GetValue() *BinaryCounterReading {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *BinaryCounterReadingInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type BinaryCounterReading struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CounterReading int32                  `protobuf:"varint,1,opt,name=counter_reading,json=counterReading,proto3" json:"counter_reading,omitempty"`
	SeqNumber      uint32                 `protobuf:"varint,2,opt,name=seq_number,json=seqNumber,proto3" json:"seq_number,omitempty"`
	HasCarry       bool                   `protobuf:"varint,3,opt,name=has_carry,json=hasCarry,proto3" json:"has_carry,omitempty"`
	IsAdjusted     bool                   `protobuf:"varint,4,opt,name=is_adjusted,json=isAdjusted,proto3" json:"is_adjusted,omitempty"`
	IsInvalid      bool                   `protobuf:"varint,5,opt,name=is_invalid,json=isInvalid,proto3" json:"is_invalid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BinaryCounterReading) Reset() {
	*x = BinaryCounterReading{}
	mi := &file_iecstream_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BinaryCounterReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryCounterReading) ProtoMessage() {}

func (x *BinaryCounterReading) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryCounterReading.ProtoReflect.Descriptor instead.
func (*BinaryCounterReading) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{14}
}

func (x *BinaryCounterReading) GetCounterReading() int32 {
	if x != nil {
		return x.CounterReading
	}
	return 0
}

func (x *BinaryCounterReading) GetSeqNumber() uint32 {
	if x != nil {
		return x.SeqNumber
	}
	return 0
}

func (x *BinaryCounterReading) GetHasCarry() bool {
	if x != nil {
		return x.HasCarry
	}
	return false
}

func (x *BinaryCounterReading) GetIsAdjusted() bool {
	if x != nil {
		return x.IsAdjusted
	}
	return false
}

func (x *BinaryCounterReading) GetIsInvalid() bool {
	if x != nil {
		return x.IsInvalid
	}
	return false
}

type EventOfProtectionEquipmentInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Event         uint32                 `protobuf:"varint,2,opt,name=event,proto3" json:"event,omitempty"`
	Qdp           uint32                 `protobuf:"varint,3,opt,name=qdp,proto3" json:"qdp,omitempty"`
	Msec          uint32                 `protobuf:"varint,4,opt,name=msec,proto3" json:"msec,omitempty"`
	Time          string                 `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventOfProtectionEquipmentInfo) Reset() {
	*x = EventOfProtectionEquipmentInfo{}
	mi := &file_iecstream_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOfProtectionEquipmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOfProtectionEquipmentInfo) ProtoMessage() {}

func (x *EventOfProtectionEquipmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOfProtectionEquipmentInfo.ProtoReflect.Descriptor instead.
func (*EventOfProtectionEquipmentInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{15}
}

func (x *EventOfProtectionEquipmentInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *EventOfProtectionEquipmentInfo) GetEvent() uint32 {
	if x != nil {
		return x.Event
	}
	return 0
}

func (x *EventOfProtectionEquipmentInfo) GetQdp() uint32 {
	if x != nil {
		return x.Qdp
	}
	return 0
}

func (x *EventOfProtectionEquipmentInfo) GetMsec() uint32 {
	if x != nil {
		return x.Msec
	}
	return 0
}

func (x *EventOfProtectionEquipmentInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type PackedStartEventsOfProtectionEquipmentInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Event         uint32                 `protobuf:"varint,2,opt,name=event,proto3" json:"event,omitempty"`
	Qdp           uint32                 `protobuf:"varint,3,opt,name=qdp,proto3" json:"qdp,omitempty"`
	Msec          uint32                 `protobuf:"varint,4,opt,name=msec,proto3" json:"msec,omitempty"`
	Time          string                 `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackedStartEventsOfProtectionEquipmentInfo) Reset() {
	*x = PackedStartEventsOfProtectionEquipmentInfo{}
	mi := &file_iecstream_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackedStartEventsOfProtectionEquipmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackedStartEventsOfProtectionEquipmentInfo) ProtoMessage() {}

func (x *PackedStartEventsOfProtectionEquipmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackedStartEventsOfProtectionEquipmentInfo.ProtoReflect.Descriptor instead.
func (*PackedStartEventsOfProtectionEquipmentInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{16}
}

func (x *PackedStartEventsOfProtectionEquipmentInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *PackedStartEventsOfProtectionEquipmentInfo) GetEvent() uint32 {
	if x != nil {
		return x.Event
	}
	return 0
}

func (x *PackedStartEventsOfProtectionEquipmentInfo) GetQdp() uint32 {
	if x != nil {
		return x.Qdp
	}
	return 0
}

func (x *PackedStartEventsOfProtectionEquipmentInfo) GetMsec() uint32 {
	if x != nil {
		return x.Msec
	}
	return 0
}

func (x *PackedStartEventsOfProtectionEquipmentInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type PackedOutputCircuitInfoInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Oci           uint32                 `protobuf:"varint,2,opt,name=oci,proto3" json:"oci,omitempty"`
	Qdp           uint32                 `protobuf:"varint,3,opt,name=qdp,proto3" json:"qdp,omitempty"`
	Msec          uint32                 `protobuf:"varint,4,opt,name=msec,proto3" json:"msec,omitempty"`
	Time          string                 `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackedOutputCircuitInfoInfo) Reset() {
	*x = PackedOutputCircuitInfoInfo{}
	mi := &file_iecstream_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackedOutputCircuitInfoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackedOutputCircuitInfoInfo) ProtoMessage() {}

func (x *PackedOutputCircuitInfoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackedOutputCircuitInfoInfo.ProtoReflect.Descriptor instead.
func (*PackedOutputCircuitInfoInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{17}
}

func (x *PackedOutputCircuitInfoInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *PackedOutputCircuitInfoInfo) GetOci() uint32 {
	if x != nil {
		return x.Oci
	}
	return 0
}

func (x *PackedOutputCircuitInfoInfo) GetQdp() uint32 {
	if x != nil {
		return x.Qdp
	}
	return 0
}

func (x *PackedOutputCircuitInfoInfo) GetMsec() uint32 {
	if x != nil {
		return x.Msec
	}
	return 0
}

func (x *PackedOutputCircuitInfoInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type PackedSinglePointWithSCDInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ioa           uint32                 `protobuf:"varint,1,opt,name=ioa,proto3" json:"ioa,omitempty"`
	Scd           uint32                 `protobuf:"varint,2,opt,name=scd,proto3" json:"scd,omitempty"`
	Qds           uint32                 `protobuf:"varint,3,opt,name=qds,proto3" json:"qds,omitempty"`
	QdsDesc       string                 `protobuf:"bytes,4,opt,name=qds_desc,json=qdsDesc,proto3" json:"qds_desc,omitempty"`
	Ov            bool                   `protobuf:"varint,5,opt,name=ov,proto3" json:"ov,omitempty"`
	Bl            bool                   `protobuf:"varint,6,opt,name=bl,proto3" json:"bl,omitempty"`
	Sb            bool                   `protobuf:"varint,7,opt,name=sb,proto3" json:"sb,omitempty"`
	Nt            bool                   `protobuf:"varint,8,opt,name=nt,proto3" json:"nt,omitempty"`
	Iv            bool                   `protobuf:"varint,9,opt,name=iv,proto3" json:"iv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackedSinglePointWithSCDInfo) Reset() {
	*x = PackedSinglePointWithSCDInfo{}
	mi := &file_iecstream_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackedSinglePointWithSCDInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackedSinglePointWithSCDInfo) ProtoMessage() {}

func (x *PackedSinglePointWithSCDInfo) ProtoReflect() protoreflect.Message {
	mi := &file_iecstream_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackedSinglePointWithSCDInfo.ProtoReflect.Descriptor instead.
func (*PackedSinglePointWithSCDInfo) Descriptor() ([]byte, []int) {
	return file_iecstream_proto_rawDescGZIP(), []int{18}
}

func (x *PackedSinglePointWithSCDInfo) GetIoa() uint32 {
	if x != nil {
		return x.Ioa
	}
	return 0
}

func (x *PackedSinglePointWithSCDInfo) GetScd() uint32 {
	if x != nil {
		return x.Scd
	}
	return 0
}

func (x *PackedSinglePointWithSCDInfo) GetQds() uint32 {
	if x != nil {
		return x.Qds
	}
	return 0
}

func (x *PackedSinglePointWithSCDInfo) GetQdsDesc() string {
	if x != nil {
		return x.QdsDesc
	}
	return ""
}

func (x *PackedSinglePointWithSCDInfo) GetOv() bool {
	if x != nil {
		return x.Ov
	}
	return false
}

func (x *PackedSinglePointWithSCDInfo) GetBl() bool {
	if x != nil {
		return x.Bl
	}
	return false
}

func (x *PackedSinglePointWithSCDInfo) GetSb() bool {
	if x != nil {
		return x.Sb
	}
	return false
}

func (x *PackedSinglePointWithSCDInfo) GetNt() bool {
	if x != nil {
		return x.Nt
	}
	return false
}

func (x *PackedSinglePointWithSCDInfo) GetIv() bool {
	if x != nil {
		return x.Iv
	}
	return false
}

var File_iecstream_proto protoreflect.FileDescriptor

const file_iecstream_proto_rawDesc = "" +
	"\n" +
	"\x0fiecstream.proto\x12\x02pb\"\x19\n" +
	"\x03Req\x12\x12\n" +
	"\x04ping\x18\x01 \x01(\tR\x04ping\"\x19\n" +
	"\x03Res\x12\x12\n" +
	"\x04pong\x18\x01 \x01(\tR\x04pong\"3\n" +
	"\x10PushChunkAsduReq\x12\x1f\n" +
	"\x04info\x18\x01 \x01(\v2\v.pb.MsgBodyR\x04info\"\x12\n" +
	"\x10PushChunkAsduRes\"\xd1\t\n" +
	"\aMsgBody\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x12\n" +
	"\x04asdu\x18\x03 \x01(\tR\x04asdu\x12\x17\n" +
	"\atype_id\x18\x04 \x01(\x05R\x06typeId\x12\x10\n" +
	"\x03coa\x18\x05 \x01(\rR\x03coa\x12A\n" +
	"\x11single_point_info\x18d \x01(\v2\x13.pb.SinglePointInfoH\x00R\x0fsinglePointInfo\x12A\n" +
	"\x11double_point_info\x18e \x01(\v2\x13.pb.DoublePointInfoH\x00R\x0fdoublePointInfo\x12Z\n" +
	"\x1ameasured_value_scaled_info\x18f \x01(\v2\x1b.pb.MeasuredValueScaledInfoH\x00R\x17measuredValueScaledInfo\x12Z\n" +
	"\x1ameasured_value_normal_info\x18g \x01(\v2\x1b.pb.MeasuredValueNormalInfoH\x00R\x17measuredValueNormalInfo\x12D\n" +
	"\x12step_position_info\x18h \x01(\v2\x14.pb.StepPositionInfoH\x00R\x10stepPositionInfo\x12A\n" +
	"\x11bit_string32_info\x18i \x01(\v2\x13.pb.BitString32InfoH\x00R\x0fbitString32Info\x12W\n" +
	"\x19measured_value_float_info\x18j \x01(\v2\x1a.pb.MeasuredValueFloatInfoH\x00R\x16measuredValueFloatInfo\x12]\n" +
	"\x1bbinary_counter_reading_info\x18k \x01(\v2\x1c.pb.BinaryCounterReadingInfoH\x00R\x18binaryCounterReadingInfo\x12p\n" +
	"\"event_of_protection_equipment_info\x18l \x01(\v2\".pb.EventOfProtectionEquipmentInfoH\x00R\x1eeventOfProtectionEquipmentInfo\x12i\n" +
	"\x18packed_start_events_info\x18m \x01(\v2..pb.PackedStartEventsOfProtectionEquipmentInfoH\x00R\x15packedStartEventsInfo\x12^\n" +
	"\x1apacked_output_circuit_info\x18n \x01(\v2\x1f.pb.PackedOutputCircuitInfoInfoH\x00R\x17packedOutputCircuitInfo\x12k\n" +
	"!packed_single_point_with_scd_info\x18o \x01(\v2 .pb.PackedSinglePointWithSCDInfoH\x00R\x1cpackedSinglePointWithScdInfo\x12\x12\n" +
	"\x04time\x18\x12 \x01(\tR\x04time\x12\x1a\n" +
	"\bmetaData\x18\x13 \x01(\tR\bmetaDataB\x06\n" +
	"\x04body\"\xca\x01\n" +
	"\x0fSinglePointInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value\x12\x10\n" +
	"\x03qds\x18\x03 \x01(\rR\x03qds\x12\x19\n" +
	"\bqds_desc\x18\x04 \x01(\tR\aqdsDesc\x12\x0e\n" +
	"\x02ov\x18\x05 \x01(\bR\x02ov\x12\x0e\n" +
	"\x02bl\x18\x06 \x01(\bR\x02bl\x12\x0e\n" +
	"\x02sb\x18\a \x01(\bR\x02sb\x12\x0e\n" +
	"\x02nt\x18\b \x01(\bR\x02nt\x12\x0e\n" +
	"\x02iv\x18\t \x01(\bR\x02iv\x12\x12\n" +
	"\x04time\x18\n" +
	" \x01(\tR\x04time\"\xca\x01\n" +
	"\x0fDoublePointInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value\x12\x10\n" +
	"\x03qds\x18\x03 \x01(\rR\x03qds\x12\x19\n" +
	"\bqds_desc\x18\x04 \x01(\tR\aqdsDesc\x12\x0e\n" +
	"\x02ov\x18\x05 \x01(\bR\x02ov\x12\x0e\n" +
	"\x02bl\x18\x06 \x01(\bR\x02bl\x12\x0e\n" +
	"\x02sb\x18\a \x01(\bR\x02sb\x12\x0e\n" +
	"\x02nt\x18\b \x01(\bR\x02nt\x12\x0e\n" +
	"\x02iv\x18\t \x01(\bR\x02iv\x12\x12\n" +
	"\x04time\x18\n" +
	" \x01(\tR\x04time\"\xd2\x01\n" +
	"\x17MeasuredValueScaledInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\x12\x10\n" +
	"\x03qds\x18\x03 \x01(\rR\x03qds\x12\x19\n" +
	"\bqds_desc\x18\x04 \x01(\tR\aqdsDesc\x12\x0e\n" +
	"\x02ov\x18\x05 \x01(\bR\x02ov\x12\x0e\n" +
	"\x02bl\x18\x06 \x01(\bR\x02bl\x12\x0e\n" +
	"\x02sb\x18\a \x01(\bR\x02sb\x12\x0e\n" +
	"\x02nt\x18\b \x01(\bR\x02nt\x12\x0e\n" +
	"\x02iv\x18\t \x01(\bR\x02iv\x12\x12\n" +
	"\x04time\x18\n" +
	" \x01(\tR\x04time\"\xd2\x01\n" +
	"\x17MeasuredValueNormalInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\x12\x10\n" +
	"\x03qds\x18\x03 \x01(\rR\x03qds\x12\x19\n" +
	"\bqds_desc\x18\x04 \x01(\tR\aqdsDesc\x12\x0e\n" +
	"\x02ov\x18\x05 \x01(\bR\x02ov\x12\x0e\n" +
	"\x02bl\x18\x06 \x01(\bR\x02bl\x12\x0e\n" +
	"\x02sb\x18\a \x01(\bR\x02sb\x12\x0e\n" +
	"\x02nt\x18\b \x01(\bR\x02nt\x12\x0e\n" +
	"\x02iv\x18\t \x01(\bR\x02iv\x12\x12\n" +
	"\x04time\x18\n" +
	" \x01(\tR\x04time\"\xdd\x01\n" +
	"\x10StepPositionInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.pb.StepPositionR\x05value\x12\x10\n" +
	"\x03qds\x18\x03 \x01(\rR\x03qds\x12\x19\n" +
	"\bqds_desc\x18\x04 \x01(\tR\aqdsDesc\x12\x0e\n" +
	"\x02ov\x18\x05 \x01(\bR\x02ov\x12\x0e\n" +
	"\x02bl\x18\x06 \x01(\bR\x02bl\x12\x0e\n" +
	"\x02sb\x18\a \x01(\bR\x02sb\x12\x0e\n" +
	"\x02nt\x18\b \x01(\bR\x02nt\x12\x0e\n" +
	"\x02iv\x18\t \x01(\bR\x02iv\x12\x12\n" +
	"\x04time\x18\n" +
	" \x01(\tR\x04time\"E\n" +
	"\fStepPosition\x12\x10\n" +
	"\x03val\x18\x01 \x01(\x05R\x03val\x12#\n" +
	"\rhas_transient\x18\x02 \x01(\bR\fhasTransient\"\xca\x01\n" +
	"\x0fBitString32Info\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value\x12\x10\n" +
	"\x03qds\x18\x03 \x01(\rR\x03qds\x12\x19\n" +
	"\bqds_desc\x18\x04 \x01(\tR\aqdsDesc\x12\x0e\n" +
	"\x02ov\x18\x05 \x01(\bR\x02ov\x12\x0e\n" +
	"\x02bl\x18\x06 \x01(\bR\x02bl\x12\x0e\n" +
	"\x02sb\x18\a \x01(\bR\x02sb\x12\x0e\n" +
	"\x02nt\x18\b \x01(\bR\x02nt\x12\x0e\n" +
	"\x02iv\x18\t \x01(\bR\x02iv\x12\x12\n" +
	"\x04time\x18\n" +
	" \x01(\tR\x04time\"\xd1\x01\n" +
	"\x16MeasuredValueFloatInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value\x12\x10\n" +
	"\x03qds\x18\x03 \x01(\rR\x03qds\x12\x19\n" +
	"\bqds_desc\x18\x04 \x01(\tR\aqdsDesc\x12\x0e\n" +
	"\x02ov\x18\x05 \x01(\bR\x02ov\x12\x0e\n" +
	"\x02bl\x18\x06 \x01(\bR\x02bl\x12\x0e\n" +
	"\x02sb\x18\a \x01(\bR\x02sb\x12\x0e\n" +
	"\x02nt\x18\b \x01(\bR\x02nt\x12\x0e\n" +
	"\x02iv\x18\t \x01(\bR\x02iv\x12\x12\n" +
	"\x04time\x18\n" +
	" \x01(\tR\x04time\"p\n" +
	"\x18BinaryCounterReadingInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.pb.BinaryCounterReadingR\x05value\x12\x12\n" +
	"\x04time\x18\x03 \x01(\tR\x04time\"\xbb\x01\n" +
	"\x14BinaryCounterReading\x12'\n" +
	"\x0fcounter_reading\x18\x01 \x01(\x05R\x0ecounterReading\x12\x1d\n" +
	"\n" +
	"seq_number\x18\x02 \x01(\rR\tseqNumber\x12\x1b\n" +
	"\thas_carry\x18\x03 \x01(\bR\bhasCarry\x12\x1f\n" +
	"\vis_adjusted\x18\x04 \x01(\bR\n" +
	"isAdjusted\x12\x1d\n" +
	"\n" +
	"is_invalid\x18\x05 \x01(\bR\tisInvalid\"\x82\x01\n" +
	"\x1eEventOfProtectionEquipmentInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12\x14\n" +
	"\x05event\x18\x02 \x01(\rR\x05event\x12\x10\n" +
	"\x03qdp\x18\x03 \x01(\rR\x03qdp\x12\x12\n" +
	"\x04msec\x18\x04 \x01(\rR\x04msec\x12\x12\n" +
	"\x04time\x18\x05 \x01(\tR\x04time\"\x8e\x01\n" +
	"*PackedStartEventsOfProtectionEquipmentInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12\x14\n" +
	"\x05event\x18\x02 \x01(\rR\x05event\x12\x10\n" +
	"\x03qdp\x18\x03 \x01(\rR\x03qdp\x12\x12\n" +
	"\x04msec\x18\x04 \x01(\rR\x04msec\x12\x12\n" +
	"\x04time\x18\x05 \x01(\tR\x04time\"{\n" +
	"\x1bPackedOutputCircuitInfoInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12\x10\n" +
	"\x03oci\x18\x02 \x01(\rR\x03oci\x12\x10\n" +
	"\x03qdp\x18\x03 \x01(\rR\x03qdp\x12\x12\n" +
	"\x04msec\x18\x04 \x01(\rR\x04msec\x12\x12\n" +
	"\x04time\x18\x05 \x01(\tR\x04time\"\xbf\x01\n" +
	"\x1cPackedSinglePointWithSCDInfo\x12\x10\n" +
	"\x03ioa\x18\x01 \x01(\rR\x03ioa\x12\x10\n" +
	"\x03scd\x18\x02 \x01(\rR\x03scd\x12\x10\n" +
	"\x03qds\x18\x03 \x01(\rR\x03qds\x12\x19\n" +
	"\bqds_desc\x18\x04 \x01(\tR\aqdsDesc\x12\x0e\n" +
	"\x02ov\x18\x05 \x01(\bR\x02ov\x12\x0e\n" +
	"\x02bl\x18\x06 \x01(\bR\x02bl\x12\x0e\n" +
	"\x02sb\x18\a \x01(\bR\x02sb\x12\x0e\n" +
	"\x02nt\x18\b \x01(\bR\x02nt\x12\x0e\n" +
	"\x02iv\x18\t \x01(\bR\x02iv2i\n" +
	"\fIecStreamRpc\x12\x1a\n" +
	"\x04ping\x12\a.pb.Req\x1a\a.pb.Res\"\x00\x12=\n" +
	"\rpushChunkAsdu\x12\x14.pb.PushChunkAsduReq\x1a\x14.pb.PushChunkAsduRes\"\x00B;\n" +
	"\x1acom.github.iec.stream.grpcB\x0eIecStreamProtoP\x01Z\v./iecstreamb\x06proto3"

var (
	file_iecstream_proto_rawDescOnce sync.Once
	file_iecstream_proto_rawDescData []byte
)

func file_iecstream_proto_rawDescGZIP() []byte {
	file_iecstream_proto_rawDescOnce.Do(func() {
		file_iecstream_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_iecstream_proto_rawDesc), len(file_iecstream_proto_rawDesc)))
	})
	return file_iecstream_proto_rawDescData
}

var file_iecstream_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_iecstream_proto_goTypes = []any{
	(*Req)(nil),                                        // 0: pb.Req
	(*Res)(nil),                                        // 1: pb.Res
	(*PushChunkAsduReq)(nil),                           // 2: pb.PushChunkAsduReq
	(*PushChunkAsduRes)(nil),                           // 3: pb.PushChunkAsduRes
	(*MsgBody)(nil),                                    // 4: pb.MsgBody
	(*SinglePointInfo)(nil),                            // 5: pb.SinglePointInfo
	(*DoublePointInfo)(nil),                            // 6: pb.DoublePointInfo
	(*MeasuredValueScaledInfo)(nil),                    // 7: pb.MeasuredValueScaledInfo
	(*MeasuredValueNormalInfo)(nil),                    // 8: pb.MeasuredValueNormalInfo
	(*StepPositionInfo)(nil),                           // 9: pb.StepPositionInfo
	(*StepPosition)(nil),                               // 10: pb.StepPosition
	(*BitString32Info)(nil),                            // 11: pb.BitString32Info
	(*MeasuredValueFloatInfo)(nil),                     // 12: pb.MeasuredValueFloatInfo
	(*BinaryCounterReadingInfo)(nil),                   // 13: pb.BinaryCounterReadingInfo
	(*BinaryCounterReading)(nil),                       // 14: pb.BinaryCounterReading
	(*EventOfProtectionEquipmentInfo)(nil),             // 15: pb.EventOfProtectionEquipmentInfo
	(*PackedStartEventsOfProtectionEquipmentInfo)(nil), // 16: pb.PackedStartEventsOfProtectionEquipmentInfo
	(*PackedOutputCircuitInfoInfo)(nil),                // 17: pb.PackedOutputCircuitInfoInfo
	(*PackedSinglePointWithSCDInfo)(nil),               // 18: pb.PackedSinglePointWithSCDInfo
}
var file_iecstream_proto_depIdxs = []int32{
	4,  // 0: pb.PushChunkAsduReq.info:type_name -> pb.MsgBody
	5,  // 1: pb.MsgBody.single_point_info:type_name -> pb.SinglePointInfo
	6,  // 2: pb.MsgBody.double_point_info:type_name -> pb.DoublePointInfo
	7,  // 3: pb.MsgBody.measured_value_scaled_info:type_name -> pb.MeasuredValueScaledInfo
	8,  // 4: pb.MsgBody.measured_value_normal_info:type_name -> pb.MeasuredValueNormalInfo
	9,  // 5: pb.MsgBody.step_position_info:type_name -> pb.StepPositionInfo
	11, // 6: pb.MsgBody.bit_string32_info:type_name -> pb.BitString32Info
	12, // 7: pb.MsgBody.measured_value_float_info:type_name -> pb.MeasuredValueFloatInfo
	13, // 8: pb.MsgBody.binary_counter_reading_info:type_name -> pb.BinaryCounterReadingInfo
	15, // 9: pb.MsgBody.event_of_protection_equipment_info:type_name -> pb.EventOfProtectionEquipmentInfo
	16, // 10: pb.MsgBody.packed_start_events_info:type_name -> pb.PackedStartEventsOfProtectionEquipmentInfo
	17, // 11: pb.MsgBody.packed_output_circuit_info:type_name -> pb.PackedOutputCircuitInfoInfo
	18, // 12: pb.MsgBody.packed_single_point_with_scd_info:type_name -> pb.PackedSinglePointWithSCDInfo
	10, // 13: pb.StepPositionInfo.value:type_name -> pb.StepPosition
	14, // 14: pb.BinaryCounterReadingInfo.value:type_name -> pb.BinaryCounterReading
	0,  // 15: pb.IecStreamRpc.ping:input_type -> pb.Req
	2,  // 16: pb.IecStreamRpc.pushChunkAsdu:input_type -> pb.PushChunkAsduReq
	1,  // 17: pb.IecStreamRpc.ping:output_type -> pb.Res
	3,  // 18: pb.IecStreamRpc.pushChunkAsdu:output_type -> pb.PushChunkAsduRes
	17, // [17:19] is the sub-list for method output_type
	15, // [15:17] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_iecstream_proto_init() }
func file_iecstream_proto_init() {
	if File_iecstream_proto != nil {
		return
	}
	file_iecstream_proto_msgTypes[4].OneofWrappers = []any{
		(*MsgBody_SinglePointInfo)(nil),
		(*MsgBody_DoublePointInfo)(nil),
		(*MsgBody_MeasuredValueScaledInfo)(nil),
		(*MsgBody_MeasuredValueNormalInfo)(nil),
		(*MsgBody_StepPositionInfo)(nil),
		(*MsgBody_BitString32Info)(nil),
		(*MsgBody_MeasuredValueFloatInfo)(nil),
		(*MsgBody_BinaryCounterReadingInfo)(nil),
		(*MsgBody_EventOfProtectionEquipmentInfo)(nil),
		(*MsgBody_PackedStartEventsInfo)(nil),
		(*MsgBody_PackedOutputCircuitInfo)(nil),
		(*MsgBody_PackedSinglePointWithScdInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_iecstream_proto_rawDesc), len(file_iecstream_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iecstream_proto_goTypes,
		DependencyIndexes: file_iecstream_proto_depIdxs,
		MessageInfos:      file_iecstream_proto_msgTypes,
	}.Build()
	File_iecstream_proto = out.File
	file_iecstream_proto_goTypes = nil
	file_iecstream_proto_depIdxs = nil
}
