syntax = "proto3";

package pb;

option go_package = "./iecstream";
option java_multiple_files = true;
option java_package = "com.github.iec.stream.grpc";
option java_outer_classname = "IecStreamProto";

message Req {
  string ping = 1;
}

message Res {
  string pong = 1;
}

message PushChunkAsduReq {
  repeated MsgBody msgBody = 1;
}

message PushChunkAsduRes {
}

// 消息体结构
message MsgBody {
  string host = 1 [json_name = "host"];
  int32 port = 2 [json_name = "port"];
  string asdu = 3 [json_name = "asdu"];
  int32 typeId = 4 [json_name = "typeId"];
  int32 dataType = 5 [json_name = "dataType"];
  uint32 coa = 6 [json_name = "coa"];
  string bodyRaw = 7 [json_name = "bodyRaw"];
  string time = 8 [json_name = "time"];
  string metaDataRaw = 9 [json_name = "metaDataRaw"];
}

message SinglePointInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  bool value = 2 [json_name = "value"];
  uint32 qds = 3 [json_name = "qds"];
  string qdsDesc = 4 [json_name = "qdsDesc"];
  bool ov = 5 [json_name = "ov"];
  bool bl = 6 [json_name = "bl"];
  bool sb = 7 [json_name = "sb"];
  bool nt = 8 [json_name = "nt"];
  bool iv = 9 [json_name = "iv"];
  string time = 10 [json_name = "time"];
}

message DoublePointInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  uint32 value = 2 [json_name = "value"];
  uint32 qds = 3 [json_name = "qds"];
  string qdsDesc = 4 [json_name = "qdsDesc"];
  bool ov = 5 [json_name = "ov"];
  bool bl = 6 [json_name = "bl"];
  bool sb = 7 [json_name = "sb"];
  bool nt = 8 [json_name = "nt"];
  bool iv = 9 [json_name = "iv"];
  string time = 10 [json_name = "time"];
}

message MeasuredValueScaledInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  uint32 value = 2 [json_name = "value"];
  uint32 qds = 3 [json_name = "qds"];
  string qdsDesc = 4 [json_name = "qdsDesc"];
  bool ov = 5 [json_name = "ov"];
  bool bl = 6 [json_name = "bl"];
  bool sb = 7 [json_name = "sb"];
  bool nt = 8 [json_name = "nt"];
  bool iv = 9 [json_name = "iv"];
  string time = 10 [json_name = "time"];
}

message MeasuredValueNormalInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  uint32 value = 2 [json_name = "value"];
  uint32 qds = 3 [json_name = "qds"];
  string qdsDesc = 4 [json_name = "qdsDesc"];
  bool ov = 5 [json_name = "ov"];
  bool bl = 6 [json_name = "bl"];
  bool sb = 7 [json_name = "sb"];
  bool nt = 8 [json_name = "nt"];
  bool iv = 9 [json_name = "iv"];
  string time = 10 [json_name = "time"];
}

message StepPositionInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  StepPosition value = 2 [json_name = "value"];
  uint32 qds = 3 [json_name = "qds"];
  string qdsDesc = 4 [json_name = "qdsDesc"];
  bool ov = 5 [json_name = "ov"];
  bool bl = 6 [json_name = "bl"];
  bool sb = 7 [json_name = "sb"];
  bool nt = 8 [json_name = "nt"];
  bool iv = 9 [json_name = "iv"];
  string time = 10 [json_name = "time"];
}

message StepPosition {
  int32 val = 1 [json_name = "val"];
  bool hasTransient = 2 [json_name = "hasTransient"];
}

message BitString32Info {
  uint32 ioa = 1 [json_name = "ioa"];
  uint32 value = 2 [json_name = "value"];
  uint32 qds = 3 [json_name = "qds"];
  string qdsDesc = 4 [json_name = "qdsDesc"];
  bool ov = 5 [json_name = "ov"];
  bool bl = 6 [json_name = "bl"];
  bool sb = 7 [json_name = "sb"];
  bool nt = 8 [json_name = "nt"];
  bool iv = 9 [json_name = "iv"];
  string time = 10 [json_name = "time"];
}

message MeasuredValueFloatInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  float value = 2 [json_name = "value"];
  uint32 qds = 3 [json_name = "qds"];
  string qdsDesc = 4 [json_name = "qdsDesc"];
  bool ov = 5 [json_name = "ov"];
  bool bl = 6 [json_name = "bl"];
  bool sb = 7 [json_name = "sb"];
  bool nt = 8 [json_name = "nt"];
  bool iv = 9 [json_name = "iv"];
  string time = 10 [json_name = "time"];
}

message BinaryCounterReadingInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  BinaryCounterReading value = 2 [json_name = "value"];
  string time = 3 [json_name = "time"];
}

message BinaryCounterReading {
  int32 counterReading = 1 [json_name = "counterReading"];
  uint32 seqNumber = 2 [json_name = "seqNumber"];
  bool hasCarry = 3  [json_name = "hasCarry"];
  bool isAdjusted = 4 [json_name = "isAdjusted"];
  bool isInvalid = 5 [json_name = "isInvalid"];
}

message EventOfProtectionEquipmentInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  uint32 event = 2 [json_name = "event"];
  uint32 qdp = 3 [json_name = "qdp"];
  uint32 msec = 4 [json_name = "msec"];
  string time = 5 [json_name = "time"];
}

message PackedStartEventsOfProtectionEquipmentInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  uint32 event = 2 [json_name = "event"];
  uint32 qdp = 3 [json_name = "qdp"];
  uint32 msec = 4 [json_name = "msec"];
  string time = 5 [json_name = "time"];
}

message PackedOutputCircuitInfoInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  uint32 oci = 2 [json_name = "oci"];
  uint32 qdp = 3 [json_name = "qdp"];
  uint32 msec = 4 [json_name = "msec"];
  string time = 5 [json_name = "time"];
}

message PackedSinglePointWithSCDInfo {
  uint32 ioa = 1 [json_name = "ioa"];
  uint32 scd = 2 [json_name = "scd"];
  uint32 qds = 3 [json_name = "qds"];
  string qdsDesc = 4 [json_name = "qdsDesc"];
  bool ov = 5 [json_name = "ov"];
  bool bl = 6 [json_name = "bl"];
  bool sb = 7 [json_name = "sb"];
  bool nt = 8 [json_name = "nt"];
  bool iv = 9 [json_name = "iv"];
}

service IecStreamRpc {
  rpc ping (Req) returns (Res) {}
  rpc pushChunkAsdu (PushChunkAsduReq) returns (PushChunkAsduRes) {}
}
