// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: mqttstream.proto

package mqttstream

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReceiveMessageReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MQTT消息 数据量大 考虑聚合
	Messages      []*MqttMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveMessageReq) Reset() {
	*x = ReceiveMessageReq{}
	mi := &file_mqttstream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessageReq) ProtoMessage() {}

func (x *ReceiveMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_mqttstream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessageReq.ProtoReflect.Descriptor instead.
func (*ReceiveMessageReq) Descriptor() ([]byte, []int) {
	return file_mqttstream_proto_rawDescGZIP(), []int{0}
}

func (x *ReceiveMessageReq) GetMessages() []*MqttMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ReceiveMessageRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveMessageRes) Reset() {
	*x = ReceiveMessageRes{}
	mi := &file_mqttstream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessageRes) ProtoMessage() {}

func (x *ReceiveMessageRes) ProtoReflect() protoreflect.Message {
	mi := &file_mqttstream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessageRes.ProtoReflect.Descriptor instead.
func (*ReceiveMessageRes) Descriptor() ([]byte, []int) {
	return file_mqttstream_proto_rawDescGZIP(), []int{1}
}

type MqttMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话ID
	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	// 消息唯一标识
	MsgId string `protobuf:"bytes,2,opt,name=msgId,proto3" json:"msgId,omitempty"`
	// MQTT主题
	Topic string `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	// 消息体
	Payload []byte `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	// 消息发送时间
	SendTime      string `protobuf:"bytes,5,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MqttMessage) Reset() {
	*x = MqttMessage{}
	mi := &file_mqttstream_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MqttMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MqttMessage) ProtoMessage() {}

func (x *MqttMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mqttstream_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MqttMessage.ProtoReflect.Descriptor instead.
func (*MqttMessage) Descriptor() ([]byte, []int) {
	return file_mqttstream_proto_rawDescGZIP(), []int{2}
}

func (x *MqttMessage) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MqttMessage) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *MqttMessage) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *MqttMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *MqttMessage) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

var File_mqttstream_proto protoreflect.FileDescriptor

const file_mqttstream_proto_rawDesc = "" +
	"\n" +
	"\x10mqttstream.proto\x12\n" +
	"mqttstream\"H\n" +
	"\x11ReceiveMessageReq\x123\n" +
	"\bmessages\x18\x01 \x03(\v2\x17.mqttstream.MqttMessageR\bmessages\"\x13\n" +
	"\x11ReceiveMessageRes\"\x8d\x01\n" +
	"\vMqttMessage\x12\x1c\n" +
	"\tsessionId\x18\x01 \x01(\tR\tsessionId\x12\x14\n" +
	"\x05msgId\x18\x02 \x01(\tR\x05msgId\x12\x14\n" +
	"\x05topic\x18\x03 \x01(\tR\x05topic\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\x12\x1a\n" +
	"\bsendTime\x18\x05 \x01(\tR\bsendTime2\\\n" +
	"\n" +
	"MqttStream\x12N\n" +
	"\x0eReceiveMessage\x12\x1d.mqttstream.ReceiveMessageReq\x1a\x1d.mqttstream.ReceiveMessageResB=\n" +
	"\x1acom.github.mqttstream.grpcB\x0fMqttStreamProtoP\x01Z\f./mqttstreamb\x06proto3"

var (
	file_mqttstream_proto_rawDescOnce sync.Once
	file_mqttstream_proto_rawDescData []byte
)

func file_mqttstream_proto_rawDescGZIP() []byte {
	file_mqttstream_proto_rawDescOnce.Do(func() {
		file_mqttstream_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mqttstream_proto_rawDesc), len(file_mqttstream_proto_rawDesc)))
	})
	return file_mqttstream_proto_rawDescData
}

var file_mqttstream_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mqttstream_proto_goTypes = []any{
	(*ReceiveMessageReq)(nil), // 0: mqttstream.ReceiveMessageReq
	(*ReceiveMessageRes)(nil), // 1: mqttstream.ReceiveMessageRes
	(*MqttMessage)(nil),       // 2: mqttstream.MqttMessage
}
var file_mqttstream_proto_depIdxs = []int32{
	2, // 0: mqttstream.ReceiveMessageReq.messages:type_name -> mqttstream.MqttMessage
	0, // 1: mqttstream.MqttStream.ReceiveMessage:input_type -> mqttstream.ReceiveMessageReq
	1, // 2: mqttstream.MqttStream.ReceiveMessage:output_type -> mqttstream.ReceiveMessageRes
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_mqttstream_proto_init() }
func file_mqttstream_proto_init() {
	if File_mqttstream_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mqttstream_proto_rawDesc), len(file_mqttstream_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mqttstream_proto_goTypes,
		DependencyIndexes: file_mqttstream_proto_depIdxs,
		MessageInfos:      file_mqttstream_proto_msgTypes,
	}.Build()
	File_mqttstream_proto = out.File
	file_mqttstream_proto_goTypes = nil
	file_mqttstream_proto_depIdxs = nil
}
